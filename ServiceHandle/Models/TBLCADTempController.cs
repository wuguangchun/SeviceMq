using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model
{
    /// <summary>
    /// Controller class for T_BLCADTemp
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TBLCADTempController
    {
        // Preload our schema..
        TBLCADTemp thisSchemaLoad = new TBLCADTemp();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TBLCADTempCollection FetchAll()
        {
            TBLCADTempCollection coll = new TBLCADTempCollection();
            Query qry = new Query(TBLCADTemp.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TBLCADTempCollection FetchByID(object CustomerID)
        {
            TBLCADTempCollection coll = new TBLCADTempCollection().Where("CustomerID", CustomerID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TBLCADTempCollection FetchByQuery(Query qry)
        {
            TBLCADTempCollection coll = new TBLCADTempCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object CustomerID)
        {
            return (TBLCADTemp.Delete(CustomerID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object CustomerID)
        {
            return (TBLCADTemp.Destroy(CustomerID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string CustomerID,string JobCode,string Project,string Note,string Resources,DateTime BeginTime,DateTime EndTime,string MakeTime,DateTime? CreateTime,int MtmOrTz,DateTime GrabTime,int State)
	    {
		    TBLCADTemp item = new TBLCADTemp();
		    
            item.CustomerID = CustomerID;
            
            item.JobCode = JobCode;
            
            item.Project = Project;
            
            item.Note = Note;
            
            item.Resources = Resources;
            
            item.BeginTime = BeginTime;
            
            item.EndTime = EndTime;
            
            item.MakeTime = MakeTime;
            
            item.CreateTime = CreateTime;
            
            item.MtmOrTz = MtmOrTz;
            
            item.GrabTime = GrabTime;
            
            item.State = State;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string CustomerID,string JobCode,string Project,string Note,string Resources,DateTime BeginTime,DateTime EndTime,string MakeTime,DateTime? CreateTime,int MtmOrTz,DateTime GrabTime,int State)
	    {
		    TBLCADTemp item = new TBLCADTemp();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.CustomerID = CustomerID;
				
			item.JobCode = JobCode;
				
			item.Project = Project;
				
			item.Note = Note;
				
			item.Resources = Resources;
				
			item.BeginTime = BeginTime;
				
			item.EndTime = EndTime;
				
			item.MakeTime = MakeTime;
				
			item.CreateTime = CreateTime;
				
			item.MtmOrTz = MtmOrTz;
				
			item.GrabTime = GrabTime;
				
			item.State = State;
				
	        item.Save(UserName);
	    }
    }
}
