using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model{
    /// <summary>
    /// Strongly-typed collection for the VOrderListFzXf class.
    /// </summary>
    [Serializable]
    public partial class VOrderListFzXfCollection : ReadOnlyList<VOrderListFzXf, VOrderListFzXfCollection>
    {        
        public VOrderListFzXfCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the V_OrderList_FZ_XF view.
    /// </summary>
    [Serializable]
    public partial class VOrderListFzXf : ReadOnlyRecord<VOrderListFzXf>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("V_OrderList_FZ_XF", TableType.View, DataService.GetInstance("Nowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderStatus = new TableSchema.TableColumn(schema);
                colvarOrderStatus.ColumnName = "orderStatus";
                colvarOrderStatus.DataType = DbType.String;
                colvarOrderStatus.MaxLength = 100;
                colvarOrderStatus.AutoIncrement = false;
                colvarOrderStatus.IsNullable = true;
                colvarOrderStatus.IsPrimaryKey = false;
                colvarOrderStatus.IsForeignKey = false;
                colvarOrderStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderStatus);
                
                TableSchema.TableColumn colvarKhdh = new TableSchema.TableColumn(schema);
                colvarKhdh.ColumnName = "khdh";
                colvarKhdh.DataType = DbType.String;
                colvarKhdh.MaxLength = 50;
                colvarKhdh.AutoIncrement = false;
                colvarKhdh.IsNullable = true;
                colvarKhdh.IsPrimaryKey = false;
                colvarKhdh.IsForeignKey = false;
                colvarKhdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarKhdh);
                
                TableSchema.TableColumn colvarJhrq = new TableSchema.TableColumn(schema);
                colvarJhrq.ColumnName = "jhrq";
                colvarJhrq.DataType = DbType.DateTime;
                colvarJhrq.MaxLength = 0;
                colvarJhrq.AutoIncrement = false;
                colvarJhrq.IsNullable = true;
                colvarJhrq.IsPrimaryKey = false;
                colvarJhrq.IsForeignKey = false;
                colvarJhrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarJhrq);
                
                TableSchema.TableColumn colvarTrantime = new TableSchema.TableColumn(schema);
                colvarTrantime.ColumnName = "trantime";
                colvarTrantime.DataType = DbType.DateTime;
                colvarTrantime.MaxLength = 0;
                colvarTrantime.AutoIncrement = false;
                colvarTrantime.IsNullable = true;
                colvarTrantime.IsPrimaryKey = false;
                colvarTrantime.IsForeignKey = false;
                colvarTrantime.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrantime);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 50;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = true;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarFzfl = new TableSchema.TableColumn(schema);
                colvarFzfl.ColumnName = "fzfl";
                colvarFzfl.DataType = DbType.String;
                colvarFzfl.MaxLength = 250;
                colvarFzfl.AutoIncrement = false;
                colvarFzfl.IsNullable = true;
                colvarFzfl.IsPrimaryKey = false;
                colvarFzfl.IsForeignKey = false;
                colvarFzfl.IsReadOnly = false;
                
                schema.Columns.Add(colvarFzfl);
                
                TableSchema.TableColumn colvarDdsl = new TableSchema.TableColumn(schema);
                colvarDdsl.ColumnName = "ddsl";
                colvarDdsl.DataType = DbType.Int32;
                colvarDdsl.MaxLength = 0;
                colvarDdsl.AutoIncrement = false;
                colvarDdsl.IsNullable = true;
                colvarDdsl.IsPrimaryKey = false;
                colvarDdsl.IsForeignKey = false;
                colvarDdsl.IsReadOnly = false;
                
                schema.Columns.Add(colvarDdsl);
                
                TableSchema.TableColumn colvarMxid = new TableSchema.TableColumn(schema);
                colvarMxid.ColumnName = "mxid";
                colvarMxid.DataType = DbType.Int32;
                colvarMxid.MaxLength = 0;
                colvarMxid.AutoIncrement = false;
                colvarMxid.IsNullable = false;
                colvarMxid.IsPrimaryKey = false;
                colvarMxid.IsForeignKey = false;
                colvarMxid.IsReadOnly = false;
                
                schema.Columns.Add(colvarMxid);
                
                TableSchema.TableColumn colvarCustomername = new TableSchema.TableColumn(schema);
                colvarCustomername.ColumnName = "customername";
                colvarCustomername.DataType = DbType.String;
                colvarCustomername.MaxLength = 100;
                colvarCustomername.AutoIncrement = false;
                colvarCustomername.IsNullable = true;
                colvarCustomername.IsPrimaryKey = false;
                colvarCustomername.IsForeignKey = false;
                colvarCustomername.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomername);
                
                TableSchema.TableColumn colvarMlbm = new TableSchema.TableColumn(schema);
                colvarMlbm.ColumnName = "mlbm";
                colvarMlbm.DataType = DbType.String;
                colvarMlbm.MaxLength = 250;
                colvarMlbm.AutoIncrement = false;
                colvarMlbm.IsNullable = true;
                colvarMlbm.IsPrimaryKey = false;
                colvarMlbm.IsForeignKey = false;
                colvarMlbm.IsReadOnly = false;
                
                schema.Columns.Add(colvarMlbm);
                
                TableSchema.TableColumn colvarXh = new TableSchema.TableColumn(schema);
                colvarXh.ColumnName = "xh";
                colvarXh.DataType = DbType.String;
                colvarXh.MaxLength = 250;
                colvarXh.AutoIncrement = false;
                colvarXh.IsNullable = true;
                colvarXh.IsPrimaryKey = false;
                colvarXh.IsForeignKey = false;
                colvarXh.IsReadOnly = false;
                
                schema.Columns.Add(colvarXh);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Nowthwin"].AddSchema("V_OrderList_FZ_XF",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VOrderListFzXf()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VOrderListFzXf(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VOrderListFzXf(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VOrderListFzXf(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderStatus")]
        [Bindable(true)]
        public string OrderStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderStatus");
		    }
            set 
		    {
			    SetColumnValue("orderStatus", value);
            }
        }
	      
        [XmlAttribute("Khdh")]
        [Bindable(true)]
        public string Khdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("khdh");
		    }
            set 
		    {
			    SetColumnValue("khdh", value);
            }
        }
	      
        [XmlAttribute("Jhrq")]
        [Bindable(true)]
        public DateTime? Jhrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("jhrq");
		    }
            set 
		    {
			    SetColumnValue("jhrq", value);
            }
        }
	      
        [XmlAttribute("Trantime")]
        [Bindable(true)]
        public DateTime? Trantime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("trantime");
		    }
            set 
		    {
			    SetColumnValue("trantime", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("Fzfl")]
        [Bindable(true)]
        public string Fzfl 
	    {
		    get
		    {
			    return GetColumnValue<string>("fzfl");
		    }
            set 
		    {
			    SetColumnValue("fzfl", value);
            }
        }
	      
        [XmlAttribute("Ddsl")]
        [Bindable(true)]
        public int? Ddsl 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ddsl");
		    }
            set 
		    {
			    SetColumnValue("ddsl", value);
            }
        }
	      
        [XmlAttribute("Mxid")]
        [Bindable(true)]
        public int Mxid 
	    {
		    get
		    {
			    return GetColumnValue<int>("mxid");
		    }
            set 
		    {
			    SetColumnValue("mxid", value);
            }
        }
	      
        [XmlAttribute("Customername")]
        [Bindable(true)]
        public string Customername 
	    {
		    get
		    {
			    return GetColumnValue<string>("customername");
		    }
            set 
		    {
			    SetColumnValue("customername", value);
            }
        }
	      
        [XmlAttribute("Mlbm")]
        [Bindable(true)]
        public string Mlbm 
	    {
		    get
		    {
			    return GetColumnValue<string>("mlbm");
		    }
            set 
		    {
			    SetColumnValue("mlbm", value);
            }
        }
	      
        [XmlAttribute("Xh")]
        [Bindable(true)]
        public string Xh 
	    {
		    get
		    {
			    return GetColumnValue<string>("xh");
		    }
            set 
		    {
			    SetColumnValue("xh", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderStatus = @"orderStatus";
            
            public static string Khdh = @"khdh";
            
            public static string Jhrq = @"jhrq";
            
            public static string Trantime = @"trantime";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string Fzfl = @"fzfl";
            
            public static string Ddsl = @"ddsl";
            
            public static string Mxid = @"mxid";
            
            public static string Customername = @"customername";
            
            public static string Mlbm = @"mlbm";
            
            public static string Xh = @"xh";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
