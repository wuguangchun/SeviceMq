using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model
{
    /// <summary>
    /// Controller class for T_Analysis_OutPutListByFZ
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TAnalysisOutPutListByFZController
    {
        // Preload our schema..
        TAnalysisOutPutListByFZ thisSchemaLoad = new TAnalysisOutPutListByFZ();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TAnalysisOutPutListByFZCollection FetchAll()
        {
            TAnalysisOutPutListByFZCollection coll = new TAnalysisOutPutListByFZCollection();
            Query qry = new Query(TAnalysisOutPutListByFZ.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAnalysisOutPutListByFZCollection FetchByID(object OrderId)
        {
            TAnalysisOutPutListByFZCollection coll = new TAnalysisOutPutListByFZCollection().Where("orderId", OrderId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAnalysisOutPutListByFZCollection FetchByQuery(Query qry)
        {
            TAnalysisOutPutListByFZCollection coll = new TAnalysisOutPutListByFZCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object OrderId)
        {
            return (TAnalysisOutPutListByFZ.Delete(OrderId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object OrderId)
        {
            return (TAnalysisOutPutListByFZ.Destroy(OrderId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string OrderId,string CustomerId,string Project,string OrderType,string CoatType,string BodyType,string Fabric,string Mflxx,DateTime? OrderTime,DateTime? DeliveryTime,int? SpecialTime,string SpecialCode,string Styles,string StylesResult,int? Numbers,string SupportingWay,string Sizes,string Customer,DateTime? CreateTime,string OrderStatus,DateTime? CreateDate,string Pbcd,string Gydm,DateTime? Audittime,string Sfbcpsy,string Tzecode,string Scggdh,DateTime? ModifyTime,string PbcdName,DateTime? EndTime,int? FlagStatus,string Resources,DateTime? Cuttime,string Resourcesnum,string JobId,string TypeT,string Mtxx,string Fzx,DateTime? Onetime,DateTime? Ttime,DateTime? Ftime,DateTime? Fivetime,DateTime? Sixtime,string Res,string ClothType)
	    {
		    TAnalysisOutPutListByFZ item = new TAnalysisOutPutListByFZ();
		    
            item.OrderId = OrderId;
            
            item.CustomerId = CustomerId;
            
            item.Project = Project;
            
            item.OrderType = OrderType;
            
            item.CoatType = CoatType;
            
            item.BodyType = BodyType;
            
            item.Fabric = Fabric;
            
            item.Mflxx = Mflxx;
            
            item.OrderTime = OrderTime;
            
            item.DeliveryTime = DeliveryTime;
            
            item.SpecialTime = SpecialTime;
            
            item.SpecialCode = SpecialCode;
            
            item.Styles = Styles;
            
            item.StylesResult = StylesResult;
            
            item.Numbers = Numbers;
            
            item.SupportingWay = SupportingWay;
            
            item.Sizes = Sizes;
            
            item.Customer = Customer;
            
            item.CreateTime = CreateTime;
            
            item.OrderStatus = OrderStatus;
            
            item.CreateDate = CreateDate;
            
            item.Pbcd = Pbcd;
            
            item.Gydm = Gydm;
            
            item.Audittime = Audittime;
            
            item.Sfbcpsy = Sfbcpsy;
            
            item.Tzecode = Tzecode;
            
            item.Scggdh = Scggdh;
            
            item.ModifyTime = ModifyTime;
            
            item.PbcdName = PbcdName;
            
            item.EndTime = EndTime;
            
            item.FlagStatus = FlagStatus;
            
            item.Resources = Resources;
            
            item.Cuttime = Cuttime;
            
            item.Resourcesnum = Resourcesnum;
            
            item.JobId = JobId;
            
            item.TypeT = TypeT;
            
            item.Mtxx = Mtxx;
            
            item.Fzx = Fzx;
            
            item.Onetime = Onetime;
            
            item.Ttime = Ttime;
            
            item.Ftime = Ftime;
            
            item.Fivetime = Fivetime;
            
            item.Sixtime = Sixtime;
            
            item.Res = Res;
            
            item.ClothType = ClothType;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string OrderId,string CustomerId,string Project,string OrderType,string CoatType,string BodyType,string Fabric,string Mflxx,DateTime? OrderTime,DateTime? DeliveryTime,int? SpecialTime,string SpecialCode,string Styles,string StylesResult,int? Numbers,string SupportingWay,string Sizes,string Customer,DateTime? CreateTime,string OrderStatus,DateTime? CreateDate,string Pbcd,string Gydm,DateTime? Audittime,string Sfbcpsy,string Tzecode,string Scggdh,DateTime? ModifyTime,string PbcdName,DateTime? EndTime,int? FlagStatus,string Resources,DateTime? Cuttime,string Resourcesnum,string JobId,string TypeT,string Mtxx,string Fzx,DateTime? Onetime,DateTime? Ttime,DateTime? Ftime,DateTime? Fivetime,DateTime? Sixtime,string Res,string ClothType)
	    {
		    TAnalysisOutPutListByFZ item = new TAnalysisOutPutListByFZ();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.OrderId = OrderId;
				
			item.CustomerId = CustomerId;
				
			item.Project = Project;
				
			item.OrderType = OrderType;
				
			item.CoatType = CoatType;
				
			item.BodyType = BodyType;
				
			item.Fabric = Fabric;
				
			item.Mflxx = Mflxx;
				
			item.OrderTime = OrderTime;
				
			item.DeliveryTime = DeliveryTime;
				
			item.SpecialTime = SpecialTime;
				
			item.SpecialCode = SpecialCode;
				
			item.Styles = Styles;
				
			item.StylesResult = StylesResult;
				
			item.Numbers = Numbers;
				
			item.SupportingWay = SupportingWay;
				
			item.Sizes = Sizes;
				
			item.Customer = Customer;
				
			item.CreateTime = CreateTime;
				
			item.OrderStatus = OrderStatus;
				
			item.CreateDate = CreateDate;
				
			item.Pbcd = Pbcd;
				
			item.Gydm = Gydm;
				
			item.Audittime = Audittime;
				
			item.Sfbcpsy = Sfbcpsy;
				
			item.Tzecode = Tzecode;
				
			item.Scggdh = Scggdh;
				
			item.ModifyTime = ModifyTime;
				
			item.PbcdName = PbcdName;
				
			item.EndTime = EndTime;
				
			item.FlagStatus = FlagStatus;
				
			item.Resources = Resources;
				
			item.Cuttime = Cuttime;
				
			item.Resourcesnum = Resourcesnum;
				
			item.JobId = JobId;
				
			item.TypeT = TypeT;
				
			item.Mtxx = Mtxx;
				
			item.Fzx = Fzx;
				
			item.Onetime = Onetime;
				
			item.Ttime = Ttime;
				
			item.Ftime = Ftime;
				
			item.Fivetime = Fivetime;
				
			item.Sixtime = Sixtime;
				
			item.Res = Res;
				
			item.ClothType = ClothType;
				
	        item.Save(UserName);
	    }
    }
}
