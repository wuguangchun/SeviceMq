using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model{
    /// <summary>
    /// Strongly-typed collection for the ViewOrderList class.
    /// </summary>
    [Serializable]
    public partial class ViewOrderListCollection : ReadOnlyList<ViewOrderList, ViewOrderListCollection>
    {        
        public ViewOrderListCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the View_orderList view.
    /// </summary>
    [Serializable]
    public partial class ViewOrderList : ReadOnlyRecord<ViewOrderList>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("View_orderList", TableType.View, DataService.GetInstance("Nowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarCustomerId = new TableSchema.TableColumn(schema);
                colvarCustomerId.ColumnName = "customerId";
                colvarCustomerId.DataType = DbType.String;
                colvarCustomerId.MaxLength = 50;
                colvarCustomerId.AutoIncrement = false;
                colvarCustomerId.IsNullable = true;
                colvarCustomerId.IsPrimaryKey = false;
                colvarCustomerId.IsForeignKey = false;
                colvarCustomerId.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomerId);
                
                TableSchema.TableColumn colvarOrderType = new TableSchema.TableColumn(schema);
                colvarOrderType.ColumnName = "orderType";
                colvarOrderType.DataType = DbType.String;
                colvarOrderType.MaxLength = 20;
                colvarOrderType.AutoIncrement = false;
                colvarOrderType.IsNullable = true;
                colvarOrderType.IsPrimaryKey = false;
                colvarOrderType.IsForeignKey = false;
                colvarOrderType.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderType);
                
                TableSchema.TableColumn colvarFzfl = new TableSchema.TableColumn(schema);
                colvarFzfl.ColumnName = "fzfl";
                colvarFzfl.DataType = DbType.String;
                colvarFzfl.MaxLength = 50;
                colvarFzfl.AutoIncrement = false;
                colvarFzfl.IsNullable = true;
                colvarFzfl.IsPrimaryKey = false;
                colvarFzfl.IsForeignKey = false;
                colvarFzfl.IsReadOnly = false;
                
                schema.Columns.Add(colvarFzfl);
                
                TableSchema.TableColumn colvarBodyType = new TableSchema.TableColumn(schema);
                colvarBodyType.ColumnName = "bodyType";
                colvarBodyType.DataType = DbType.String;
                colvarBodyType.MaxLength = 50;
                colvarBodyType.AutoIncrement = false;
                colvarBodyType.IsNullable = true;
                colvarBodyType.IsPrimaryKey = false;
                colvarBodyType.IsForeignKey = false;
                colvarBodyType.IsReadOnly = false;
                
                schema.Columns.Add(colvarBodyType);
                
                TableSchema.TableColumn colvarFabric = new TableSchema.TableColumn(schema);
                colvarFabric.ColumnName = "fabric";
                colvarFabric.DataType = DbType.String;
                colvarFabric.MaxLength = 20;
                colvarFabric.AutoIncrement = false;
                colvarFabric.IsNullable = true;
                colvarFabric.IsPrimaryKey = false;
                colvarFabric.IsForeignKey = false;
                colvarFabric.IsReadOnly = false;
                
                schema.Columns.Add(colvarFabric);
                
                TableSchema.TableColumn colvarYlbm = new TableSchema.TableColumn(schema);
                colvarYlbm.ColumnName = "ylbm";
                colvarYlbm.DataType = DbType.String;
                colvarYlbm.MaxLength = 50;
                colvarYlbm.AutoIncrement = false;
                colvarYlbm.IsNullable = true;
                colvarYlbm.IsPrimaryKey = false;
                colvarYlbm.IsForeignKey = false;
                colvarYlbm.IsReadOnly = false;
                
                schema.Columns.Add(colvarYlbm);
                
                TableSchema.TableColumn colvarDeliveryTime = new TableSchema.TableColumn(schema);
                colvarDeliveryTime.ColumnName = "deliveryTime";
                colvarDeliveryTime.DataType = DbType.DateTime;
                colvarDeliveryTime.MaxLength = 0;
                colvarDeliveryTime.AutoIncrement = false;
                colvarDeliveryTime.IsNullable = true;
                colvarDeliveryTime.IsPrimaryKey = false;
                colvarDeliveryTime.IsForeignKey = false;
                colvarDeliveryTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryTime);
                
                TableSchema.TableColumn colvarOrderTime = new TableSchema.TableColumn(schema);
                colvarOrderTime.ColumnName = "orderTime";
                colvarOrderTime.DataType = DbType.DateTime;
                colvarOrderTime.MaxLength = 0;
                colvarOrderTime.AutoIncrement = false;
                colvarOrderTime.IsNullable = true;
                colvarOrderTime.IsPrimaryKey = false;
                colvarOrderTime.IsForeignKey = false;
                colvarOrderTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderTime);
                
                TableSchema.TableColumn colvarSpecialTime = new TableSchema.TableColumn(schema);
                colvarSpecialTime.ColumnName = "specialTime";
                colvarSpecialTime.DataType = DbType.Int32;
                colvarSpecialTime.MaxLength = 0;
                colvarSpecialTime.AutoIncrement = false;
                colvarSpecialTime.IsNullable = true;
                colvarSpecialTime.IsPrimaryKey = false;
                colvarSpecialTime.IsForeignKey = false;
                colvarSpecialTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarSpecialTime);
                
                TableSchema.TableColumn colvarSpecialCode = new TableSchema.TableColumn(schema);
                colvarSpecialCode.ColumnName = "specialCode";
                colvarSpecialCode.DataType = DbType.String;
                colvarSpecialCode.MaxLength = 100;
                colvarSpecialCode.AutoIncrement = false;
                colvarSpecialCode.IsNullable = true;
                colvarSpecialCode.IsPrimaryKey = false;
                colvarSpecialCode.IsForeignKey = false;
                colvarSpecialCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarSpecialCode);
                
                TableSchema.TableColumn colvarKsjg = new TableSchema.TableColumn(schema);
                colvarKsjg.ColumnName = "ksjg";
                colvarKsjg.DataType = DbType.String;
                colvarKsjg.MaxLength = 50;
                colvarKsjg.AutoIncrement = false;
                colvarKsjg.IsNullable = true;
                colvarKsjg.IsPrimaryKey = false;
                colvarKsjg.IsForeignKey = false;
                colvarKsjg.IsReadOnly = false;
                
                schema.Columns.Add(colvarKsjg);
                
                TableSchema.TableColumn colvarKsh = new TableSchema.TableColumn(schema);
                colvarKsh.ColumnName = "ksh";
                colvarKsh.DataType = DbType.String;
                colvarKsh.MaxLength = 20;
                colvarKsh.AutoIncrement = false;
                colvarKsh.IsNullable = true;
                colvarKsh.IsPrimaryKey = false;
                colvarKsh.IsForeignKey = false;
                colvarKsh.IsReadOnly = false;
                
                schema.Columns.Add(colvarKsh);
                
                TableSchema.TableColumn colvarSupportingWay = new TableSchema.TableColumn(schema);
                colvarSupportingWay.ColumnName = "supportingWay";
                colvarSupportingWay.DataType = DbType.String;
                colvarSupportingWay.MaxLength = 50;
                colvarSupportingWay.AutoIncrement = false;
                colvarSupportingWay.IsNullable = true;
                colvarSupportingWay.IsPrimaryKey = false;
                colvarSupportingWay.IsForeignKey = false;
                colvarSupportingWay.IsReadOnly = false;
                
                schema.Columns.Add(colvarSupportingWay);
                
                TableSchema.TableColumn colvarSizes = new TableSchema.TableColumn(schema);
                colvarSizes.ColumnName = "sizes";
                colvarSizes.DataType = DbType.String;
                colvarSizes.MaxLength = 50;
                colvarSizes.AutoIncrement = false;
                colvarSizes.IsNullable = true;
                colvarSizes.IsPrimaryKey = false;
                colvarSizes.IsForeignKey = false;
                colvarSizes.IsReadOnly = false;
                
                schema.Columns.Add(colvarSizes);
                
                TableSchema.TableColumn colvarCustomer = new TableSchema.TableColumn(schema);
                colvarCustomer.ColumnName = "customer";
                colvarCustomer.DataType = DbType.String;
                colvarCustomer.MaxLength = 100;
                colvarCustomer.AutoIncrement = false;
                colvarCustomer.IsNullable = true;
                colvarCustomer.IsPrimaryKey = false;
                colvarCustomer.IsForeignKey = false;
                colvarCustomer.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomer);
                
                TableSchema.TableColumn colvarCreateTime = new TableSchema.TableColumn(schema);
                colvarCreateTime.ColumnName = "createTime";
                colvarCreateTime.DataType = DbType.DateTime;
                colvarCreateTime.MaxLength = 0;
                colvarCreateTime.AutoIncrement = false;
                colvarCreateTime.IsNullable = true;
                colvarCreateTime.IsPrimaryKey = false;
                colvarCreateTime.IsForeignKey = false;
                colvarCreateTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateTime);
                
                TableSchema.TableColumn colvarCreateDate = new TableSchema.TableColumn(schema);
                colvarCreateDate.ColumnName = "createDate";
                colvarCreateDate.DataType = DbType.DateTime;
                colvarCreateDate.MaxLength = 0;
                colvarCreateDate.AutoIncrement = false;
                colvarCreateDate.IsNullable = true;
                colvarCreateDate.IsPrimaryKey = false;
                colvarCreateDate.IsForeignKey = false;
                colvarCreateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateDate);
                
                TableSchema.TableColumn colvarPbcd = new TableSchema.TableColumn(schema);
                colvarPbcd.ColumnName = "pbcd";
                colvarPbcd.DataType = DbType.String;
                colvarPbcd.MaxLength = 50;
                colvarPbcd.AutoIncrement = false;
                colvarPbcd.IsNullable = true;
                colvarPbcd.IsPrimaryKey = false;
                colvarPbcd.IsForeignKey = false;
                colvarPbcd.IsReadOnly = false;
                
                schema.Columns.Add(colvarPbcd);
                
                TableSchema.TableColumn colvarGylx = new TableSchema.TableColumn(schema);
                colvarGylx.ColumnName = "gylx";
                colvarGylx.DataType = DbType.String;
                colvarGylx.MaxLength = 20;
                colvarGylx.AutoIncrement = false;
                colvarGylx.IsNullable = true;
                colvarGylx.IsPrimaryKey = false;
                colvarGylx.IsForeignKey = false;
                colvarGylx.IsReadOnly = false;
                
                schema.Columns.Add(colvarGylx);
                
                TableSchema.TableColumn colvarAudittime = new TableSchema.TableColumn(schema);
                colvarAudittime.ColumnName = "audittime";
                colvarAudittime.DataType = DbType.DateTime;
                colvarAudittime.MaxLength = 0;
                colvarAudittime.AutoIncrement = false;
                colvarAudittime.IsNullable = true;
                colvarAudittime.IsPrimaryKey = false;
                colvarAudittime.IsForeignKey = false;
                colvarAudittime.IsReadOnly = false;
                
                schema.Columns.Add(colvarAudittime);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 50;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = true;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarTzecode = new TableSchema.TableColumn(schema);
                colvarTzecode.ColumnName = "tzecode";
                colvarTzecode.DataType = DbType.String;
                colvarTzecode.MaxLength = 50;
                colvarTzecode.AutoIncrement = false;
                colvarTzecode.IsNullable = true;
                colvarTzecode.IsPrimaryKey = false;
                colvarTzecode.IsForeignKey = false;
                colvarTzecode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTzecode);
                
                TableSchema.TableColumn colvarSfbcpsy = new TableSchema.TableColumn(schema);
                colvarSfbcpsy.ColumnName = "sfbcpsy";
                colvarSfbcpsy.DataType = DbType.String;
                colvarSfbcpsy.MaxLength = 50;
                colvarSfbcpsy.AutoIncrement = false;
                colvarSfbcpsy.IsNullable = true;
                colvarSfbcpsy.IsPrimaryKey = false;
                colvarSfbcpsy.IsForeignKey = false;
                colvarSfbcpsy.IsReadOnly = false;
                
                schema.Columns.Add(colvarSfbcpsy);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Nowthwin"].AddSchema("View_orderList",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewOrderList()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewOrderList(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewOrderList(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewOrderList(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("CustomerId")]
        [Bindable(true)]
        public string CustomerId 
	    {
		    get
		    {
			    return GetColumnValue<string>("customerId");
		    }
            set 
		    {
			    SetColumnValue("customerId", value);
            }
        }
	      
        [XmlAttribute("OrderType")]
        [Bindable(true)]
        public string OrderType 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderType");
		    }
            set 
		    {
			    SetColumnValue("orderType", value);
            }
        }
	      
        [XmlAttribute("Fzfl")]
        [Bindable(true)]
        public string Fzfl 
	    {
		    get
		    {
			    return GetColumnValue<string>("fzfl");
		    }
            set 
		    {
			    SetColumnValue("fzfl", value);
            }
        }
	      
        [XmlAttribute("BodyType")]
        [Bindable(true)]
        public string BodyType 
	    {
		    get
		    {
			    return GetColumnValue<string>("bodyType");
		    }
            set 
		    {
			    SetColumnValue("bodyType", value);
            }
        }
	      
        [XmlAttribute("Fabric")]
        [Bindable(true)]
        public string Fabric 
	    {
		    get
		    {
			    return GetColumnValue<string>("fabric");
		    }
            set 
		    {
			    SetColumnValue("fabric", value);
            }
        }
	      
        [XmlAttribute("Ylbm")]
        [Bindable(true)]
        public string Ylbm 
	    {
		    get
		    {
			    return GetColumnValue<string>("ylbm");
		    }
            set 
		    {
			    SetColumnValue("ylbm", value);
            }
        }
	      
        [XmlAttribute("DeliveryTime")]
        [Bindable(true)]
        public DateTime? DeliveryTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("deliveryTime");
		    }
            set 
		    {
			    SetColumnValue("deliveryTime", value);
            }
        }
	      
        [XmlAttribute("OrderTime")]
        [Bindable(true)]
        public DateTime? OrderTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("orderTime");
		    }
            set 
		    {
			    SetColumnValue("orderTime", value);
            }
        }
	      
        [XmlAttribute("SpecialTime")]
        [Bindable(true)]
        public int? SpecialTime 
	    {
		    get
		    {
			    return GetColumnValue<int?>("specialTime");
		    }
            set 
		    {
			    SetColumnValue("specialTime", value);
            }
        }
	      
        [XmlAttribute("SpecialCode")]
        [Bindable(true)]
        public string SpecialCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("specialCode");
		    }
            set 
		    {
			    SetColumnValue("specialCode", value);
            }
        }
	      
        [XmlAttribute("Ksjg")]
        [Bindable(true)]
        public string Ksjg 
	    {
		    get
		    {
			    return GetColumnValue<string>("ksjg");
		    }
            set 
		    {
			    SetColumnValue("ksjg", value);
            }
        }
	      
        [XmlAttribute("Ksh")]
        [Bindable(true)]
        public string Ksh 
	    {
		    get
		    {
			    return GetColumnValue<string>("ksh");
		    }
            set 
		    {
			    SetColumnValue("ksh", value);
            }
        }
	      
        [XmlAttribute("SupportingWay")]
        [Bindable(true)]
        public string SupportingWay 
	    {
		    get
		    {
			    return GetColumnValue<string>("supportingWay");
		    }
            set 
		    {
			    SetColumnValue("supportingWay", value);
            }
        }
	      
        [XmlAttribute("Sizes")]
        [Bindable(true)]
        public string Sizes 
	    {
		    get
		    {
			    return GetColumnValue<string>("sizes");
		    }
            set 
		    {
			    SetColumnValue("sizes", value);
            }
        }
	      
        [XmlAttribute("Customer")]
        [Bindable(true)]
        public string Customer 
	    {
		    get
		    {
			    return GetColumnValue<string>("customer");
		    }
            set 
		    {
			    SetColumnValue("customer", value);
            }
        }
	      
        [XmlAttribute("CreateTime")]
        [Bindable(true)]
        public DateTime? CreateTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("createTime");
		    }
            set 
		    {
			    SetColumnValue("createTime", value);
            }
        }
	      
        [XmlAttribute("CreateDate")]
        [Bindable(true)]
        public DateTime? CreateDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("createDate");
		    }
            set 
		    {
			    SetColumnValue("createDate", value);
            }
        }
	      
        [XmlAttribute("Pbcd")]
        [Bindable(true)]
        public string Pbcd 
	    {
		    get
		    {
			    return GetColumnValue<string>("pbcd");
		    }
            set 
		    {
			    SetColumnValue("pbcd", value);
            }
        }
	      
        [XmlAttribute("Gylx")]
        [Bindable(true)]
        public string Gylx 
	    {
		    get
		    {
			    return GetColumnValue<string>("gylx");
		    }
            set 
		    {
			    SetColumnValue("gylx", value);
            }
        }
	      
        [XmlAttribute("Audittime")]
        [Bindable(true)]
        public DateTime? Audittime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("audittime");
		    }
            set 
		    {
			    SetColumnValue("audittime", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("Tzecode")]
        [Bindable(true)]
        public string Tzecode 
	    {
		    get
		    {
			    return GetColumnValue<string>("tzecode");
		    }
            set 
		    {
			    SetColumnValue("tzecode", value);
            }
        }
	      
        [XmlAttribute("Sfbcpsy")]
        [Bindable(true)]
        public string Sfbcpsy 
	    {
		    get
		    {
			    return GetColumnValue<string>("sfbcpsy");
		    }
            set 
		    {
			    SetColumnValue("sfbcpsy", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string CustomerId = @"customerId";
            
            public static string OrderType = @"orderType";
            
            public static string Fzfl = @"fzfl";
            
            public static string BodyType = @"bodyType";
            
            public static string Fabric = @"fabric";
            
            public static string Ylbm = @"ylbm";
            
            public static string DeliveryTime = @"deliveryTime";
            
            public static string OrderTime = @"orderTime";
            
            public static string SpecialTime = @"specialTime";
            
            public static string SpecialCode = @"specialCode";
            
            public static string Ksjg = @"ksjg";
            
            public static string Ksh = @"ksh";
            
            public static string SupportingWay = @"supportingWay";
            
            public static string Sizes = @"sizes";
            
            public static string Customer = @"customer";
            
            public static string CreateTime = @"createTime";
            
            public static string CreateDate = @"createDate";
            
            public static string Pbcd = @"pbcd";
            
            public static string Gylx = @"gylx";
            
            public static string Audittime = @"audittime";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string Tzecode = @"tzecode";
            
            public static string Sfbcpsy = @"sfbcpsy";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
