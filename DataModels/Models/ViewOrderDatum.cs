using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model{
    /// <summary>
    /// Strongly-typed collection for the ViewOrderDatum class.
    /// </summary>
    [Serializable]
    public partial class ViewOrderDatumCollection : ReadOnlyList<ViewOrderDatum, ViewOrderDatumCollection>
    {        
        public ViewOrderDatumCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the View_OrderData view.
    /// </summary>
    [Serializable]
    public partial class ViewOrderDatum : ReadOnlyRecord<ViewOrderDatum>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("View_OrderData", TableType.View, DataService.GetInstance("Nowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderid = new TableSchema.TableColumn(schema);
                colvarOrderid.ColumnName = "orderid";
                colvarOrderid.DataType = DbType.Int32;
                colvarOrderid.MaxLength = 0;
                colvarOrderid.AutoIncrement = false;
                colvarOrderid.IsNullable = false;
                colvarOrderid.IsPrimaryKey = false;
                colvarOrderid.IsForeignKey = false;
                colvarOrderid.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderid);
                
                TableSchema.TableColumn colvarKhdh = new TableSchema.TableColumn(schema);
                colvarKhdh.ColumnName = "khdh";
                colvarKhdh.DataType = DbType.String;
                colvarKhdh.MaxLength = 50;
                colvarKhdh.AutoIncrement = false;
                colvarKhdh.IsNullable = true;
                colvarKhdh.IsPrimaryKey = false;
                colvarKhdh.IsForeignKey = false;
                colvarKhdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarKhdh);
                
                TableSchema.TableColumn colvarTrantime = new TableSchema.TableColumn(schema);
                colvarTrantime.ColumnName = "trantime";
                colvarTrantime.DataType = DbType.DateTime;
                colvarTrantime.MaxLength = 0;
                colvarTrantime.AutoIncrement = false;
                colvarTrantime.IsNullable = true;
                colvarTrantime.IsPrimaryKey = false;
                colvarTrantime.IsForeignKey = false;
                colvarTrantime.IsReadOnly = false;
                
                schema.Columns.Add(colvarTrantime);
                
                TableSchema.TableColumn colvarJhrq = new TableSchema.TableColumn(schema);
                colvarJhrq.ColumnName = "jhrq";
                colvarJhrq.DataType = DbType.DateTime;
                colvarJhrq.MaxLength = 0;
                colvarJhrq.AutoIncrement = false;
                colvarJhrq.IsNullable = true;
                colvarJhrq.IsPrimaryKey = false;
                colvarJhrq.IsForeignKey = false;
                colvarJhrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarJhrq);
                
                TableSchema.TableColumn colvarCreatetime = new TableSchema.TableColumn(schema);
                colvarCreatetime.ColumnName = "createtime";
                colvarCreatetime.DataType = DbType.DateTime;
                colvarCreatetime.MaxLength = 0;
                colvarCreatetime.AutoIncrement = false;
                colvarCreatetime.IsNullable = true;
                colvarCreatetime.IsPrimaryKey = false;
                colvarCreatetime.IsForeignKey = false;
                colvarCreatetime.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatetime);
                
                TableSchema.TableColumn colvarSldl = new TableSchema.TableColumn(schema);
                colvarSldl.ColumnName = "sldl";
                colvarSldl.DataType = DbType.String;
                colvarSldl.MaxLength = 50;
                colvarSldl.AutoIncrement = false;
                colvarSldl.IsNullable = true;
                colvarSldl.IsPrimaryKey = false;
                colvarSldl.IsForeignKey = false;
                colvarSldl.IsReadOnly = false;
                
                schema.Columns.Add(colvarSldl);
                
                TableSchema.TableColumn colvarCustomername = new TableSchema.TableColumn(schema);
                colvarCustomername.ColumnName = "customername";
                colvarCustomername.DataType = DbType.String;
                colvarCustomername.MaxLength = 100;
                colvarCustomername.AutoIncrement = false;
                colvarCustomername.IsNullable = true;
                colvarCustomername.IsPrimaryKey = false;
                colvarCustomername.IsForeignKey = false;
                colvarCustomername.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomername);
                
                TableSchema.TableColumn colvarTxtz = new TableSchema.TableColumn(schema);
                colvarTxtz.ColumnName = "txtz";
                colvarTxtz.DataType = DbType.String;
                colvarTxtz.MaxLength = 100;
                colvarTxtz.AutoIncrement = false;
                colvarTxtz.IsNullable = true;
                colvarTxtz.IsPrimaryKey = false;
                colvarTxtz.IsForeignKey = false;
                colvarTxtz.IsReadOnly = false;
                
                schema.Columns.Add(colvarTxtz);
                
                TableSchema.TableColumn colvarXhSyKh = new TableSchema.TableColumn(schema);
                colvarXhSyKh.ColumnName = "xh_sy_kh";
                colvarXhSyKh.DataType = DbType.String;
                colvarXhSyKh.MaxLength = -1;
                colvarXhSyKh.AutoIncrement = false;
                colvarXhSyKh.IsNullable = true;
                colvarXhSyKh.IsPrimaryKey = false;
                colvarXhSyKh.IsForeignKey = false;
                colvarXhSyKh.IsReadOnly = false;
                
                schema.Columns.Add(colvarXhSyKh);
                
                TableSchema.TableColumn colvarPbcd = new TableSchema.TableColumn(schema);
                colvarPbcd.ColumnName = "pbcd";
                colvarPbcd.DataType = DbType.String;
                colvarPbcd.MaxLength = 50;
                colvarPbcd.AutoIncrement = false;
                colvarPbcd.IsNullable = true;
                colvarPbcd.IsPrimaryKey = false;
                colvarPbcd.IsForeignKey = false;
                colvarPbcd.IsReadOnly = false;
                
                schema.Columns.Add(colvarPbcd);
                
                TableSchema.TableColumn colvarAudittime = new TableSchema.TableColumn(schema);
                colvarAudittime.ColumnName = "audittime";
                colvarAudittime.DataType = DbType.DateTime;
                colvarAudittime.MaxLength = 0;
                colvarAudittime.AutoIncrement = false;
                colvarAudittime.IsNullable = true;
                colvarAudittime.IsPrimaryKey = false;
                colvarAudittime.IsForeignKey = false;
                colvarAudittime.IsReadOnly = false;
                
                schema.Columns.Add(colvarAudittime);
                
                TableSchema.TableColumn colvarTzecode = new TableSchema.TableColumn(schema);
                colvarTzecode.ColumnName = "tzecode";
                colvarTzecode.DataType = DbType.String;
                colvarTzecode.MaxLength = 50;
                colvarTzecode.AutoIncrement = false;
                colvarTzecode.IsNullable = true;
                colvarTzecode.IsPrimaryKey = false;
                colvarTzecode.IsForeignKey = false;
                colvarTzecode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTzecode);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 50;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = true;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarFlagDelete = new TableSchema.TableColumn(schema);
                colvarFlagDelete.ColumnName = "flagDelete";
                colvarFlagDelete.DataType = DbType.Int32;
                colvarFlagDelete.MaxLength = 0;
                colvarFlagDelete.AutoIncrement = false;
                colvarFlagDelete.IsNullable = true;
                colvarFlagDelete.IsPrimaryKey = false;
                colvarFlagDelete.IsForeignKey = false;
                colvarFlagDelete.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlagDelete);
                
                TableSchema.TableColumn colvarOrderType = new TableSchema.TableColumn(schema);
                colvarOrderType.ColumnName = "orderType";
                colvarOrderType.DataType = DbType.Int32;
                colvarOrderType.MaxLength = 0;
                colvarOrderType.AutoIncrement = false;
                colvarOrderType.IsNullable = true;
                colvarOrderType.IsPrimaryKey = false;
                colvarOrderType.IsForeignKey = false;
                colvarOrderType.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderType);
                
                TableSchema.TableColumn colvarMdmc = new TableSchema.TableColumn(schema);
                colvarMdmc.ColumnName = "mdmc";
                colvarMdmc.DataType = DbType.String;
                colvarMdmc.MaxLength = 50;
                colvarMdmc.AutoIncrement = false;
                colvarMdmc.IsNullable = true;
                colvarMdmc.IsPrimaryKey = false;
                colvarMdmc.IsForeignKey = false;
                colvarMdmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarMdmc);
                
                TableSchema.TableColumn colvarMddm = new TableSchema.TableColumn(schema);
                colvarMddm.ColumnName = "mddm";
                colvarMddm.DataType = DbType.String;
                colvarMddm.MaxLength = 100;
                colvarMddm.AutoIncrement = false;
                colvarMddm.IsNullable = true;
                colvarMddm.IsPrimaryKey = false;
                colvarMddm.IsForeignKey = false;
                colvarMddm.IsReadOnly = false;
                
                schema.Columns.Add(colvarMddm);
                
                TableSchema.TableColumn colvarKhzb = new TableSchema.TableColumn(schema);
                colvarKhzb.ColumnName = "Khzb";
                colvarKhzb.DataType = DbType.String;
                colvarKhzb.MaxLength = 10;
                colvarKhzb.AutoIncrement = false;
                colvarKhzb.IsNullable = true;
                colvarKhzb.IsPrimaryKey = false;
                colvarKhzb.IsForeignKey = false;
                colvarKhzb.IsReadOnly = false;
                
                schema.Columns.Add(colvarKhzb);
                
                TableSchema.TableColumn colvarHtbh = new TableSchema.TableColumn(schema);
                colvarHtbh.ColumnName = "HTBH";
                colvarHtbh.DataType = DbType.String;
                colvarHtbh.MaxLength = 50;
                colvarHtbh.AutoIncrement = false;
                colvarHtbh.IsNullable = true;
                colvarHtbh.IsPrimaryKey = false;
                colvarHtbh.IsForeignKey = false;
                colvarHtbh.IsReadOnly = false;
                
                schema.Columns.Add(colvarHtbh);
                
                TableSchema.TableColumn colvarState = new TableSchema.TableColumn(schema);
                colvarState.ColumnName = "State";
                colvarState.DataType = DbType.String;
                colvarState.MaxLength = 255;
                colvarState.AutoIncrement = false;
                colvarState.IsNullable = true;
                colvarState.IsPrimaryKey = false;
                colvarState.IsForeignKey = false;
                colvarState.IsReadOnly = false;
                
                schema.Columns.Add(colvarState);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Nowthwin"].AddSchema("View_OrderData",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewOrderDatum()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewOrderDatum(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewOrderDatum(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewOrderDatum(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Orderid")]
        [Bindable(true)]
        public int Orderid 
	    {
		    get
		    {
			    return GetColumnValue<int>("orderid");
		    }
            set 
		    {
			    SetColumnValue("orderid", value);
            }
        }
	      
        [XmlAttribute("Khdh")]
        [Bindable(true)]
        public string Khdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("khdh");
		    }
            set 
		    {
			    SetColumnValue("khdh", value);
            }
        }
	      
        [XmlAttribute("Trantime")]
        [Bindable(true)]
        public DateTime? Trantime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("trantime");
		    }
            set 
		    {
			    SetColumnValue("trantime", value);
            }
        }
	      
        [XmlAttribute("Jhrq")]
        [Bindable(true)]
        public DateTime? Jhrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("jhrq");
		    }
            set 
		    {
			    SetColumnValue("jhrq", value);
            }
        }
	      
        [XmlAttribute("Createtime")]
        [Bindable(true)]
        public DateTime? Createtime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("createtime");
		    }
            set 
		    {
			    SetColumnValue("createtime", value);
            }
        }
	      
        [XmlAttribute("Sldl")]
        [Bindable(true)]
        public string Sldl 
	    {
		    get
		    {
			    return GetColumnValue<string>("sldl");
		    }
            set 
		    {
			    SetColumnValue("sldl", value);
            }
        }
	      
        [XmlAttribute("Customername")]
        [Bindable(true)]
        public string Customername 
	    {
		    get
		    {
			    return GetColumnValue<string>("customername");
		    }
            set 
		    {
			    SetColumnValue("customername", value);
            }
        }
	      
        [XmlAttribute("Txtz")]
        [Bindable(true)]
        public string Txtz 
	    {
		    get
		    {
			    return GetColumnValue<string>("txtz");
		    }
            set 
		    {
			    SetColumnValue("txtz", value);
            }
        }
	      
        [XmlAttribute("XhSyKh")]
        [Bindable(true)]
        public string XhSyKh 
	    {
		    get
		    {
			    return GetColumnValue<string>("xh_sy_kh");
		    }
            set 
		    {
			    SetColumnValue("xh_sy_kh", value);
            }
        }
	      
        [XmlAttribute("Pbcd")]
        [Bindable(true)]
        public string Pbcd 
	    {
		    get
		    {
			    return GetColumnValue<string>("pbcd");
		    }
            set 
		    {
			    SetColumnValue("pbcd", value);
            }
        }
	      
        [XmlAttribute("Audittime")]
        [Bindable(true)]
        public DateTime? Audittime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("audittime");
		    }
            set 
		    {
			    SetColumnValue("audittime", value);
            }
        }
	      
        [XmlAttribute("Tzecode")]
        [Bindable(true)]
        public string Tzecode 
	    {
		    get
		    {
			    return GetColumnValue<string>("tzecode");
		    }
            set 
		    {
			    SetColumnValue("tzecode", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("FlagDelete")]
        [Bindable(true)]
        public int? FlagDelete 
	    {
		    get
		    {
			    return GetColumnValue<int?>("flagDelete");
		    }
            set 
		    {
			    SetColumnValue("flagDelete", value);
            }
        }
	      
        [XmlAttribute("OrderType")]
        [Bindable(true)]
        public int? OrderType 
	    {
		    get
		    {
			    return GetColumnValue<int?>("orderType");
		    }
            set 
		    {
			    SetColumnValue("orderType", value);
            }
        }
	      
        [XmlAttribute("Mdmc")]
        [Bindable(true)]
        public string Mdmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("mdmc");
		    }
            set 
		    {
			    SetColumnValue("mdmc", value);
            }
        }
	      
        [XmlAttribute("Mddm")]
        [Bindable(true)]
        public string Mddm 
	    {
		    get
		    {
			    return GetColumnValue<string>("mddm");
		    }
            set 
		    {
			    SetColumnValue("mddm", value);
            }
        }
	      
        [XmlAttribute("Khzb")]
        [Bindable(true)]
        public string Khzb 
	    {
		    get
		    {
			    return GetColumnValue<string>("Khzb");
		    }
            set 
		    {
			    SetColumnValue("Khzb", value);
            }
        }
	      
        [XmlAttribute("Htbh")]
        [Bindable(true)]
        public string Htbh 
	    {
		    get
		    {
			    return GetColumnValue<string>("HTBH");
		    }
            set 
		    {
			    SetColumnValue("HTBH", value);
            }
        }
	      
        [XmlAttribute("State")]
        [Bindable(true)]
        public string State 
	    {
		    get
		    {
			    return GetColumnValue<string>("State");
		    }
            set 
		    {
			    SetColumnValue("State", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Orderid = @"orderid";
            
            public static string Khdh = @"khdh";
            
            public static string Trantime = @"trantime";
            
            public static string Jhrq = @"jhrq";
            
            public static string Createtime = @"createtime";
            
            public static string Sldl = @"sldl";
            
            public static string Customername = @"customername";
            
            public static string Txtz = @"txtz";
            
            public static string XhSyKh = @"xh_sy_kh";
            
            public static string Pbcd = @"pbcd";
            
            public static string Audittime = @"audittime";
            
            public static string Tzecode = @"tzecode";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string FlagDelete = @"flagDelete";
            
            public static string OrderType = @"orderType";
            
            public static string Mdmc = @"mdmc";
            
            public static string Mddm = @"mddm";
            
            public static string Khzb = @"Khzb";
            
            public static string Htbh = @"HTBH";
            
            public static string State = @"State";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
