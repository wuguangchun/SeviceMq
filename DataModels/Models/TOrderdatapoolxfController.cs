using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model
{
    /// <summary>
    /// Controller class for T_orderdatapoolxf
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TOrderdatapoolxfController
    {
        // Preload our schema..
        TOrderdatapoolxf thisSchemaLoad = new TOrderdatapoolxf();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TOrderdatapoolxfCollection FetchAll()
        {
            TOrderdatapoolxfCollection coll = new TOrderdatapoolxfCollection();
            Query qry = new Query(TOrderdatapoolxf.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TOrderdatapoolxfCollection FetchByID(object Mxid)
        {
            TOrderdatapoolxfCollection coll = new TOrderdatapoolxfCollection().Where("mxid", Mxid).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TOrderdatapoolxfCollection FetchByQuery(Query qry)
        {
            TOrderdatapoolxfCollection coll = new TOrderdatapoolxfCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Mxid)
        {
            return (TOrderdatapoolxf.Delete(Mxid) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Mxid)
        {
            return (TOrderdatapoolxf.Destroy(Mxid) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Jqts,int Mxid,int Orderid,string Khdh,string Ksh,string Fzfl,string Mlbm,int? Ddsl,string Hxjg,string Ksjg,string Gylx,string Sfbcpsy,string Xh,string Xhsy,string Xhnz,string Xhwz,string Mlsx,int? FlagDelete,int? Num,int? FlagStatus,DateTime? Jhrq,DateTime? Trantime,string Sldl,string Scjhbz)
	    {
		    TOrderdatapoolxf item = new TOrderdatapoolxf();
		    
            item.Jqts = Jqts;
            
            item.Mxid = Mxid;
            
            item.Orderid = Orderid;
            
            item.Khdh = Khdh;
            
            item.Ksh = Ksh;
            
            item.Fzfl = Fzfl;
            
            item.Mlbm = Mlbm;
            
            item.Ddsl = Ddsl;
            
            item.Hxjg = Hxjg;
            
            item.Ksjg = Ksjg;
            
            item.Gylx = Gylx;
            
            item.Sfbcpsy = Sfbcpsy;
            
            item.Xh = Xh;
            
            item.Xhsy = Xhsy;
            
            item.Xhnz = Xhnz;
            
            item.Xhwz = Xhwz;
            
            item.Mlsx = Mlsx;
            
            item.FlagDelete = FlagDelete;
            
            item.Num = Num;
            
            item.FlagStatus = FlagStatus;
            
            item.Jhrq = Jhrq;
            
            item.Trantime = Trantime;
            
            item.Sldl = Sldl;
            
            item.Scjhbz = Scjhbz;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string Jqts,int Mxid,int Orderid,string Khdh,string Ksh,string Fzfl,string Mlbm,int? Ddsl,string Hxjg,string Ksjg,string Gylx,string Sfbcpsy,string Xh,string Xhsy,string Xhnz,string Xhwz,string Mlsx,int? FlagDelete,int? Num,int? FlagStatus,DateTime? Jhrq,DateTime? Trantime,string Sldl,string Scjhbz)
	    {
		    TOrderdatapoolxf item = new TOrderdatapoolxf();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Jqts = Jqts;
				
			item.Mxid = Mxid;
				
			item.Orderid = Orderid;
				
			item.Khdh = Khdh;
				
			item.Ksh = Ksh;
				
			item.Fzfl = Fzfl;
				
			item.Mlbm = Mlbm;
				
			item.Ddsl = Ddsl;
				
			item.Hxjg = Hxjg;
				
			item.Ksjg = Ksjg;
				
			item.Gylx = Gylx;
				
			item.Sfbcpsy = Sfbcpsy;
				
			item.Xh = Xh;
				
			item.Xhsy = Xhsy;
				
			item.Xhnz = Xhnz;
				
			item.Xhwz = Xhwz;
				
			item.Mlsx = Mlsx;
				
			item.FlagDelete = FlagDelete;
				
			item.Num = Num;
				
			item.FlagStatus = FlagStatus;
				
			item.Jhrq = Jhrq;
				
			item.Trantime = Trantime;
				
			item.Sldl = Sldl;
				
			item.Scjhbz = Scjhbz;
				
	        item.Save(UserName);
	    }
    }
}
