using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model
{
    /// <summary>
    /// Controller class for T_BlankingDetailes
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TBlankingDetaileController
    {
        // Preload our schema..
        TBlankingDetaile thisSchemaLoad = new TBlankingDetaile();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TBlankingDetaileCollection FetchAll()
        {
            TBlankingDetaileCollection coll = new TBlankingDetaileCollection();
            Query qry = new Query(TBlankingDetaile.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TBlankingDetaileCollection FetchByID(object Id)
        {
            TBlankingDetaileCollection coll = new TBlankingDetaileCollection().Where("id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TBlankingDetaileCollection FetchByQuery(Query qry)
        {
            TBlankingDetaileCollection coll = new TBlankingDetaileCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (TBlankingDetaile.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (TBlankingDetaile.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(DateTime? CreateTime,int? WmsStatus,int? PrintStatus,int? PrintNum,string CustumerId,string IsOk,string Technology,string Count,int? PrintNo,string MaterialCode,double? Length,double? Width,string GridAttribute,double? Grid,string MaterialParts,string LineNum,string LreceiveTime,string Note,DateTime? TailoringDeliveryDate,string ProjectNumber,string CutTime,int? ResourceNum,string Scgcdm,string Cjdate,string Cjtime,string OrderType)
	    {
		    TBlankingDetaile item = new TBlankingDetaile();
		    
            item.CreateTime = CreateTime;
            
            item.WmsStatus = WmsStatus;
            
            item.PrintStatus = PrintStatus;
            
            item.PrintNum = PrintNum;
            
            item.CustumerId = CustumerId;
            
            item.IsOk = IsOk;
            
            item.Technology = Technology;
            
            item.Count = Count;
            
            item.PrintNo = PrintNo;
            
            item.MaterialCode = MaterialCode;
            
            item.Length = Length;
            
            item.Width = Width;
            
            item.GridAttribute = GridAttribute;
            
            item.Grid = Grid;
            
            item.MaterialParts = MaterialParts;
            
            item.LineNum = LineNum;
            
            item.LreceiveTime = LreceiveTime;
            
            item.Note = Note;
            
            item.TailoringDeliveryDate = TailoringDeliveryDate;
            
            item.ProjectNumber = ProjectNumber;
            
            item.CutTime = CutTime;
            
            item.ResourceNum = ResourceNum;
            
            item.Scgcdm = Scgcdm;
            
            item.Cjdate = Cjdate;
            
            item.Cjtime = Cjtime;
            
            item.OrderType = OrderType;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,DateTime? CreateTime,int? WmsStatus,int? PrintStatus,int? PrintNum,string CustumerId,string IsOk,string Technology,string Count,int? PrintNo,string MaterialCode,double? Length,double? Width,string GridAttribute,double? Grid,string MaterialParts,string LineNum,string LreceiveTime,string Note,DateTime? TailoringDeliveryDate,string ProjectNumber,string CutTime,int? ResourceNum,string Scgcdm,string Cjdate,string Cjtime,string OrderType)
	    {
		    TBlankingDetaile item = new TBlankingDetaile();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.CreateTime = CreateTime;
				
			item.WmsStatus = WmsStatus;
				
			item.PrintStatus = PrintStatus;
				
			item.PrintNum = PrintNum;
				
			item.CustumerId = CustumerId;
				
			item.IsOk = IsOk;
				
			item.Technology = Technology;
				
			item.Count = Count;
				
			item.PrintNo = PrintNo;
				
			item.MaterialCode = MaterialCode;
				
			item.Length = Length;
				
			item.Width = Width;
				
			item.GridAttribute = GridAttribute;
				
			item.Grid = Grid;
				
			item.MaterialParts = MaterialParts;
				
			item.LineNum = LineNum;
				
			item.LreceiveTime = LreceiveTime;
				
			item.Note = Note;
				
			item.TailoringDeliveryDate = TailoringDeliveryDate;
				
			item.ProjectNumber = ProjectNumber;
				
			item.CutTime = CutTime;
				
			item.ResourceNum = ResourceNum;
				
			item.Scgcdm = Scgcdm;
				
			item.Cjdate = Cjdate;
				
			item.Cjtime = Cjtime;
				
			item.OrderType = OrderType;
				
	        item.Save(UserName);
	    }
    }
}
