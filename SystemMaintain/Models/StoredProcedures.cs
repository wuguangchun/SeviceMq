using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the firstP Procedure
        /// </summary>
        public static StoredProcedure FirstP()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("firstP", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Get_T_Analysis_OutputListWithCode_Guid Procedure
        /// </summary>
        public static StoredProcedure GetTAnalysisOutputListWithCodeGuid()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Get_T_Analysis_OutputListWithCode_Guid", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the newFirstP Procedure
        /// </summary>
        public static StoredProcedure NewFirstP()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("newFirstP", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the P_File_Trans Procedure
        /// </summary>
        public static StoredProcedure PFileTrans(string APSIDS, string cRESULT)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("P_File_Trans", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@APSIDS", APSIDS, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@cRESULT", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the P_Gen_CutterAPS Procedure
        /// </summary>
        public static StoredProcedure PGenCutterAPS(string PLANMIDS, string Factory, int? CutterNum, string DateX, string Time, int? Cutcount, string isJIaJi, string cRESULT)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("P_Gen_CutterAPS", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@PLANMIDS", PLANMIDS, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Factory", Factory, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CutterNum", CutterNum, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Date", DateX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Time", Time, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Cutcount", Cutcount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@isJIaJi", isJIaJi, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@cRESULT", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the P_Gen_CutterAPS_Anti Procedure
        /// </summary>
        public static StoredProcedure PGenCutterAPSAnti(string PLANMID, string cRESULT)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("P_Gen_CutterAPS_Anti", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@PLANMID", PLANMID, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@cRESULT", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the P_GetPlanNLZY Procedure
        /// </summary>
        public static StoredProcedure PGetPlanNLZY(string SCZSDL, string jhnlzy)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("P_GetPlanNLZY", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@SCZSDL", SCZSDL, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@jhnlzy", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the P_Material_Cut Procedure
        /// </summary>
        public static StoredProcedure PMaterialCut(string APSIDS, string OPCODE, string OPNAME, string MATLENGTH, string OPREMARK, string cRESULT)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("P_Material_Cut", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@APSIDS", APSIDS, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@OPCODE", OPCODE, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@OPNAME", OPNAME, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@MATLENGTH", MATLENGTH, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@OPREMARK", OPREMARK, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@cRESULT", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the P_Material_Print Procedure
        /// </summary>
        public static StoredProcedure PMaterialPrint(string APSIDS, string IpAdress, string OPCODE, string Print, string cRESULT)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("P_Material_Print", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@APSIDS", APSIDS, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@IpAdress", IpAdress, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@OPCODE", OPCODE, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Print", Print, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@cRESULT", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_APSResultOut Procedure
        /// </summary>
        public static StoredProcedure ProcAPSResultOut()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_APSResultOut", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_CadOutTvColumn Procedure
        /// </summary>
        public static StoredProcedure ProcCadOutTvColumn(string BeginDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_CadOutTvColumn", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@BeginDate", BeginDate, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GeneratePlanCode_New Procedure
        /// </summary>
        public static StoredProcedure ProcGeneratePlanCodeNew(int? GzxfCount, int? GzxkCount, int? xfCount, int? xkCount, DateTime? benginTime)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GeneratePlanCode_New", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@GzxfCount", GzxfCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@GzxkCount", GzxkCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@xfCount", xfCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@xkCount", xkCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@benginTime", benginTime, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GeneratePlanCodeCY Procedure
        /// </summary>
        public static StoredProcedure ProcGeneratePlanCodeCY()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GeneratePlanCodeCY", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GetNextTime Procedure
        /// </summary>
        public static StoredProcedure ProcGetNextTime()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GetNextTime", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GetNextTimeShirt Procedure
        /// </summary>
        public static StoredProcedure ProcGetNextTimeShirt()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GetNextTimeShirt", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GetPlansDataCY_Cient Procedure
        /// </summary>
        public static StoredProcedure ProcGetPlansDataCYCient(DateTime? BeginTime)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GetPlansDataCY_Cient", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@BeginTime", BeginTime, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GetPlansDataCY_delete Procedure
        /// </summary>
        public static StoredProcedure ProcGetPlansDataCYDelete(DateTime? BeginTime)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GetPlansDataCY_delete", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@BeginTime", BeginTime, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GetPlansDataCY_New Procedure
        /// </summary>
        public static StoredProcedure ProcGetPlansDataCYNew(DateTime? BeginTime)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GetPlansDataCY_New", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@BeginTime", BeginTime, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GetPlansTZDataCy Procedure
        /// </summary>
        public static StoredProcedure ProcGetPlansTZDataCy()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GetPlansTZDataCy", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_GetXfmtmjh Procedure
        /// </summary>
        public static StoredProcedure ProcGetXfmtmjh()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_GetXfmtmjh", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_MTMJH_New Procedure
        /// </summary>
        public static StoredProcedure ProcMtmjhNew(int? GzxfCount, int? GzxkCount, int? xfCount, int? xkCount)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_MTMJH_New", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@GzxfCount", GzxfCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@GzxkCount", GzxkCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@xfCount", xfCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@xkCount", xkCount, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_MTMJH_新 Procedure
        /// </summary>
        public static StoredProcedure ProcMtmjh新(int? GzxfCount, int? GzxkCount, int? xfCount, int? xkCount)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_MTMJH_新", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@GzxfCount", GzxfCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@GzxkCount", GzxkCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@xfCount", xfCount, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@xkCount", xkCount, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the PROC_OrderList_Backup Procedure
        /// </summary>
        public static StoredProcedure ProcOrderListBackup()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("PROC_OrderList_Backup", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the PROC_PlanTypeGnw_delete Procedure
        /// </summary>
        public static StoredProcedure ProcPlanTypeGnwDelete()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("PROC_PlanTypeGnw_delete", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the proc_sql_webservice Procedure
        /// </summary>
        public static StoredProcedure ProcSqlWebservice(string OrderId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("proc_sql_webservice", DataService.GetInstance("Nowthwin"), "dbo");
        	
            sp.Command.AddParameter("@OrderId", OrderId, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Proc_TzXfPlan Procedure
        /// </summary>
        public static StoredProcedure ProcTzXfPlan()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Proc_TzXfPlan", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the secondP Procedure
        /// </summary>
        public static StoredProcedure SecondP()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("secondP", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the UpdateT_APSCount Procedure
        /// </summary>
        public static StoredProcedure UpdateTAPSCount()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("UpdateT_APSCount", DataService.GetInstance("Nowthwin"), "");
        	
            return sp;
        }
        
    }
    
}
