using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
	/// <summary>
	/// Strongly-typed collection for the XST06 class.
	/// </summary>
    [Serializable]
	public partial class XST06Collection : ActiveList<XST06, XST06Collection>
	{	   
		public XST06Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>XST06Collection</returns>
		public XST06Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                XST06 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XST06 table.
	/// </summary>
	[Serializable]
	public partial class XST06 : ActiveRecord<XST06>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public XST06()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public XST06(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public XST06(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public XST06(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XST06", TableType.Table, DataService.GetInstance("ErpNowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"FYERP";
				//columns
				
				TableSchema.TableColumn colvarXskoul = new TableSchema.TableColumn(schema);
				colvarXskoul.ColumnName = "XSKOUL";
				colvarXskoul.DataType = DbType.Decimal;
				colvarXskoul.MaxLength = 0;
				colvarXskoul.AutoIncrement = false;
				colvarXskoul.IsNullable = true;
				colvarXskoul.IsPrimaryKey = false;
				colvarXskoul.IsForeignKey = false;
				colvarXskoul.IsReadOnly = false;
				colvarXskoul.DefaultSetting = @"";
				colvarXskoul.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskoul);
				
				TableSchema.TableColumn colvarXshuil = new TableSchema.TableColumn(schema);
				colvarXshuil.ColumnName = "XSHUIL";
				colvarXshuil.DataType = DbType.Decimal;
				colvarXshuil.MaxLength = 0;
				colvarXshuil.AutoIncrement = false;
				colvarXshuil.IsNullable = true;
				colvarXshuil.IsPrimaryKey = false;
				colvarXshuil.IsForeignKey = false;
				colvarXshuil.IsReadOnly = false;
				colvarXshuil.DefaultSetting = @"";
				colvarXshuil.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXshuil);
				
				TableSchema.TableColumn colvarXsdjbz = new TableSchema.TableColumn(schema);
				colvarXsdjbz.ColumnName = "XSDJBZ";
				colvarXsdjbz.DataType = DbType.String;
				colvarXsdjbz.MaxLength = 1;
				colvarXsdjbz.AutoIncrement = false;
				colvarXsdjbz.IsNullable = true;
				colvarXsdjbz.IsPrimaryKey = false;
				colvarXsdjbz.IsForeignKey = false;
				colvarXsdjbz.IsReadOnly = false;
				colvarXsdjbz.DefaultSetting = @"";
				colvarXsdjbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsdjbz);
				
				TableSchema.TableColumn colvarXsfphm = new TableSchema.TableColumn(schema);
				colvarXsfphm.ColumnName = "XSFPHM";
				colvarXsfphm.DataType = DbType.String;
				colvarXsfphm.MaxLength = 12;
				colvarXsfphm.AutoIncrement = false;
				colvarXsfphm.IsNullable = false;
				colvarXsfphm.IsPrimaryKey = true;
				colvarXsfphm.IsForeignKey = false;
				colvarXsfphm.IsReadOnly = false;
				colvarXsfphm.DefaultSetting = @"";
				colvarXsfphm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfphm);
				
				TableSchema.TableColumn colvarXthbdm = new TableSchema.TableColumn(schema);
				colvarXthbdm.ColumnName = "XTHBDM";
				colvarXthbdm.DataType = DbType.String;
				colvarXthbdm.MaxLength = 3;
				colvarXthbdm.AutoIncrement = false;
				colvarXthbdm.IsNullable = true;
				colvarXthbdm.IsPrimaryKey = false;
				colvarXthbdm.IsForeignKey = false;
				colvarXthbdm.IsReadOnly = false;
				colvarXthbdm.DefaultSetting = @"";
				colvarXthbdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXthbdm);
				
				TableSchema.TableColumn colvarXsxsdb = new TableSchema.TableColumn(schema);
				colvarXsxsdb.ColumnName = "XSXSDB";
				colvarXsxsdb.DataType = DbType.String;
				colvarXsxsdb.MaxLength = 8;
				colvarXsxsdb.AutoIncrement = false;
				colvarXsxsdb.IsNullable = true;
				colvarXsxsdb.IsPrimaryKey = false;
				colvarXsxsdb.IsForeignKey = false;
				colvarXsxsdb.IsReadOnly = false;
				colvarXsxsdb.DefaultSetting = @"";
				colvarXsxsdb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsxsdb);
				
				TableSchema.TableColumn colvarXtbmdm = new TableSchema.TableColumn(schema);
				colvarXtbmdm.ColumnName = "XTBMDM";
				colvarXtbmdm.DataType = DbType.String;
				colvarXtbmdm.MaxLength = 8;
				colvarXtbmdm.AutoIncrement = false;
				colvarXtbmdm.IsNullable = true;
				colvarXtbmdm.IsPrimaryKey = false;
				colvarXtbmdm.IsForeignKey = false;
				colvarXtbmdm.IsReadOnly = false;
				colvarXtbmdm.DefaultSetting = @"";
				colvarXtbmdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbmdm);
				
				TableSchema.TableColumn colvarXtwldm = new TableSchema.TableColumn(schema);
				colvarXtwldm.ColumnName = "XTWLDM";
				colvarXtwldm.DataType = DbType.String;
				colvarXtwldm.MaxLength = 8;
				colvarXtwldm.AutoIncrement = false;
				colvarXtwldm.IsNullable = true;
				colvarXtwldm.IsPrimaryKey = false;
				colvarXtwldm.IsForeignKey = false;
				colvarXtwldm.IsReadOnly = false;
				colvarXtwldm.DefaultSetting = @"";
				colvarXtwldm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwldm);
				
				TableSchema.TableColumn colvarXskprq = new TableSchema.TableColumn(schema);
				colvarXskprq.ColumnName = "XSKPRQ";
				colvarXskprq.DataType = DbType.DateTime;
				colvarXskprq.MaxLength = 0;
				colvarXskprq.AutoIncrement = false;
				colvarXskprq.IsNullable = true;
				colvarXskprq.IsPrimaryKey = false;
				colvarXskprq.IsForeignKey = false;
				colvarXskprq.IsReadOnly = false;
				colvarXskprq.DefaultSetting = @"";
				colvarXskprq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskprq);
				
				TableSchema.TableColumn colvarXskjnd = new TableSchema.TableColumn(schema);
				colvarXskjnd.ColumnName = "XSKJND";
				colvarXskjnd.DataType = DbType.Decimal;
				colvarXskjnd.MaxLength = 0;
				colvarXskjnd.AutoIncrement = false;
				colvarXskjnd.IsNullable = true;
				colvarXskjnd.IsPrimaryKey = false;
				colvarXskjnd.IsForeignKey = false;
				colvarXskjnd.IsReadOnly = false;
				colvarXskjnd.DefaultSetting = @"";
				colvarXskjnd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskjnd);
				
				TableSchema.TableColumn colvarXskjyf = new TableSchema.TableColumn(schema);
				colvarXskjyf.ColumnName = "XSKJYF";
				colvarXskjyf.DataType = DbType.Decimal;
				colvarXskjyf.MaxLength = 0;
				colvarXskjyf.AutoIncrement = false;
				colvarXskjyf.IsNullable = true;
				colvarXskjyf.IsPrimaryKey = false;
				colvarXskjyf.IsForeignKey = false;
				colvarXskjyf.IsReadOnly = false;
				colvarXskjyf.DefaultSetting = @"";
				colvarXskjyf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskjyf);
				
				TableSchema.TableColumn colvarXsfpje = new TableSchema.TableColumn(schema);
				colvarXsfpje.ColumnName = "XSFPJE";
				colvarXsfpje.DataType = DbType.Decimal;
				colvarXsfpje.MaxLength = 0;
				colvarXsfpje.AutoIncrement = false;
				colvarXsfpje.IsNullable = true;
				colvarXsfpje.IsPrimaryKey = false;
				colvarXsfpje.IsForeignKey = false;
				colvarXsfpje.IsReadOnly = false;
				colvarXsfpje.DefaultSetting = @"";
				colvarXsfpje.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfpje);
				
				TableSchema.TableColumn colvarXsfpse = new TableSchema.TableColumn(schema);
				colvarXsfpse.ColumnName = "XSFPSE";
				colvarXsfpse.DataType = DbType.Decimal;
				colvarXsfpse.MaxLength = 0;
				colvarXsfpse.AutoIncrement = false;
				colvarXsfpse.IsNullable = true;
				colvarXsfpse.IsPrimaryKey = false;
				colvarXsfpse.IsForeignKey = false;
				colvarXsfpse.IsReadOnly = false;
				colvarXsfpse.DefaultSetting = @"";
				colvarXsfpse.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfpse);
				
				TableSchema.TableColumn colvarXsbbje = new TableSchema.TableColumn(schema);
				colvarXsbbje.ColumnName = "XSBBJE";
				colvarXsbbje.DataType = DbType.Decimal;
				colvarXsbbje.MaxLength = 0;
				colvarXsbbje.AutoIncrement = false;
				colvarXsbbje.IsNullable = true;
				colvarXsbbje.IsPrimaryKey = false;
				colvarXsbbje.IsForeignKey = false;
				colvarXsbbje.IsReadOnly = false;
				colvarXsbbje.DefaultSetting = @"";
				colvarXsbbje.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsbbje);
				
				TableSchema.TableColumn colvarXsbbse = new TableSchema.TableColumn(schema);
				colvarXsbbse.ColumnName = "XSBBSE";
				colvarXsbbse.DataType = DbType.Decimal;
				colvarXsbbse.MaxLength = 0;
				colvarXsbbse.AutoIncrement = false;
				colvarXsbbse.IsNullable = true;
				colvarXsbbse.IsPrimaryKey = false;
				colvarXsbbse.IsForeignKey = false;
				colvarXsbbse.IsReadOnly = false;
				colvarXsbbse.DefaultSetting = @"";
				colvarXsbbse.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsbbse);
				
				TableSchema.TableColumn colvarXsfpzt = new TableSchema.TableColumn(schema);
				colvarXsfpzt.ColumnName = "XSFPZT";
				colvarXsfpzt.DataType = DbType.String;
				colvarXsfpzt.MaxLength = 1;
				colvarXsfpzt.AutoIncrement = false;
				colvarXsfpzt.IsNullable = true;
				colvarXsfpzt.IsPrimaryKey = false;
				colvarXsfpzt.IsForeignKey = false;
				colvarXsfpzt.IsReadOnly = false;
				colvarXsfpzt.DefaultSetting = @"";
				colvarXsfpzt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfpzt);
				
				TableSchema.TableColumn colvarXsfplx = new TableSchema.TableColumn(schema);
				colvarXsfplx.ColumnName = "XSFPLX";
				colvarXsfplx.DataType = DbType.String;
				colvarXsfplx.MaxLength = 1;
				colvarXsfplx.AutoIncrement = false;
				colvarXsfplx.IsNullable = true;
				colvarXsfplx.IsPrimaryKey = false;
				colvarXsfplx.IsForeignKey = false;
				colvarXsfplx.IsReadOnly = false;
				colvarXsfplx.DefaultSetting = @"";
				colvarXsfplx.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfplx);
				
				TableSchema.TableColumn colvarXsfpbh = new TableSchema.TableColumn(schema);
				colvarXsfpbh.ColumnName = "XSFPBH";
				colvarXsfpbh.DataType = DbType.String;
				colvarXsfpbh.MaxLength = 10;
				colvarXsfpbh.AutoIncrement = false;
				colvarXsfpbh.IsNullable = true;
				colvarXsfpbh.IsPrimaryKey = false;
				colvarXsfpbh.IsForeignKey = false;
				colvarXsfpbh.IsReadOnly = false;
				colvarXsfpbh.DefaultSetting = @"";
				colvarXsfpbh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfpbh);
				
				TableSchema.TableColumn colvarXsfpph = new TableSchema.TableColumn(schema);
				colvarXsfpph.ColumnName = "XSFPPH";
				colvarXsfpph.DataType = DbType.String;
				colvarXsfpph.MaxLength = 12;
				colvarXsfpph.AutoIncrement = false;
				colvarXsfpph.IsNullable = true;
				colvarXsfpph.IsPrimaryKey = false;
				colvarXsfpph.IsForeignKey = false;
				colvarXsfpph.IsReadOnly = false;
				colvarXsfpph.DefaultSetting = @"";
				colvarXsfpph.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfpph);
				
				TableSchema.TableColumn colvarXslrry = new TableSchema.TableColumn(schema);
				colvarXslrry.ColumnName = "XSLRRY";
				colvarXslrry.DataType = DbType.String;
				colvarXslrry.MaxLength = 8;
				colvarXslrry.AutoIncrement = false;
				colvarXslrry.IsNullable = true;
				colvarXslrry.IsPrimaryKey = false;
				colvarXslrry.IsForeignKey = false;
				colvarXslrry.IsReadOnly = false;
				colvarXslrry.DefaultSetting = @"";
				colvarXslrry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXslrry);
				
				TableSchema.TableColumn colvarXslrrq = new TableSchema.TableColumn(schema);
				colvarXslrrq.ColumnName = "XSLRRQ";
				colvarXslrrq.DataType = DbType.DateTime;
				colvarXslrrq.MaxLength = 0;
				colvarXslrrq.AutoIncrement = false;
				colvarXslrrq.IsNullable = true;
				colvarXslrrq.IsPrimaryKey = false;
				colvarXslrrq.IsForeignKey = false;
				colvarXslrrq.IsReadOnly = false;
				colvarXslrrq.DefaultSetting = @"";
				colvarXslrrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXslrrq);
				
				TableSchema.TableColumn colvarXsshry = new TableSchema.TableColumn(schema);
				colvarXsshry.ColumnName = "XSSHRY";
				colvarXsshry.DataType = DbType.String;
				colvarXsshry.MaxLength = 8;
				colvarXsshry.AutoIncrement = false;
				colvarXsshry.IsNullable = true;
				colvarXsshry.IsPrimaryKey = false;
				colvarXsshry.IsForeignKey = false;
				colvarXsshry.IsReadOnly = false;
				colvarXsshry.DefaultSetting = @"";
				colvarXsshry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsshry);
				
				TableSchema.TableColumn colvarXsshrq = new TableSchema.TableColumn(schema);
				colvarXsshrq.ColumnName = "XSSHRQ";
				colvarXsshrq.DataType = DbType.DateTime;
				colvarXsshrq.MaxLength = 0;
				colvarXsshrq.AutoIncrement = false;
				colvarXsshrq.IsNullable = true;
				colvarXsshrq.IsPrimaryKey = false;
				colvarXsshrq.IsForeignKey = false;
				colvarXsshrq.IsReadOnly = false;
				colvarXsshrq.DefaultSetting = @"";
				colvarXsshrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsshrq);
				
				TableSchema.TableColumn colvarXsdynd = new TableSchema.TableColumn(schema);
				colvarXsdynd.ColumnName = "XSDYND";
				colvarXsdynd.DataType = DbType.Decimal;
				colvarXsdynd.MaxLength = 0;
				colvarXsdynd.AutoIncrement = false;
				colvarXsdynd.IsNullable = true;
				colvarXsdynd.IsPrimaryKey = false;
				colvarXsdynd.IsForeignKey = false;
				colvarXsdynd.IsReadOnly = false;
				colvarXsdynd.DefaultSetting = @"";
				colvarXsdynd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsdynd);
				
				TableSchema.TableColumn colvarXsdyyf = new TableSchema.TableColumn(schema);
				colvarXsdyyf.ColumnName = "XSDYYF";
				colvarXsdyyf.DataType = DbType.Decimal;
				colvarXsdyyf.MaxLength = 0;
				colvarXsdyyf.AutoIncrement = false;
				colvarXsdyyf.IsNullable = true;
				colvarXsdyyf.IsPrimaryKey = false;
				colvarXsdyyf.IsForeignKey = false;
				colvarXsdyyf.IsReadOnly = false;
				colvarXsdyyf.DefaultSetting = @"";
				colvarXsdyyf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsdyyf);
				
				TableSchema.TableColumn colvarXsdyxs = new TableSchema.TableColumn(schema);
				colvarXsdyxs.ColumnName = "XSDYXS";
				colvarXsdyxs.DataType = DbType.Decimal;
				colvarXsdyxs.MaxLength = 0;
				colvarXsdyxs.AutoIncrement = false;
				colvarXsdyxs.IsNullable = true;
				colvarXsdyxs.IsPrimaryKey = false;
				colvarXsdyxs.IsForeignKey = false;
				colvarXsdyxs.IsReadOnly = false;
				colvarXsdyxs.DefaultSetting = @"";
				colvarXsdyxs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsdyxs);
				
				TableSchema.TableColumn colvarXsfpbz = new TableSchema.TableColumn(schema);
				colvarXsfpbz.ColumnName = "XSFPBZ";
				colvarXsfpbz.DataType = DbType.String;
				colvarXsfpbz.MaxLength = 255;
				colvarXsfpbz.AutoIncrement = false;
				colvarXsfpbz.IsNullable = true;
				colvarXsfpbz.IsPrimaryKey = false;
				colvarXsfpbz.IsForeignKey = false;
				colvarXsfpbz.IsReadOnly = false;
				colvarXsfpbz.DefaultSetting = @"";
				colvarXsfpbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfpbz);
				
				TableSchema.TableColumn colvarXsysfp = new TableSchema.TableColumn(schema);
				colvarXsysfp.ColumnName = "XSYSFP";
				colvarXsysfp.DataType = DbType.String;
				colvarXsysfp.MaxLength = 12;
				colvarXsysfp.AutoIncrement = false;
				colvarXsysfp.IsNullable = true;
				colvarXsysfp.IsPrimaryKey = false;
				colvarXsysfp.IsForeignKey = false;
				colvarXsysfp.IsReadOnly = false;
				colvarXsysfp.DefaultSetting = @"";
				colvarXsysfp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsysfp);
				
				TableSchema.TableColumn colvarXszfyy = new TableSchema.TableColumn(schema);
				colvarXszfyy.ColumnName = "XSZFYY";
				colvarXszfyy.DataType = DbType.String;
				colvarXszfyy.MaxLength = 255;
				colvarXszfyy.AutoIncrement = false;
				colvarXszfyy.IsNullable = true;
				colvarXszfyy.IsPrimaryKey = false;
				colvarXszfyy.IsForeignKey = false;
				colvarXszfyy.IsReadOnly = false;
				colvarXszfyy.DefaultSetting = @"";
				colvarXszfyy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXszfyy);
				
				TableSchema.TableColumn colvarXskqbz = new TableSchema.TableColumn(schema);
				colvarXskqbz.ColumnName = "XSKQBZ";
				colvarXskqbz.DataType = DbType.String;
				colvarXskqbz.MaxLength = 1;
				colvarXskqbz.AutoIncrement = false;
				colvarXskqbz.IsNullable = true;
				colvarXskqbz.IsPrimaryKey = false;
				colvarXskqbz.IsForeignKey = false;
				colvarXskqbz.IsReadOnly = false;
				colvarXskqbz.DefaultSetting = @"";
				colvarXskqbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskqbz);
				
				TableSchema.TableColumn colvarXtzthm = new TableSchema.TableColumn(schema);
				colvarXtzthm.ColumnName = "XTZTHM";
				colvarXtzthm.DataType = DbType.String;
				colvarXtzthm.MaxLength = 4;
				colvarXtzthm.AutoIncrement = false;
				colvarXtzthm.IsNullable = true;
				colvarXtzthm.IsPrimaryKey = false;
				colvarXtzthm.IsForeignKey = false;
				colvarXtzthm.IsReadOnly = false;
				colvarXtzthm.DefaultSetting = @"";
				colvarXtzthm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtzthm);
				
				TableSchema.TableColumn colvarXsyhje = new TableSchema.TableColumn(schema);
				colvarXsyhje.ColumnName = "XSYHJE";
				colvarXsyhje.DataType = DbType.Decimal;
				colvarXsyhje.MaxLength = 0;
				colvarXsyhje.AutoIncrement = false;
				colvarXsyhje.IsNullable = true;
				colvarXsyhje.IsPrimaryKey = false;
				colvarXsyhje.IsForeignKey = false;
				colvarXsyhje.IsReadOnly = false;
				colvarXsyhje.DefaultSetting = @"";
				colvarXsyhje.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsyhje);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ErpNowthwin"].AddSchema("XST06",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Xskoul")]
		[Bindable(true)]
		public decimal? Xskoul 
		{
			get { return GetColumnValue<decimal?>(Columns.Xskoul); }
			set { SetColumnValue(Columns.Xskoul, value); }
		}
		  
		[XmlAttribute("Xshuil")]
		[Bindable(true)]
		public decimal? Xshuil 
		{
			get { return GetColumnValue<decimal?>(Columns.Xshuil); }
			set { SetColumnValue(Columns.Xshuil, value); }
		}
		  
		[XmlAttribute("Xsdjbz")]
		[Bindable(true)]
		public string Xsdjbz 
		{
			get { return GetColumnValue<string>(Columns.Xsdjbz); }
			set { SetColumnValue(Columns.Xsdjbz, value); }
		}
		  
		[XmlAttribute("Xsfphm")]
		[Bindable(true)]
		public string Xsfphm 
		{
			get { return GetColumnValue<string>(Columns.Xsfphm); }
			set { SetColumnValue(Columns.Xsfphm, value); }
		}
		  
		[XmlAttribute("Xthbdm")]
		[Bindable(true)]
		public string Xthbdm 
		{
			get { return GetColumnValue<string>(Columns.Xthbdm); }
			set { SetColumnValue(Columns.Xthbdm, value); }
		}
		  
		[XmlAttribute("Xsxsdb")]
		[Bindable(true)]
		public string Xsxsdb 
		{
			get { return GetColumnValue<string>(Columns.Xsxsdb); }
			set { SetColumnValue(Columns.Xsxsdb, value); }
		}
		  
		[XmlAttribute("Xtbmdm")]
		[Bindable(true)]
		public string Xtbmdm 
		{
			get { return GetColumnValue<string>(Columns.Xtbmdm); }
			set { SetColumnValue(Columns.Xtbmdm, value); }
		}
		  
		[XmlAttribute("Xtwldm")]
		[Bindable(true)]
		public string Xtwldm 
		{
			get { return GetColumnValue<string>(Columns.Xtwldm); }
			set { SetColumnValue(Columns.Xtwldm, value); }
		}
		  
		[XmlAttribute("Xskprq")]
		[Bindable(true)]
		public DateTime? Xskprq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Xskprq); }
			set { SetColumnValue(Columns.Xskprq, value); }
		}
		  
		[XmlAttribute("Xskjnd")]
		[Bindable(true)]
		public decimal? Xskjnd 
		{
			get { return GetColumnValue<decimal?>(Columns.Xskjnd); }
			set { SetColumnValue(Columns.Xskjnd, value); }
		}
		  
		[XmlAttribute("Xskjyf")]
		[Bindable(true)]
		public decimal? Xskjyf 
		{
			get { return GetColumnValue<decimal?>(Columns.Xskjyf); }
			set { SetColumnValue(Columns.Xskjyf, value); }
		}
		  
		[XmlAttribute("Xsfpje")]
		[Bindable(true)]
		public decimal? Xsfpje 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsfpje); }
			set { SetColumnValue(Columns.Xsfpje, value); }
		}
		  
		[XmlAttribute("Xsfpse")]
		[Bindable(true)]
		public decimal? Xsfpse 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsfpse); }
			set { SetColumnValue(Columns.Xsfpse, value); }
		}
		  
		[XmlAttribute("Xsbbje")]
		[Bindable(true)]
		public decimal? Xsbbje 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsbbje); }
			set { SetColumnValue(Columns.Xsbbje, value); }
		}
		  
		[XmlAttribute("Xsbbse")]
		[Bindable(true)]
		public decimal? Xsbbse 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsbbse); }
			set { SetColumnValue(Columns.Xsbbse, value); }
		}
		  
		[XmlAttribute("Xsfpzt")]
		[Bindable(true)]
		public string Xsfpzt 
		{
			get { return GetColumnValue<string>(Columns.Xsfpzt); }
			set { SetColumnValue(Columns.Xsfpzt, value); }
		}
		  
		[XmlAttribute("Xsfplx")]
		[Bindable(true)]
		public string Xsfplx 
		{
			get { return GetColumnValue<string>(Columns.Xsfplx); }
			set { SetColumnValue(Columns.Xsfplx, value); }
		}
		  
		[XmlAttribute("Xsfpbh")]
		[Bindable(true)]
		public string Xsfpbh 
		{
			get { return GetColumnValue<string>(Columns.Xsfpbh); }
			set { SetColumnValue(Columns.Xsfpbh, value); }
		}
		  
		[XmlAttribute("Xsfpph")]
		[Bindable(true)]
		public string Xsfpph 
		{
			get { return GetColumnValue<string>(Columns.Xsfpph); }
			set { SetColumnValue(Columns.Xsfpph, value); }
		}
		  
		[XmlAttribute("Xslrry")]
		[Bindable(true)]
		public string Xslrry 
		{
			get { return GetColumnValue<string>(Columns.Xslrry); }
			set { SetColumnValue(Columns.Xslrry, value); }
		}
		  
		[XmlAttribute("Xslrrq")]
		[Bindable(true)]
		public DateTime? Xslrrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Xslrrq); }
			set { SetColumnValue(Columns.Xslrrq, value); }
		}
		  
		[XmlAttribute("Xsshry")]
		[Bindable(true)]
		public string Xsshry 
		{
			get { return GetColumnValue<string>(Columns.Xsshry); }
			set { SetColumnValue(Columns.Xsshry, value); }
		}
		  
		[XmlAttribute("Xsshrq")]
		[Bindable(true)]
		public DateTime? Xsshrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Xsshrq); }
			set { SetColumnValue(Columns.Xsshrq, value); }
		}
		  
		[XmlAttribute("Xsdynd")]
		[Bindable(true)]
		public decimal? Xsdynd 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsdynd); }
			set { SetColumnValue(Columns.Xsdynd, value); }
		}
		  
		[XmlAttribute("Xsdyyf")]
		[Bindable(true)]
		public decimal? Xsdyyf 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsdyyf); }
			set { SetColumnValue(Columns.Xsdyyf, value); }
		}
		  
		[XmlAttribute("Xsdyxs")]
		[Bindable(true)]
		public decimal? Xsdyxs 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsdyxs); }
			set { SetColumnValue(Columns.Xsdyxs, value); }
		}
		  
		[XmlAttribute("Xsfpbz")]
		[Bindable(true)]
		public string Xsfpbz 
		{
			get { return GetColumnValue<string>(Columns.Xsfpbz); }
			set { SetColumnValue(Columns.Xsfpbz, value); }
		}
		  
		[XmlAttribute("Xsysfp")]
		[Bindable(true)]
		public string Xsysfp 
		{
			get { return GetColumnValue<string>(Columns.Xsysfp); }
			set { SetColumnValue(Columns.Xsysfp, value); }
		}
		  
		[XmlAttribute("Xszfyy")]
		[Bindable(true)]
		public string Xszfyy 
		{
			get { return GetColumnValue<string>(Columns.Xszfyy); }
			set { SetColumnValue(Columns.Xszfyy, value); }
		}
		  
		[XmlAttribute("Xskqbz")]
		[Bindable(true)]
		public string Xskqbz 
		{
			get { return GetColumnValue<string>(Columns.Xskqbz); }
			set { SetColumnValue(Columns.Xskqbz, value); }
		}
		  
		[XmlAttribute("Xtzthm")]
		[Bindable(true)]
		public string Xtzthm 
		{
			get { return GetColumnValue<string>(Columns.Xtzthm); }
			set { SetColumnValue(Columns.Xtzthm, value); }
		}
		  
		[XmlAttribute("Xsyhje")]
		[Bindable(true)]
		public decimal? Xsyhje 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsyhje); }
			set { SetColumnValue(Columns.Xsyhje, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(decimal? varXskoul,decimal? varXshuil,string varXsdjbz,string varXsfphm,string varXthbdm,string varXsxsdb,string varXtbmdm,string varXtwldm,DateTime? varXskprq,decimal? varXskjnd,decimal? varXskjyf,decimal? varXsfpje,decimal? varXsfpse,decimal? varXsbbje,decimal? varXsbbse,string varXsfpzt,string varXsfplx,string varXsfpbh,string varXsfpph,string varXslrry,DateTime? varXslrrq,string varXsshry,DateTime? varXsshrq,decimal? varXsdynd,decimal? varXsdyyf,decimal? varXsdyxs,string varXsfpbz,string varXsysfp,string varXszfyy,string varXskqbz,string varXtzthm,decimal? varXsyhje)
		{
			XST06 item = new XST06();
			
			item.Xskoul = varXskoul;
			
			item.Xshuil = varXshuil;
			
			item.Xsdjbz = varXsdjbz;
			
			item.Xsfphm = varXsfphm;
			
			item.Xthbdm = varXthbdm;
			
			item.Xsxsdb = varXsxsdb;
			
			item.Xtbmdm = varXtbmdm;
			
			item.Xtwldm = varXtwldm;
			
			item.Xskprq = varXskprq;
			
			item.Xskjnd = varXskjnd;
			
			item.Xskjyf = varXskjyf;
			
			item.Xsfpje = varXsfpje;
			
			item.Xsfpse = varXsfpse;
			
			item.Xsbbje = varXsbbje;
			
			item.Xsbbse = varXsbbse;
			
			item.Xsfpzt = varXsfpzt;
			
			item.Xsfplx = varXsfplx;
			
			item.Xsfpbh = varXsfpbh;
			
			item.Xsfpph = varXsfpph;
			
			item.Xslrry = varXslrry;
			
			item.Xslrrq = varXslrrq;
			
			item.Xsshry = varXsshry;
			
			item.Xsshrq = varXsshrq;
			
			item.Xsdynd = varXsdynd;
			
			item.Xsdyyf = varXsdyyf;
			
			item.Xsdyxs = varXsdyxs;
			
			item.Xsfpbz = varXsfpbz;
			
			item.Xsysfp = varXsysfp;
			
			item.Xszfyy = varXszfyy;
			
			item.Xskqbz = varXskqbz;
			
			item.Xtzthm = varXtzthm;
			
			item.Xsyhje = varXsyhje;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(decimal? varXskoul,decimal? varXshuil,string varXsdjbz,string varXsfphm,string varXthbdm,string varXsxsdb,string varXtbmdm,string varXtwldm,DateTime? varXskprq,decimal? varXskjnd,decimal? varXskjyf,decimal? varXsfpje,decimal? varXsfpse,decimal? varXsbbje,decimal? varXsbbse,string varXsfpzt,string varXsfplx,string varXsfpbh,string varXsfpph,string varXslrry,DateTime? varXslrrq,string varXsshry,DateTime? varXsshrq,decimal? varXsdynd,decimal? varXsdyyf,decimal? varXsdyxs,string varXsfpbz,string varXsysfp,string varXszfyy,string varXskqbz,string varXtzthm,decimal? varXsyhje)
		{
			XST06 item = new XST06();
			
				item.Xskoul = varXskoul;
			
				item.Xshuil = varXshuil;
			
				item.Xsdjbz = varXsdjbz;
			
				item.Xsfphm = varXsfphm;
			
				item.Xthbdm = varXthbdm;
			
				item.Xsxsdb = varXsxsdb;
			
				item.Xtbmdm = varXtbmdm;
			
				item.Xtwldm = varXtwldm;
			
				item.Xskprq = varXskprq;
			
				item.Xskjnd = varXskjnd;
			
				item.Xskjyf = varXskjyf;
			
				item.Xsfpje = varXsfpje;
			
				item.Xsfpse = varXsfpse;
			
				item.Xsbbje = varXsbbje;
			
				item.Xsbbse = varXsbbse;
			
				item.Xsfpzt = varXsfpzt;
			
				item.Xsfplx = varXsfplx;
			
				item.Xsfpbh = varXsfpbh;
			
				item.Xsfpph = varXsfpph;
			
				item.Xslrry = varXslrry;
			
				item.Xslrrq = varXslrrq;
			
				item.Xsshry = varXsshry;
			
				item.Xsshrq = varXsshrq;
			
				item.Xsdynd = varXsdynd;
			
				item.Xsdyyf = varXsdyyf;
			
				item.Xsdyxs = varXsdyxs;
			
				item.Xsfpbz = varXsfpbz;
			
				item.Xsysfp = varXsysfp;
			
				item.Xszfyy = varXszfyy;
			
				item.Xskqbz = varXskqbz;
			
				item.Xtzthm = varXtzthm;
			
				item.Xsyhje = varXsyhje;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn XskoulColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn XshuilColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn XsdjbzColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfphmColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn XthbdmColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn XsxsdbColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbmdmColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwldmColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XskprqColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn XskjndColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn XskjyfColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfpjeColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfpseColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn XsbbjeColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn XsbbseColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfpztColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfplxColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfpbhColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfpphColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn XslrryColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn XslrrqColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn XsshryColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn XsshrqColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn XsdyndColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn XsdyyfColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn XsdyxsColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfpbzColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn XsysfpColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn XszfyyColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn XskqbzColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn XtzthmColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn XsyhjeColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Xskoul = @"XSKOUL";
			 public static string Xshuil = @"XSHUIL";
			 public static string Xsdjbz = @"XSDJBZ";
			 public static string Xsfphm = @"XSFPHM";
			 public static string Xthbdm = @"XTHBDM";
			 public static string Xsxsdb = @"XSXSDB";
			 public static string Xtbmdm = @"XTBMDM";
			 public static string Xtwldm = @"XTWLDM";
			 public static string Xskprq = @"XSKPRQ";
			 public static string Xskjnd = @"XSKJND";
			 public static string Xskjyf = @"XSKJYF";
			 public static string Xsfpje = @"XSFPJE";
			 public static string Xsfpse = @"XSFPSE";
			 public static string Xsbbje = @"XSBBJE";
			 public static string Xsbbse = @"XSBBSE";
			 public static string Xsfpzt = @"XSFPZT";
			 public static string Xsfplx = @"XSFPLX";
			 public static string Xsfpbh = @"XSFPBH";
			 public static string Xsfpph = @"XSFPPH";
			 public static string Xslrry = @"XSLRRY";
			 public static string Xslrrq = @"XSLRRQ";
			 public static string Xsshry = @"XSSHRY";
			 public static string Xsshrq = @"XSSHRQ";
			 public static string Xsdynd = @"XSDYND";
			 public static string Xsdyyf = @"XSDYYF";
			 public static string Xsdyxs = @"XSDYXS";
			 public static string Xsfpbz = @"XSFPBZ";
			 public static string Xsysfp = @"XSYSFP";
			 public static string Xszfyy = @"XSZFYY";
			 public static string Xskqbz = @"XSKQBZ";
			 public static string Xtzthm = @"XTZTHM";
			 public static string Xsyhje = @"XSYHJE";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
