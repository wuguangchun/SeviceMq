using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for SCT78
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SCT78Controller
    {
        // Preload our schema..
        SCT78 thisSchemaLoad = new SCT78();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SCT78Collection FetchAll()
        {
            SCT78Collection coll = new SCT78Collection();
            Query qry = new Query(SCT78.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT78Collection FetchByID(object Schsnd)
        {
            SCT78Collection coll = new SCT78Collection().Where("SCHSND", Schsnd).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT78Collection FetchByQuery(Query qry)
        {
            SCT78Collection coll = new SCT78Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Schsnd)
        {
            return (SCT78.Delete(Schsnd) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Schsnd)
        {
            return (SCT78.Destroy(Schsnd) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(decimal Schsnd,decimal Schsyf,string Scscdm)
        {
            Query qry = new Query(SCT78.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("Schsnd", Schsnd).AND("Schsyf", Schsyf).AND("Scscdm", Scscdm);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(decimal Schsnd,decimal Schsyf,string Scscdm,decimal? Scmbfh,decimal? Scpcfh,decimal? Scsjfh,decimal? Sctcds,decimal? Scywcs,decimal? Scjxpf,decimal? Scmbxl,decimal? Scsjxl,decimal? Scxlpf,decimal? Scmbzl,decimal? Scsjzl,decimal? Sczlpf,decimal? Scswcl,decimal? Scswpf)
	    {
		    SCT78 item = new SCT78();
		    
            item.Schsnd = Schsnd;
            
            item.Schsyf = Schsyf;
            
            item.Scscdm = Scscdm;
            
            item.Scmbfh = Scmbfh;
            
            item.Scpcfh = Scpcfh;
            
            item.Scsjfh = Scsjfh;
            
            item.Sctcds = Sctcds;
            
            item.Scywcs = Scywcs;
            
            item.Scjxpf = Scjxpf;
            
            item.Scmbxl = Scmbxl;
            
            item.Scsjxl = Scsjxl;
            
            item.Scxlpf = Scxlpf;
            
            item.Scmbzl = Scmbzl;
            
            item.Scsjzl = Scsjzl;
            
            item.Sczlpf = Sczlpf;
            
            item.Scswcl = Scswcl;
            
            item.Scswpf = Scswpf;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(decimal Schsnd,decimal Schsyf,string Scscdm,decimal? Scmbfh,decimal? Scpcfh,decimal? Scsjfh,decimal? Sctcds,decimal? Scywcs,decimal? Scjxpf,decimal? Scmbxl,decimal? Scsjxl,decimal? Scxlpf,decimal? Scmbzl,decimal? Scsjzl,decimal? Sczlpf,decimal? Scswcl,decimal? Scswpf)
	    {
		    SCT78 item = new SCT78();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Schsnd = Schsnd;
				
			item.Schsyf = Schsyf;
				
			item.Scscdm = Scscdm;
				
			item.Scmbfh = Scmbfh;
				
			item.Scpcfh = Scpcfh;
				
			item.Scsjfh = Scsjfh;
				
			item.Sctcds = Sctcds;
				
			item.Scywcs = Scywcs;
				
			item.Scjxpf = Scjxpf;
				
			item.Scmbxl = Scmbxl;
				
			item.Scsjxl = Scsjxl;
				
			item.Scxlpf = Scxlpf;
				
			item.Scmbzl = Scmbzl;
				
			item.Scsjzl = Scsjzl;
				
			item.Sczlpf = Sczlpf;
				
			item.Scswcl = Scswcl;
				
			item.Scswpf = Scswpf;
				
	        item.Save(UserName);
	    }
    }
}
