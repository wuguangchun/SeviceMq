using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for SCT31
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SCT31Controller
    {
        // Preload our schema..
        SCT31 thisSchemaLoad = new SCT31();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SCT31Collection FetchAll()
        {
            SCT31Collection coll = new SCT31Collection();
            Query qry = new Query(SCT31.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT31Collection FetchByID(object Schtbh)
        {
            SCT31Collection coll = new SCT31Collection().Where("SCHTBH", Schtbh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT31Collection FetchByQuery(Query qry)
        {
            SCT31Collection coll = new SCT31Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Schtbh)
        {
            return (SCT31.Delete(Schtbh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Schtbh)
        {
            return (SCT31.Destroy(Schtbh) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Xtxsdm,string Xthbdm,decimal? Xtdhhl,string Schtbh,string Xtwldm,string Htlrry,DateTime? Htlrrq,DateTime? Htssrq,string Schtzt,string Scywry,DateTime? Scqdrq,string Xtbmdm,string Khddhm,string Scglbz,string Scdzbz,string Sctgbz,string Schtbz,string Htshry,DateTime? Htshrq,string Scshyj,DateTime? Scjhrq,DateTime? Scjqrq,string Scjqsm,string Sckhxm,string Scyspd)
	    {
		    SCT31 item = new SCT31();
		    
            item.Xtxsdm = Xtxsdm;
            
            item.Xthbdm = Xthbdm;
            
            item.Xtdhhl = Xtdhhl;
            
            item.Schtbh = Schtbh;
            
            item.Xtwldm = Xtwldm;
            
            item.Htlrry = Htlrry;
            
            item.Htlrrq = Htlrrq;
            
            item.Htssrq = Htssrq;
            
            item.Schtzt = Schtzt;
            
            item.Scywry = Scywry;
            
            item.Scqdrq = Scqdrq;
            
            item.Xtbmdm = Xtbmdm;
            
            item.Khddhm = Khddhm;
            
            item.Scglbz = Scglbz;
            
            item.Scdzbz = Scdzbz;
            
            item.Sctgbz = Sctgbz;
            
            item.Schtbz = Schtbz;
            
            item.Htshry = Htshry;
            
            item.Htshrq = Htshrq;
            
            item.Scshyj = Scshyj;
            
            item.Scjhrq = Scjhrq;
            
            item.Scjqrq = Scjqrq;
            
            item.Scjqsm = Scjqsm;
            
            item.Sckhxm = Sckhxm;
            
            item.Scyspd = Scyspd;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string Xtxsdm,string Xthbdm,decimal? Xtdhhl,string Schtbh,string Xtwldm,string Htlrry,DateTime? Htlrrq,DateTime? Htssrq,string Schtzt,string Scywry,DateTime? Scqdrq,string Xtbmdm,string Khddhm,string Scglbz,string Scdzbz,string Sctgbz,string Schtbz,string Htshry,DateTime? Htshrq,string Scshyj,DateTime? Scjhrq,DateTime? Scjqrq,string Scjqsm,string Sckhxm,string Scyspd)
	    {
		    SCT31 item = new SCT31();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Xtxsdm = Xtxsdm;
				
			item.Xthbdm = Xthbdm;
				
			item.Xtdhhl = Xtdhhl;
				
			item.Schtbh = Schtbh;
				
			item.Xtwldm = Xtwldm;
				
			item.Htlrry = Htlrry;
				
			item.Htlrrq = Htlrrq;
				
			item.Htssrq = Htssrq;
				
			item.Schtzt = Schtzt;
				
			item.Scywry = Scywry;
				
			item.Scqdrq = Scqdrq;
				
			item.Xtbmdm = Xtbmdm;
				
			item.Khddhm = Khddhm;
				
			item.Scglbz = Scglbz;
				
			item.Scdzbz = Scdzbz;
				
			item.Sctgbz = Sctgbz;
				
			item.Schtbz = Schtbz;
				
			item.Htshry = Htshry;
				
			item.Htshrq = Htshrq;
				
			item.Scshyj = Scshyj;
				
			item.Scjhrq = Scjhrq;
				
			item.Scjqrq = Scjqrq;
				
			item.Scjqsm = Scjqsm;
				
			item.Sckhxm = Sckhxm;
				
			item.Scyspd = Scyspd;
				
	        item.Save(UserName);
	    }
    }
}
