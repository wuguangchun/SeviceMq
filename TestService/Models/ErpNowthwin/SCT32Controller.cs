using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for SCT32
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SCT32Controller
    {
        // Preload our schema..
        SCT32 thisSchemaLoad = new SCT32();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SCT32Collection FetchAll()
        {
            SCT32Collection coll = new SCT32Collection();
            Query qry = new Query(SCT32.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT32Collection FetchByID(object Schtbh)
        {
            SCT32Collection coll = new SCT32Collection().Where("SCHTBH", Schtbh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT32Collection FetchByQuery(Query qry)
        {
            SCT32Collection coll = new SCT32Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Schtbh)
        {
            return (SCT32.Delete(Schtbh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Schtbh)
        {
            return (SCT32.Destroy(Schtbh) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(string Schtbh,decimal Schtxh)
        {
            Query qry = new Query(SCT32.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("Schtbh", Schtbh).AND("Schtxh", Schtxh);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(decimal? Scyxjb,string Scgydm,decimal? Scwpsl,string Scjhbz,DateTime? Scpcrq,decimal? Scndxs,string Schtbh,decimal Schtxh,string Xtwpks,string Xtwpys,string Xtwpdm,decimal? Scjgdj,decimal? Schtsl,DateTime? Scjhrq,string Scjhdd,string Scjqbz,string Scjqsm,DateTime? Scjqrq)
	    {
		    SCT32 item = new SCT32();
		    
            item.Scyxjb = Scyxjb;
            
            item.Scgydm = Scgydm;
            
            item.Scwpsl = Scwpsl;
            
            item.Scjhbz = Scjhbz;
            
            item.Scpcrq = Scpcrq;
            
            item.Scndxs = Scndxs;
            
            item.Schtbh = Schtbh;
            
            item.Schtxh = Schtxh;
            
            item.Xtwpks = Xtwpks;
            
            item.Xtwpys = Xtwpys;
            
            item.Xtwpdm = Xtwpdm;
            
            item.Scjgdj = Scjgdj;
            
            item.Schtsl = Schtsl;
            
            item.Scjhrq = Scjhrq;
            
            item.Scjhdd = Scjhdd;
            
            item.Scjqbz = Scjqbz;
            
            item.Scjqsm = Scjqsm;
            
            item.Scjqrq = Scjqrq;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(decimal? Scyxjb,string Scgydm,decimal? Scwpsl,string Scjhbz,DateTime? Scpcrq,decimal? Scndxs,string Schtbh,decimal Schtxh,string Xtwpks,string Xtwpys,string Xtwpdm,decimal? Scjgdj,decimal? Schtsl,DateTime? Scjhrq,string Scjhdd,string Scjqbz,string Scjqsm,DateTime? Scjqrq)
	    {
		    SCT32 item = new SCT32();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Scyxjb = Scyxjb;
				
			item.Scgydm = Scgydm;
				
			item.Scwpsl = Scwpsl;
				
			item.Scjhbz = Scjhbz;
				
			item.Scpcrq = Scpcrq;
				
			item.Scndxs = Scndxs;
				
			item.Schtbh = Schtbh;
				
			item.Schtxh = Schtxh;
				
			item.Xtwpks = Xtwpks;
				
			item.Xtwpys = Xtwpys;
				
			item.Xtwpdm = Xtwpdm;
				
			item.Scjgdj = Scjgdj;
				
			item.Schtsl = Schtsl;
				
			item.Scjhrq = Scjhrq;
				
			item.Scjhdd = Scjhdd;
				
			item.Scjqbz = Scjqbz;
				
			item.Scjqsm = Scjqsm;
				
			item.Scjqrq = Scjqrq;
				
	        item.Save(UserName);
	    }
    }
}
