using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for XTM22_BAK
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class XTM22BakController
    {
        // Preload our schema..
        XTM22Bak thisSchemaLoad = new XTM22Bak();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public XTM22BakCollection FetchAll()
        {
            XTM22BakCollection coll = new XTM22BakCollection();
            Query qry = new Query(XTM22Bak.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public XTM22BakCollection FetchByID(object Xtczxh)
        {
            XTM22BakCollection coll = new XTM22BakCollection().Where("XTCZXH", Xtczxh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public XTM22BakCollection FetchByQuery(Query qry)
        {
            XTM22BakCollection coll = new XTM22BakCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Xtczxh)
        {
            return (XTM22Bak.Delete(Xtczxh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Xtczxh)
        {
            return (XTM22Bak.Destroy(Xtczxh) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(decimal Xtczxh,string Xtwpdm,string Xtwpmc,string Xtpzgg,string Xtwpxh,string Xttxhm,string Xtcwhs,string Kcjldw,string Cgjldw,string Xsjldw,string Cwjldw,string Kcpcgl,string Kcqsck,string Wpjyxm,decimal? Wphsjg,double? Wpryxq,double? Wpjcts,decimal? Wpxsdj,decimal? Wpkcje,string Wpmjbz,string Xttjbz,string Xtscsx,string Xtlybz,string Xtplgz,decimal? Xtplsl,double? Cgtqts,string Cgwldm,decimal? Wpcgdj,string Xtwphh,string Wpbcsh,string Wpgfsh,string Scjldw,string Xtdwbz,decimal? Xtscsh,decimal? Xtzhsh,string Wpxgsx,string Wpjylb,decimal? Wpcgsl,string Wpskbz,string Wpjybh,decimal? Cgkchs,decimal? Kcschs,string Xtcllb,decimal? Wpkzsl,string Xtqybz,string Xttybz,DateTime? Xtqyrq,DateTime? Xttyrq,string Wpkclb,decimal? Kczdkc,decimal? Kcaqkc,decimal? Kcdhdl,decimal? Kcrhfl,decimal? Kcdhbc,double? Kcpdzq,decimal? Kcpdwc,double? Kcjyqx,string Xtzybz,string Scgydm)
	    {
		    XTM22Bak item = new XTM22Bak();
		    
            item.Xtczxh = Xtczxh;
            
            item.Xtwpdm = Xtwpdm;
            
            item.Xtwpmc = Xtwpmc;
            
            item.Xtpzgg = Xtpzgg;
            
            item.Xtwpxh = Xtwpxh;
            
            item.Xttxhm = Xttxhm;
            
            item.Xtcwhs = Xtcwhs;
            
            item.Kcjldw = Kcjldw;
            
            item.Cgjldw = Cgjldw;
            
            item.Xsjldw = Xsjldw;
            
            item.Cwjldw = Cwjldw;
            
            item.Kcpcgl = Kcpcgl;
            
            item.Kcqsck = Kcqsck;
            
            item.Wpjyxm = Wpjyxm;
            
            item.Wphsjg = Wphsjg;
            
            item.Wpryxq = Wpryxq;
            
            item.Wpjcts = Wpjcts;
            
            item.Wpxsdj = Wpxsdj;
            
            item.Wpkcje = Wpkcje;
            
            item.Wpmjbz = Wpmjbz;
            
            item.Xttjbz = Xttjbz;
            
            item.Xtscsx = Xtscsx;
            
            item.Xtlybz = Xtlybz;
            
            item.Xtplgz = Xtplgz;
            
            item.Xtplsl = Xtplsl;
            
            item.Cgtqts = Cgtqts;
            
            item.Cgwldm = Cgwldm;
            
            item.Wpcgdj = Wpcgdj;
            
            item.Xtwphh = Xtwphh;
            
            item.Wpbcsh = Wpbcsh;
            
            item.Wpgfsh = Wpgfsh;
            
            item.Scjldw = Scjldw;
            
            item.Xtdwbz = Xtdwbz;
            
            item.Xtscsh = Xtscsh;
            
            item.Xtzhsh = Xtzhsh;
            
            item.Wpxgsx = Wpxgsx;
            
            item.Wpjylb = Wpjylb;
            
            item.Wpcgsl = Wpcgsl;
            
            item.Wpskbz = Wpskbz;
            
            item.Wpjybh = Wpjybh;
            
            item.Cgkchs = Cgkchs;
            
            item.Kcschs = Kcschs;
            
            item.Xtcllb = Xtcllb;
            
            item.Wpkzsl = Wpkzsl;
            
            item.Xtqybz = Xtqybz;
            
            item.Xttybz = Xttybz;
            
            item.Xtqyrq = Xtqyrq;
            
            item.Xttyrq = Xttyrq;
            
            item.Wpkclb = Wpkclb;
            
            item.Kczdkc = Kczdkc;
            
            item.Kcaqkc = Kcaqkc;
            
            item.Kcdhdl = Kcdhdl;
            
            item.Kcrhfl = Kcrhfl;
            
            item.Kcdhbc = Kcdhbc;
            
            item.Kcpdzq = Kcpdzq;
            
            item.Kcpdwc = Kcpdwc;
            
            item.Kcjyqx = Kcjyqx;
            
            item.Xtzybz = Xtzybz;
            
            item.Scgydm = Scgydm;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(decimal Xtczxh,string Xtwpdm,string Xtwpmc,string Xtpzgg,string Xtwpxh,string Xttxhm,string Xtcwhs,string Kcjldw,string Cgjldw,string Xsjldw,string Cwjldw,string Kcpcgl,string Kcqsck,string Wpjyxm,decimal? Wphsjg,double? Wpryxq,double? Wpjcts,decimal? Wpxsdj,decimal? Wpkcje,string Wpmjbz,string Xttjbz,string Xtscsx,string Xtlybz,string Xtplgz,decimal? Xtplsl,double? Cgtqts,string Cgwldm,decimal? Wpcgdj,string Xtwphh,string Wpbcsh,string Wpgfsh,string Scjldw,string Xtdwbz,decimal? Xtscsh,decimal? Xtzhsh,string Wpxgsx,string Wpjylb,decimal? Wpcgsl,string Wpskbz,string Wpjybh,decimal? Cgkchs,decimal? Kcschs,string Xtcllb,decimal? Wpkzsl,string Xtqybz,string Xttybz,DateTime? Xtqyrq,DateTime? Xttyrq,string Wpkclb,decimal? Kczdkc,decimal? Kcaqkc,decimal? Kcdhdl,decimal? Kcrhfl,decimal? Kcdhbc,double? Kcpdzq,decimal? Kcpdwc,double? Kcjyqx,string Xtzybz,string Scgydm)
	    {
		    XTM22Bak item = new XTM22Bak();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Xtczxh = Xtczxh;
				
			item.Xtwpdm = Xtwpdm;
				
			item.Xtwpmc = Xtwpmc;
				
			item.Xtpzgg = Xtpzgg;
				
			item.Xtwpxh = Xtwpxh;
				
			item.Xttxhm = Xttxhm;
				
			item.Xtcwhs = Xtcwhs;
				
			item.Kcjldw = Kcjldw;
				
			item.Cgjldw = Cgjldw;
				
			item.Xsjldw = Xsjldw;
				
			item.Cwjldw = Cwjldw;
				
			item.Kcpcgl = Kcpcgl;
				
			item.Kcqsck = Kcqsck;
				
			item.Wpjyxm = Wpjyxm;
				
			item.Wphsjg = Wphsjg;
				
			item.Wpryxq = Wpryxq;
				
			item.Wpjcts = Wpjcts;
				
			item.Wpxsdj = Wpxsdj;
				
			item.Wpkcje = Wpkcje;
				
			item.Wpmjbz = Wpmjbz;
				
			item.Xttjbz = Xttjbz;
				
			item.Xtscsx = Xtscsx;
				
			item.Xtlybz = Xtlybz;
				
			item.Xtplgz = Xtplgz;
				
			item.Xtplsl = Xtplsl;
				
			item.Cgtqts = Cgtqts;
				
			item.Cgwldm = Cgwldm;
				
			item.Wpcgdj = Wpcgdj;
				
			item.Xtwphh = Xtwphh;
				
			item.Wpbcsh = Wpbcsh;
				
			item.Wpgfsh = Wpgfsh;
				
			item.Scjldw = Scjldw;
				
			item.Xtdwbz = Xtdwbz;
				
			item.Xtscsh = Xtscsh;
				
			item.Xtzhsh = Xtzhsh;
				
			item.Wpxgsx = Wpxgsx;
				
			item.Wpjylb = Wpjylb;
				
			item.Wpcgsl = Wpcgsl;
				
			item.Wpskbz = Wpskbz;
				
			item.Wpjybh = Wpjybh;
				
			item.Cgkchs = Cgkchs;
				
			item.Kcschs = Kcschs;
				
			item.Xtcllb = Xtcllb;
				
			item.Wpkzsl = Wpkzsl;
				
			item.Xtqybz = Xtqybz;
				
			item.Xttybz = Xttybz;
				
			item.Xtqyrq = Xtqyrq;
				
			item.Xttyrq = Xttyrq;
				
			item.Wpkclb = Wpkclb;
				
			item.Kczdkc = Kczdkc;
				
			item.Kcaqkc = Kcaqkc;
				
			item.Kcdhdl = Kcdhdl;
				
			item.Kcrhfl = Kcrhfl;
				
			item.Kcdhbc = Kcdhbc;
				
			item.Kcpdzq = Kcpdzq;
				
			item.Kcpdwc = Kcpdwc;
				
			item.Kcjyqx = Kcjyqx;
				
			item.Xtzybz = Xtzybz;
				
			item.Scgydm = Scgydm;
				
	        item.Save(UserName);
	    }
    }
}
