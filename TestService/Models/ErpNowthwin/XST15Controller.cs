using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for XST15
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class XST15Controller
    {
        // Preload our schema..
        XST15 thisSchemaLoad = new XST15();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public XST15Collection FetchAll()
        {
            XST15Collection coll = new XST15Collection();
            Query qry = new Query(XST15.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public XST15Collection FetchByID(object Xsphdh)
        {
            XST15Collection coll = new XST15Collection().Where("XSPHDH", Xsphdh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public XST15Collection FetchByQuery(Query qry)
        {
            XST15Collection coll = new XST15Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Xsphdh)
        {
            return (XST15.Delete(Xsphdh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Xsphdh)
        {
            return (XST15.Destroy(Xsphdh) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(string Xsphdh,decimal Xsphhh)
        {
            Query qry = new Query(XST15.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("Xsphdh", Xsphdh).AND("Xsphhh", Xsphhh);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(DateTime? Xsjhfh,DateTime? Xsjhdh,decimal? Xsykfy,decimal? Xsyfhl,string Xstjbz,string Xsthbz,string Kcshck,decimal? Xsphzk,string Scggdh,decimal? Scggxh,string Xsphdh,decimal Xsphhh,string Xsyhdh,decimal? Xsydhh,string Xtysfs,string Kcckdm,string Xtbmdm,string Xtwpdm,string Xtjldw,decimal? Xsphsl,decimal? Xsphdj,decimal? Xsphje,string Xsphry,DateTime? Xsphrq)
	    {
		    XST15 item = new XST15();
		    
            item.Xsjhfh = Xsjhfh;
            
            item.Xsjhdh = Xsjhdh;
            
            item.Xsykfy = Xsykfy;
            
            item.Xsyfhl = Xsyfhl;
            
            item.Xstjbz = Xstjbz;
            
            item.Xsthbz = Xsthbz;
            
            item.Kcshck = Kcshck;
            
            item.Xsphzk = Xsphzk;
            
            item.Scggdh = Scggdh;
            
            item.Scggxh = Scggxh;
            
            item.Xsphdh = Xsphdh;
            
            item.Xsphhh = Xsphhh;
            
            item.Xsyhdh = Xsyhdh;
            
            item.Xsydhh = Xsydhh;
            
            item.Xtysfs = Xtysfs;
            
            item.Kcckdm = Kcckdm;
            
            item.Xtbmdm = Xtbmdm;
            
            item.Xtwpdm = Xtwpdm;
            
            item.Xtjldw = Xtjldw;
            
            item.Xsphsl = Xsphsl;
            
            item.Xsphdj = Xsphdj;
            
            item.Xsphje = Xsphje;
            
            item.Xsphry = Xsphry;
            
            item.Xsphrq = Xsphrq;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(DateTime? Xsjhfh,DateTime? Xsjhdh,decimal? Xsykfy,decimal? Xsyfhl,string Xstjbz,string Xsthbz,string Kcshck,decimal? Xsphzk,string Scggdh,decimal? Scggxh,string Xsphdh,decimal Xsphhh,string Xsyhdh,decimal? Xsydhh,string Xtysfs,string Kcckdm,string Xtbmdm,string Xtwpdm,string Xtjldw,decimal? Xsphsl,decimal? Xsphdj,decimal? Xsphje,string Xsphry,DateTime? Xsphrq)
	    {
		    XST15 item = new XST15();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Xsjhfh = Xsjhfh;
				
			item.Xsjhdh = Xsjhdh;
				
			item.Xsykfy = Xsykfy;
				
			item.Xsyfhl = Xsyfhl;
				
			item.Xstjbz = Xstjbz;
				
			item.Xsthbz = Xsthbz;
				
			item.Kcshck = Kcshck;
				
			item.Xsphzk = Xsphzk;
				
			item.Scggdh = Scggdh;
				
			item.Scggxh = Scggxh;
				
			item.Xsphdh = Xsphdh;
				
			item.Xsphhh = Xsphhh;
				
			item.Xsyhdh = Xsyhdh;
				
			item.Xsydhh = Xsydhh;
				
			item.Xtysfs = Xtysfs;
				
			item.Kcckdm = Kcckdm;
				
			item.Xtbmdm = Xtbmdm;
				
			item.Xtwpdm = Xtwpdm;
				
			item.Xtjldw = Xtjldw;
				
			item.Xsphsl = Xsphsl;
				
			item.Xsphdj = Xsphdj;
				
			item.Xsphje = Xsphje;
				
			item.Xsphry = Xsphry;
				
			item.Xsphrq = Xsphrq;
				
	        item.Save(UserName);
	    }
    }
}
