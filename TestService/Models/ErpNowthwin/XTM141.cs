using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
	/// <summary>
	/// Strongly-typed collection for the XTM141 class.
	/// </summary>
    [Serializable]
	public partial class XTM141Collection : ActiveList<XTM141, XTM141Collection>
	{	   
		public XTM141Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>XTM141Collection</returns>
		public XTM141Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                XTM141 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XTM141 table.
	/// </summary>
	[Serializable]
	public partial class XTM141 : ActiveRecord<XTM141>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public XTM141()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public XTM141(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public XTM141(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public XTM141(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XTM141", TableType.Table, DataService.GetInstance("ErpNowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"FYERP";
				//columns
				
				TableSchema.TableColumn colvarXtwldm = new TableSchema.TableColumn(schema);
				colvarXtwldm.ColumnName = "XTWLDM";
				colvarXtwldm.DataType = DbType.String;
				colvarXtwldm.MaxLength = 8;
				colvarXtwldm.AutoIncrement = false;
				colvarXtwldm.IsNullable = false;
				colvarXtwldm.IsPrimaryKey = true;
				colvarXtwldm.IsForeignKey = false;
				colvarXtwldm.IsReadOnly = false;
				colvarXtwldm.DefaultSetting = @"";
				colvarXtwldm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwldm);
				
				TableSchema.TableColumn colvarXtwlmc = new TableSchema.TableColumn(schema);
				colvarXtwlmc.ColumnName = "XTWLMC";
				colvarXtwlmc.DataType = DbType.String;
				colvarXtwlmc.MaxLength = 100;
				colvarXtwlmc.AutoIncrement = false;
				colvarXtwlmc.IsNullable = true;
				colvarXtwlmc.IsPrimaryKey = false;
				colvarXtwlmc.IsForeignKey = false;
				colvarXtwlmc.IsReadOnly = false;
				colvarXtwlmc.DefaultSetting = @"";
				colvarXtwlmc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwlmc);
				
				TableSchema.TableColumn colvarXtdqdm = new TableSchema.TableColumn(schema);
				colvarXtdqdm.ColumnName = "XTDQDM";
				colvarXtdqdm.DataType = DbType.String;
				colvarXtdqdm.MaxLength = 8;
				colvarXtdqdm.AutoIncrement = false;
				colvarXtdqdm.IsNullable = true;
				colvarXtdqdm.IsPrimaryKey = false;
				colvarXtdqdm.IsForeignKey = false;
				colvarXtdqdm.IsReadOnly = false;
				colvarXtdqdm.DefaultSetting = @"";
				colvarXtdqdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdqdm);
				
				TableSchema.TableColumn colvarXtbmdm = new TableSchema.TableColumn(schema);
				colvarXtbmdm.ColumnName = "XTBMDM";
				colvarXtbmdm.DataType = DbType.String;
				colvarXtbmdm.MaxLength = 8;
				colvarXtbmdm.AutoIncrement = false;
				colvarXtbmdm.IsNullable = true;
				colvarXtbmdm.IsPrimaryKey = false;
				colvarXtbmdm.IsForeignKey = false;
				colvarXtbmdm.IsReadOnly = false;
				colvarXtbmdm.DefaultSetting = @"";
				colvarXtbmdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbmdm);
				
				TableSchema.TableColumn colvarXtwldz = new TableSchema.TableColumn(schema);
				colvarXtwldz.ColumnName = "XTWLDZ";
				colvarXtwldz.DataType = DbType.String;
				colvarXtwldz.MaxLength = 100;
				colvarXtwldz.AutoIncrement = false;
				colvarXtwldz.IsNullable = true;
				colvarXtwldz.IsPrimaryKey = false;
				colvarXtwldz.IsForeignKey = false;
				colvarXtwldz.IsReadOnly = false;
				colvarXtwldz.DefaultSetting = @"";
				colvarXtwldz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwldz);
				
				TableSchema.TableColumn colvarXtwldh = new TableSchema.TableColumn(schema);
				colvarXtwldh.ColumnName = "XTWLDH";
				colvarXtwldh.DataType = DbType.String;
				colvarXtwldh.MaxLength = 20;
				colvarXtwldh.AutoIncrement = false;
				colvarXtwldh.IsNullable = true;
				colvarXtwldh.IsPrimaryKey = false;
				colvarXtwldh.IsForeignKey = false;
				colvarXtwldh.IsReadOnly = false;
				colvarXtwldh.DefaultSetting = @"";
				colvarXtwldh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwldh);
				
				TableSchema.TableColumn colvarXtwlcz = new TableSchema.TableColumn(schema);
				colvarXtwlcz.ColumnName = "XTWLCZ";
				colvarXtwlcz.DataType = DbType.String;
				colvarXtwlcz.MaxLength = 20;
				colvarXtwlcz.AutoIncrement = false;
				colvarXtwlcz.IsNullable = true;
				colvarXtwlcz.IsPrimaryKey = false;
				colvarXtwlcz.IsForeignKey = false;
				colvarXtwlcz.IsReadOnly = false;
				colvarXtwlcz.DefaultSetting = @"";
				colvarXtwlcz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwlcz);
				
				TableSchema.TableColumn colvarXtwlyb = new TableSchema.TableColumn(schema);
				colvarXtwlyb.ColumnName = "XTWLYB";
				colvarXtwlyb.DataType = DbType.String;
				colvarXtwlyb.MaxLength = 20;
				colvarXtwlyb.AutoIncrement = false;
				colvarXtwlyb.IsNullable = true;
				colvarXtwlyb.IsPrimaryKey = false;
				colvarXtwlyb.IsForeignKey = false;
				colvarXtwlyb.IsReadOnly = false;
				colvarXtwlyb.DefaultSetting = @"";
				colvarXtwlyb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwlyb);
				
				TableSchema.TableColumn colvarXtwlem = new TableSchema.TableColumn(schema);
				colvarXtwlem.ColumnName = "XTWLEM";
				colvarXtwlem.DataType = DbType.String;
				colvarXtwlem.MaxLength = 40;
				colvarXtwlem.AutoIncrement = false;
				colvarXtwlem.IsNullable = true;
				colvarXtwlem.IsPrimaryKey = false;
				colvarXtwlem.IsForeignKey = false;
				colvarXtwlem.IsReadOnly = false;
				colvarXtwlem.DefaultSetting = @"";
				colvarXtwlem.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwlem);
				
				TableSchema.TableColumn colvarXtkhyh = new TableSchema.TableColumn(schema);
				colvarXtkhyh.ColumnName = "XTKHYH";
				colvarXtkhyh.DataType = DbType.String;
				colvarXtkhyh.MaxLength = 100;
				colvarXtkhyh.AutoIncrement = false;
				colvarXtkhyh.IsNullable = true;
				colvarXtkhyh.IsPrimaryKey = false;
				colvarXtkhyh.IsForeignKey = false;
				colvarXtkhyh.IsReadOnly = false;
				colvarXtkhyh.DefaultSetting = @"";
				colvarXtkhyh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkhyh);
				
				TableSchema.TableColumn colvarXtkhzh = new TableSchema.TableColumn(schema);
				colvarXtkhzh.ColumnName = "XTKHZH";
				colvarXtkhzh.DataType = DbType.String;
				colvarXtkhzh.MaxLength = 60;
				colvarXtkhzh.AutoIncrement = false;
				colvarXtkhzh.IsNullable = true;
				colvarXtkhzh.IsPrimaryKey = false;
				colvarXtkhzh.IsForeignKey = false;
				colvarXtkhzh.IsReadOnly = false;
				colvarXtkhzh.DefaultSetting = @"";
				colvarXtkhzh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkhzh);
				
				TableSchema.TableColumn colvarXtzcdd = new TableSchema.TableColumn(schema);
				colvarXtzcdd.ColumnName = "XTZCDD";
				colvarXtzcdd.DataType = DbType.String;
				colvarXtzcdd.MaxLength = 100;
				colvarXtzcdd.AutoIncrement = false;
				colvarXtzcdd.IsNullable = true;
				colvarXtzcdd.IsPrimaryKey = false;
				colvarXtzcdd.IsForeignKey = false;
				colvarXtzcdd.IsReadOnly = false;
				colvarXtzcdd.DefaultSetting = @"";
				colvarXtzcdd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtzcdd);
				
				TableSchema.TableColumn colvarXtjymj = new TableSchema.TableColumn(schema);
				colvarXtjymj.ColumnName = "XTJYMJ";
				colvarXtjymj.DataType = DbType.Decimal;
				colvarXtjymj.MaxLength = 0;
				colvarXtjymj.AutoIncrement = false;
				colvarXtjymj.IsNullable = true;
				colvarXtjymj.IsPrimaryKey = false;
				colvarXtjymj.IsForeignKey = false;
				colvarXtjymj.IsReadOnly = false;
				colvarXtjymj.DefaultSetting = @"";
				colvarXtjymj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtjymj);
				
				TableSchema.TableColumn colvarXtfrdb = new TableSchema.TableColumn(schema);
				colvarXtfrdb.ColumnName = "XTFRDB";
				colvarXtfrdb.DataType = DbType.String;
				colvarXtfrdb.MaxLength = 20;
				colvarXtfrdb.AutoIncrement = false;
				colvarXtfrdb.IsNullable = true;
				colvarXtfrdb.IsPrimaryKey = false;
				colvarXtfrdb.IsForeignKey = false;
				colvarXtfrdb.IsReadOnly = false;
				colvarXtfrdb.DefaultSetting = @"";
				colvarXtfrdb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtfrdb);
				
				TableSchema.TableColumn colvarXtqyxz = new TableSchema.TableColumn(schema);
				colvarXtqyxz.ColumnName = "XTQYXZ";
				colvarXtqyxz.DataType = DbType.String;
				colvarXtqyxz.MaxLength = 1;
				colvarXtqyxz.AutoIncrement = false;
				colvarXtqyxz.IsNullable = true;
				colvarXtqyxz.IsPrimaryKey = false;
				colvarXtqyxz.IsForeignKey = false;
				colvarXtqyxz.IsReadOnly = false;
				colvarXtqyxz.DefaultSetting = @"";
				colvarXtqyxz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtqyxz);
				
				TableSchema.TableColumn colvarXtlxry = new TableSchema.TableColumn(schema);
				colvarXtlxry.ColumnName = "XTLXRY";
				colvarXtlxry.DataType = DbType.String;
				colvarXtlxry.MaxLength = 20;
				colvarXtlxry.AutoIncrement = false;
				colvarXtlxry.IsNullable = true;
				colvarXtlxry.IsPrimaryKey = false;
				colvarXtlxry.IsForeignKey = false;
				colvarXtlxry.IsReadOnly = false;
				colvarXtlxry.DefaultSetting = @"";
				colvarXtlxry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtlxry);
				
				TableSchema.TableColumn colvarXtlxdh = new TableSchema.TableColumn(schema);
				colvarXtlxdh.ColumnName = "XTLXDH";
				colvarXtlxdh.DataType = DbType.String;
				colvarXtlxdh.MaxLength = 20;
				colvarXtlxdh.AutoIncrement = false;
				colvarXtlxdh.IsNullable = true;
				colvarXtlxdh.IsPrimaryKey = false;
				colvarXtlxdh.IsForeignKey = false;
				colvarXtlxdh.IsReadOnly = false;
				colvarXtlxdh.DefaultSetting = @"";
				colvarXtlxdh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtlxdh);
				
				TableSchema.TableColumn colvarXtlxbp = new TableSchema.TableColumn(schema);
				colvarXtlxbp.ColumnName = "XTLXBP";
				colvarXtlxbp.DataType = DbType.String;
				colvarXtlxbp.MaxLength = 20;
				colvarXtlxbp.AutoIncrement = false;
				colvarXtlxbp.IsNullable = true;
				colvarXtlxbp.IsPrimaryKey = false;
				colvarXtlxbp.IsForeignKey = false;
				colvarXtlxbp.IsReadOnly = false;
				colvarXtlxbp.DefaultSetting = @"";
				colvarXtlxbp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtlxbp);
				
				TableSchema.TableColumn colvarXtlxsj = new TableSchema.TableColumn(schema);
				colvarXtlxsj.ColumnName = "XTLXSJ";
				colvarXtlxsj.DataType = DbType.String;
				colvarXtlxsj.MaxLength = 20;
				colvarXtlxsj.AutoIncrement = false;
				colvarXtlxsj.IsNullable = true;
				colvarXtlxsj.IsPrimaryKey = false;
				colvarXtlxsj.IsForeignKey = false;
				colvarXtlxsj.IsReadOnly = false;
				colvarXtlxsj.DefaultSetting = @"";
				colvarXtlxsj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtlxsj);
				
				TableSchema.TableColumn colvarXtxsdb = new TableSchema.TableColumn(schema);
				colvarXtxsdb.ColumnName = "XTXSDB";
				colvarXtxsdb.DataType = DbType.String;
				colvarXtxsdb.MaxLength = 8;
				colvarXtxsdb.AutoIncrement = false;
				colvarXtxsdb.IsNullable = true;
				colvarXtxsdb.IsPrimaryKey = false;
				colvarXtxsdb.IsForeignKey = false;
				colvarXtxsdb.IsReadOnly = false;
				colvarXtxsdb.DefaultSetting = @"";
				colvarXtxsdb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtxsdb);
				
				TableSchema.TableColumn colvarXtjsfs = new TableSchema.TableColumn(schema);
				colvarXtjsfs.ColumnName = "XTJSFS";
				colvarXtjsfs.DataType = DbType.String;
				colvarXtjsfs.MaxLength = 4;
				colvarXtjsfs.AutoIncrement = false;
				colvarXtjsfs.IsNullable = true;
				colvarXtjsfs.IsPrimaryKey = false;
				colvarXtjsfs.IsForeignKey = false;
				colvarXtjsfs.IsReadOnly = false;
				colvarXtjsfs.DefaultSetting = @"";
				colvarXtjsfs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtjsfs);
				
				TableSchema.TableColumn colvarXtysfs = new TableSchema.TableColumn(schema);
				colvarXtysfs.ColumnName = "XTYSFS";
				colvarXtysfs.DataType = DbType.String;
				colvarXtysfs.MaxLength = 4;
				colvarXtysfs.AutoIncrement = false;
				colvarXtysfs.IsNullable = true;
				colvarXtysfs.IsPrimaryKey = false;
				colvarXtysfs.IsForeignKey = false;
				colvarXtysfs.IsReadOnly = false;
				colvarXtysfs.DefaultSetting = @"";
				colvarXtysfs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtysfs);
				
				TableSchema.TableColumn colvarXthzqs = new TableSchema.TableColumn(schema);
				colvarXthzqs.ColumnName = "XTHZQS";
				colvarXthzqs.DataType = DbType.DateTime;
				colvarXthzqs.MaxLength = 0;
				colvarXthzqs.AutoIncrement = false;
				colvarXthzqs.IsNullable = true;
				colvarXthzqs.IsPrimaryKey = false;
				colvarXthzqs.IsForeignKey = false;
				colvarXthzqs.IsReadOnly = false;
				colvarXthzqs.DefaultSetting = @"";
				colvarXthzqs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXthzqs);
				
				TableSchema.TableColumn colvarXtwlzt = new TableSchema.TableColumn(schema);
				colvarXtwlzt.ColumnName = "XTWLZT";
				colvarXtwlzt.DataType = DbType.String;
				colvarXtwlzt.MaxLength = 1;
				colvarXtwlzt.AutoIncrement = false;
				colvarXtwlzt.IsNullable = true;
				colvarXtwlzt.IsPrimaryKey = false;
				colvarXtwlzt.IsForeignKey = false;
				colvarXtwlzt.IsReadOnly = false;
				colvarXtwlzt.DefaultSetting = @"";
				colvarXtwlzt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwlzt);
				
				TableSchema.TableColumn colvarXtzzyy = new TableSchema.TableColumn(schema);
				colvarXtzzyy.ColumnName = "XTZZYY";
				colvarXtzzyy.DataType = DbType.String;
				colvarXtzzyy.MaxLength = 255;
				colvarXtzzyy.AutoIncrement = false;
				colvarXtzzyy.IsNullable = true;
				colvarXtzzyy.IsPrimaryKey = false;
				colvarXtzzyy.IsForeignKey = false;
				colvarXtzzyy.IsReadOnly = false;
				colvarXtzzyy.DefaultSetting = @"";
				colvarXtzzyy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtzzyy);
				
				TableSchema.TableColumn colvarXtkhbz = new TableSchema.TableColumn(schema);
				colvarXtkhbz.ColumnName = "XTKHBZ";
				colvarXtkhbz.DataType = DbType.String;
				colvarXtkhbz.MaxLength = 1;
				colvarXtkhbz.AutoIncrement = false;
				colvarXtkhbz.IsNullable = true;
				colvarXtkhbz.IsPrimaryKey = false;
				colvarXtkhbz.IsForeignKey = false;
				colvarXtkhbz.IsReadOnly = false;
				colvarXtkhbz.DefaultSetting = @"";
				colvarXtkhbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkhbz);
				
				TableSchema.TableColumn colvarXtgybz = new TableSchema.TableColumn(schema);
				colvarXtgybz.ColumnName = "XTGYBZ";
				colvarXtgybz.DataType = DbType.String;
				colvarXtgybz.MaxLength = 1;
				colvarXtgybz.AutoIncrement = false;
				colvarXtgybz.IsNullable = true;
				colvarXtgybz.IsPrimaryKey = false;
				colvarXtgybz.IsForeignKey = false;
				colvarXtgybz.IsReadOnly = false;
				colvarXtgybz.DefaultSetting = @"";
				colvarXtgybz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtgybz);
				
				TableSchema.TableColumn colvarXskhzb = new TableSchema.TableColumn(schema);
				colvarXskhzb.ColumnName = "XSKHZB";
				colvarXskhzb.DataType = DbType.String;
				colvarXskhzb.MaxLength = 4;
				colvarXskhzb.AutoIncrement = false;
				colvarXskhzb.IsNullable = true;
				colvarXskhzb.IsPrimaryKey = false;
				colvarXskhzb.IsForeignKey = false;
				colvarXskhzb.IsReadOnly = false;
				colvarXskhzb.DefaultSetting = @"";
				colvarXskhzb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskhzb);
				
				TableSchema.TableColumn colvarXskhkl = new TableSchema.TableColumn(schema);
				colvarXskhkl.ColumnName = "XSKHKL";
				colvarXskhkl.DataType = DbType.Decimal;
				colvarXskhkl.MaxLength = 0;
				colvarXskhkl.AutoIncrement = false;
				colvarXskhkl.IsNullable = true;
				colvarXskhkl.IsPrimaryKey = false;
				colvarXskhkl.IsForeignKey = false;
				colvarXskhkl.IsReadOnly = false;
				colvarXskhkl.DefaultSetting = @"";
				colvarXskhkl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskhkl);
				
				TableSchema.TableColumn colvarXsjxbz = new TableSchema.TableColumn(schema);
				colvarXsjxbz.ColumnName = "XSJXBZ";
				colvarXsjxbz.DataType = DbType.String;
				colvarXsjxbz.MaxLength = 1;
				colvarXsjxbz.AutoIncrement = false;
				colvarXsjxbz.IsNullable = true;
				colvarXsjxbz.IsPrimaryKey = false;
				colvarXsjxbz.IsForeignKey = false;
				colvarXsjxbz.IsReadOnly = false;
				colvarXsjxbz.DefaultSetting = @"";
				colvarXsjxbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsjxbz);
				
				TableSchema.TableColumn colvarXtkhdj = new TableSchema.TableColumn(schema);
				colvarXtkhdj.ColumnName = "XTKHDJ";
				colvarXtkhdj.DataType = DbType.String;
				colvarXtkhdj.MaxLength = 4;
				colvarXtkhdj.AutoIncrement = false;
				colvarXtkhdj.IsNullable = true;
				colvarXtkhdj.IsPrimaryKey = false;
				colvarXtkhdj.IsForeignKey = false;
				colvarXtkhdj.IsReadOnly = false;
				colvarXtkhdj.DefaultSetting = @"";
				colvarXtkhdj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkhdj);
				
				TableSchema.TableColumn colvarXtzzsh = new TableSchema.TableColumn(schema);
				colvarXtzzsh.ColumnName = "XTZZSH";
				colvarXtzzsh.DataType = DbType.String;
				colvarXtzzsh.MaxLength = 60;
				colvarXtzzsh.AutoIncrement = false;
				colvarXtzzsh.IsNullable = true;
				colvarXtzzsh.IsPrimaryKey = false;
				colvarXtzzsh.IsForeignKey = false;
				colvarXtzzsh.IsReadOnly = false;
				colvarXtzzsh.DefaultSetting = @"";
				colvarXtzzsh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtzzsh);
				
				TableSchema.TableColumn colvarXtwtbz = new TableSchema.TableColumn(schema);
				colvarXtwtbz.ColumnName = "XTWTBZ";
				colvarXtwtbz.DataType = DbType.String;
				colvarXtwtbz.MaxLength = 1;
				colvarXtwtbz.AutoIncrement = false;
				colvarXtwtbz.IsNullable = true;
				colvarXtwtbz.IsPrimaryKey = false;
				colvarXtwtbz.IsForeignKey = false;
				colvarXtwtbz.IsReadOnly = false;
				colvarXtwtbz.DefaultSetting = @"";
				colvarXtwtbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwtbz);
				
				TableSchema.TableColumn colvarXtjgbz = new TableSchema.TableColumn(schema);
				colvarXtjgbz.ColumnName = "XTJGBZ";
				colvarXtjgbz.DataType = DbType.String;
				colvarXtjgbz.MaxLength = 1;
				colvarXtjgbz.AutoIncrement = false;
				colvarXtjgbz.IsNullable = true;
				colvarXtjgbz.IsPrimaryKey = false;
				colvarXtjgbz.IsForeignKey = false;
				colvarXtjgbz.IsReadOnly = false;
				colvarXtjgbz.DefaultSetting = @"";
				colvarXtjgbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtjgbz);
				
				TableSchema.TableColumn colvarXtbzje = new TableSchema.TableColumn(schema);
				colvarXtbzje.ColumnName = "XTBZJE";
				colvarXtbzje.DataType = DbType.Decimal;
				colvarXtbzje.MaxLength = 0;
				colvarXtbzje.AutoIncrement = false;
				colvarXtbzje.IsNullable = true;
				colvarXtbzje.IsPrimaryKey = false;
				colvarXtbzje.IsForeignKey = false;
				colvarXtbzje.IsReadOnly = false;
				colvarXtbzje.DefaultSetting = @"";
				colvarXtbzje.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbzje);
				
				TableSchema.TableColumn colvarXtdjbl = new TableSchema.TableColumn(schema);
				colvarXtdjbl.ColumnName = "XTDJBL";
				colvarXtdjbl.DataType = DbType.Decimal;
				colvarXtdjbl.MaxLength = 0;
				colvarXtdjbl.AutoIncrement = false;
				colvarXtdjbl.IsNullable = true;
				colvarXtdjbl.IsPrimaryKey = false;
				colvarXtdjbl.IsForeignKey = false;
				colvarXtdjbl.IsReadOnly = false;
				colvarXtdjbl.DefaultSetting = @"";
				colvarXtdjbl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdjbl);
				
				TableSchema.TableColumn colvarXtdjjy = new TableSchema.TableColumn(schema);
				colvarXtdjjy.ColumnName = "XTDJJY";
				colvarXtdjjy.DataType = DbType.String;
				colvarXtdjjy.MaxLength = 1;
				colvarXtdjjy.AutoIncrement = false;
				colvarXtdjjy.IsNullable = true;
				colvarXtdjjy.IsPrimaryKey = false;
				colvarXtdjjy.IsForeignKey = false;
				colvarXtdjjy.IsReadOnly = false;
				colvarXtdjjy.DefaultSetting = @"";
				colvarXtdjjy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdjjy);
				
				TableSchema.TableColumn colvarXtkhlx = new TableSchema.TableColumn(schema);
				colvarXtkhlx.ColumnName = "XTKHLX";
				colvarXtkhlx.DataType = DbType.String;
				colvarXtkhlx.MaxLength = 1;
				colvarXtkhlx.AutoIncrement = false;
				colvarXtkhlx.IsNullable = true;
				colvarXtkhlx.IsPrimaryKey = false;
				colvarXtkhlx.IsForeignKey = false;
				colvarXtkhlx.IsReadOnly = false;
				colvarXtkhlx.DefaultSetting = @"";
				colvarXtkhlx.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkhlx);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ErpNowthwin"].AddSchema("XTM141",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Xtwldm")]
		[Bindable(true)]
		public string Xtwldm 
		{
			get { return GetColumnValue<string>(Columns.Xtwldm); }
			set { SetColumnValue(Columns.Xtwldm, value); }
		}
		  
		[XmlAttribute("Xtwlmc")]
		[Bindable(true)]
		public string Xtwlmc 
		{
			get { return GetColumnValue<string>(Columns.Xtwlmc); }
			set { SetColumnValue(Columns.Xtwlmc, value); }
		}
		  
		[XmlAttribute("Xtdqdm")]
		[Bindable(true)]
		public string Xtdqdm 
		{
			get { return GetColumnValue<string>(Columns.Xtdqdm); }
			set { SetColumnValue(Columns.Xtdqdm, value); }
		}
		  
		[XmlAttribute("Xtbmdm")]
		[Bindable(true)]
		public string Xtbmdm 
		{
			get { return GetColumnValue<string>(Columns.Xtbmdm); }
			set { SetColumnValue(Columns.Xtbmdm, value); }
		}
		  
		[XmlAttribute("Xtwldz")]
		[Bindable(true)]
		public string Xtwldz 
		{
			get { return GetColumnValue<string>(Columns.Xtwldz); }
			set { SetColumnValue(Columns.Xtwldz, value); }
		}
		  
		[XmlAttribute("Xtwldh")]
		[Bindable(true)]
		public string Xtwldh 
		{
			get { return GetColumnValue<string>(Columns.Xtwldh); }
			set { SetColumnValue(Columns.Xtwldh, value); }
		}
		  
		[XmlAttribute("Xtwlcz")]
		[Bindable(true)]
		public string Xtwlcz 
		{
			get { return GetColumnValue<string>(Columns.Xtwlcz); }
			set { SetColumnValue(Columns.Xtwlcz, value); }
		}
		  
		[XmlAttribute("Xtwlyb")]
		[Bindable(true)]
		public string Xtwlyb 
		{
			get { return GetColumnValue<string>(Columns.Xtwlyb); }
			set { SetColumnValue(Columns.Xtwlyb, value); }
		}
		  
		[XmlAttribute("Xtwlem")]
		[Bindable(true)]
		public string Xtwlem 
		{
			get { return GetColumnValue<string>(Columns.Xtwlem); }
			set { SetColumnValue(Columns.Xtwlem, value); }
		}
		  
		[XmlAttribute("Xtkhyh")]
		[Bindable(true)]
		public string Xtkhyh 
		{
			get { return GetColumnValue<string>(Columns.Xtkhyh); }
			set { SetColumnValue(Columns.Xtkhyh, value); }
		}
		  
		[XmlAttribute("Xtkhzh")]
		[Bindable(true)]
		public string Xtkhzh 
		{
			get { return GetColumnValue<string>(Columns.Xtkhzh); }
			set { SetColumnValue(Columns.Xtkhzh, value); }
		}
		  
		[XmlAttribute("Xtzcdd")]
		[Bindable(true)]
		public string Xtzcdd 
		{
			get { return GetColumnValue<string>(Columns.Xtzcdd); }
			set { SetColumnValue(Columns.Xtzcdd, value); }
		}
		  
		[XmlAttribute("Xtjymj")]
		[Bindable(true)]
		public decimal? Xtjymj 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtjymj); }
			set { SetColumnValue(Columns.Xtjymj, value); }
		}
		  
		[XmlAttribute("Xtfrdb")]
		[Bindable(true)]
		public string Xtfrdb 
		{
			get { return GetColumnValue<string>(Columns.Xtfrdb); }
			set { SetColumnValue(Columns.Xtfrdb, value); }
		}
		  
		[XmlAttribute("Xtqyxz")]
		[Bindable(true)]
		public string Xtqyxz 
		{
			get { return GetColumnValue<string>(Columns.Xtqyxz); }
			set { SetColumnValue(Columns.Xtqyxz, value); }
		}
		  
		[XmlAttribute("Xtlxry")]
		[Bindable(true)]
		public string Xtlxry 
		{
			get { return GetColumnValue<string>(Columns.Xtlxry); }
			set { SetColumnValue(Columns.Xtlxry, value); }
		}
		  
		[XmlAttribute("Xtlxdh")]
		[Bindable(true)]
		public string Xtlxdh 
		{
			get { return GetColumnValue<string>(Columns.Xtlxdh); }
			set { SetColumnValue(Columns.Xtlxdh, value); }
		}
		  
		[XmlAttribute("Xtlxbp")]
		[Bindable(true)]
		public string Xtlxbp 
		{
			get { return GetColumnValue<string>(Columns.Xtlxbp); }
			set { SetColumnValue(Columns.Xtlxbp, value); }
		}
		  
		[XmlAttribute("Xtlxsj")]
		[Bindable(true)]
		public string Xtlxsj 
		{
			get { return GetColumnValue<string>(Columns.Xtlxsj); }
			set { SetColumnValue(Columns.Xtlxsj, value); }
		}
		  
		[XmlAttribute("Xtxsdb")]
		[Bindable(true)]
		public string Xtxsdb 
		{
			get { return GetColumnValue<string>(Columns.Xtxsdb); }
			set { SetColumnValue(Columns.Xtxsdb, value); }
		}
		  
		[XmlAttribute("Xtjsfs")]
		[Bindable(true)]
		public string Xtjsfs 
		{
			get { return GetColumnValue<string>(Columns.Xtjsfs); }
			set { SetColumnValue(Columns.Xtjsfs, value); }
		}
		  
		[XmlAttribute("Xtysfs")]
		[Bindable(true)]
		public string Xtysfs 
		{
			get { return GetColumnValue<string>(Columns.Xtysfs); }
			set { SetColumnValue(Columns.Xtysfs, value); }
		}
		  
		[XmlAttribute("Xthzqs")]
		[Bindable(true)]
		public DateTime? Xthzqs 
		{
			get { return GetColumnValue<DateTime?>(Columns.Xthzqs); }
			set { SetColumnValue(Columns.Xthzqs, value); }
		}
		  
		[XmlAttribute("Xtwlzt")]
		[Bindable(true)]
		public string Xtwlzt 
		{
			get { return GetColumnValue<string>(Columns.Xtwlzt); }
			set { SetColumnValue(Columns.Xtwlzt, value); }
		}
		  
		[XmlAttribute("Xtzzyy")]
		[Bindable(true)]
		public string Xtzzyy 
		{
			get { return GetColumnValue<string>(Columns.Xtzzyy); }
			set { SetColumnValue(Columns.Xtzzyy, value); }
		}
		  
		[XmlAttribute("Xtkhbz")]
		[Bindable(true)]
		public string Xtkhbz 
		{
			get { return GetColumnValue<string>(Columns.Xtkhbz); }
			set { SetColumnValue(Columns.Xtkhbz, value); }
		}
		  
		[XmlAttribute("Xtgybz")]
		[Bindable(true)]
		public string Xtgybz 
		{
			get { return GetColumnValue<string>(Columns.Xtgybz); }
			set { SetColumnValue(Columns.Xtgybz, value); }
		}
		  
		[XmlAttribute("Xskhzb")]
		[Bindable(true)]
		public string Xskhzb 
		{
			get { return GetColumnValue<string>(Columns.Xskhzb); }
			set { SetColumnValue(Columns.Xskhzb, value); }
		}
		  
		[XmlAttribute("Xskhkl")]
		[Bindable(true)]
		public decimal? Xskhkl 
		{
			get { return GetColumnValue<decimal?>(Columns.Xskhkl); }
			set { SetColumnValue(Columns.Xskhkl, value); }
		}
		  
		[XmlAttribute("Xsjxbz")]
		[Bindable(true)]
		public string Xsjxbz 
		{
			get { return GetColumnValue<string>(Columns.Xsjxbz); }
			set { SetColumnValue(Columns.Xsjxbz, value); }
		}
		  
		[XmlAttribute("Xtkhdj")]
		[Bindable(true)]
		public string Xtkhdj 
		{
			get { return GetColumnValue<string>(Columns.Xtkhdj); }
			set { SetColumnValue(Columns.Xtkhdj, value); }
		}
		  
		[XmlAttribute("Xtzzsh")]
		[Bindable(true)]
		public string Xtzzsh 
		{
			get { return GetColumnValue<string>(Columns.Xtzzsh); }
			set { SetColumnValue(Columns.Xtzzsh, value); }
		}
		  
		[XmlAttribute("Xtwtbz")]
		[Bindable(true)]
		public string Xtwtbz 
		{
			get { return GetColumnValue<string>(Columns.Xtwtbz); }
			set { SetColumnValue(Columns.Xtwtbz, value); }
		}
		  
		[XmlAttribute("Xtjgbz")]
		[Bindable(true)]
		public string Xtjgbz 
		{
			get { return GetColumnValue<string>(Columns.Xtjgbz); }
			set { SetColumnValue(Columns.Xtjgbz, value); }
		}
		  
		[XmlAttribute("Xtbzje")]
		[Bindable(true)]
		public decimal? Xtbzje 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtbzje); }
			set { SetColumnValue(Columns.Xtbzje, value); }
		}
		  
		[XmlAttribute("Xtdjbl")]
		[Bindable(true)]
		public decimal? Xtdjbl 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtdjbl); }
			set { SetColumnValue(Columns.Xtdjbl, value); }
		}
		  
		[XmlAttribute("Xtdjjy")]
		[Bindable(true)]
		public string Xtdjjy 
		{
			get { return GetColumnValue<string>(Columns.Xtdjjy); }
			set { SetColumnValue(Columns.Xtdjjy, value); }
		}
		  
		[XmlAttribute("Xtkhlx")]
		[Bindable(true)]
		public string Xtkhlx 
		{
			get { return GetColumnValue<string>(Columns.Xtkhlx); }
			set { SetColumnValue(Columns.Xtkhlx, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varXtwldm,string varXtwlmc,string varXtdqdm,string varXtbmdm,string varXtwldz,string varXtwldh,string varXtwlcz,string varXtwlyb,string varXtwlem,string varXtkhyh,string varXtkhzh,string varXtzcdd,decimal? varXtjymj,string varXtfrdb,string varXtqyxz,string varXtlxry,string varXtlxdh,string varXtlxbp,string varXtlxsj,string varXtxsdb,string varXtjsfs,string varXtysfs,DateTime? varXthzqs,string varXtwlzt,string varXtzzyy,string varXtkhbz,string varXtgybz,string varXskhzb,decimal? varXskhkl,string varXsjxbz,string varXtkhdj,string varXtzzsh,string varXtwtbz,string varXtjgbz,decimal? varXtbzje,decimal? varXtdjbl,string varXtdjjy,string varXtkhlx)
		{
			XTM141 item = new XTM141();
			
			item.Xtwldm = varXtwldm;
			
			item.Xtwlmc = varXtwlmc;
			
			item.Xtdqdm = varXtdqdm;
			
			item.Xtbmdm = varXtbmdm;
			
			item.Xtwldz = varXtwldz;
			
			item.Xtwldh = varXtwldh;
			
			item.Xtwlcz = varXtwlcz;
			
			item.Xtwlyb = varXtwlyb;
			
			item.Xtwlem = varXtwlem;
			
			item.Xtkhyh = varXtkhyh;
			
			item.Xtkhzh = varXtkhzh;
			
			item.Xtzcdd = varXtzcdd;
			
			item.Xtjymj = varXtjymj;
			
			item.Xtfrdb = varXtfrdb;
			
			item.Xtqyxz = varXtqyxz;
			
			item.Xtlxry = varXtlxry;
			
			item.Xtlxdh = varXtlxdh;
			
			item.Xtlxbp = varXtlxbp;
			
			item.Xtlxsj = varXtlxsj;
			
			item.Xtxsdb = varXtxsdb;
			
			item.Xtjsfs = varXtjsfs;
			
			item.Xtysfs = varXtysfs;
			
			item.Xthzqs = varXthzqs;
			
			item.Xtwlzt = varXtwlzt;
			
			item.Xtzzyy = varXtzzyy;
			
			item.Xtkhbz = varXtkhbz;
			
			item.Xtgybz = varXtgybz;
			
			item.Xskhzb = varXskhzb;
			
			item.Xskhkl = varXskhkl;
			
			item.Xsjxbz = varXsjxbz;
			
			item.Xtkhdj = varXtkhdj;
			
			item.Xtzzsh = varXtzzsh;
			
			item.Xtwtbz = varXtwtbz;
			
			item.Xtjgbz = varXtjgbz;
			
			item.Xtbzje = varXtbzje;
			
			item.Xtdjbl = varXtdjbl;
			
			item.Xtdjjy = varXtdjjy;
			
			item.Xtkhlx = varXtkhlx;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varXtwldm,string varXtwlmc,string varXtdqdm,string varXtbmdm,string varXtwldz,string varXtwldh,string varXtwlcz,string varXtwlyb,string varXtwlem,string varXtkhyh,string varXtkhzh,string varXtzcdd,decimal? varXtjymj,string varXtfrdb,string varXtqyxz,string varXtlxry,string varXtlxdh,string varXtlxbp,string varXtlxsj,string varXtxsdb,string varXtjsfs,string varXtysfs,DateTime? varXthzqs,string varXtwlzt,string varXtzzyy,string varXtkhbz,string varXtgybz,string varXskhzb,decimal? varXskhkl,string varXsjxbz,string varXtkhdj,string varXtzzsh,string varXtwtbz,string varXtjgbz,decimal? varXtbzje,decimal? varXtdjbl,string varXtdjjy,string varXtkhlx)
		{
			XTM141 item = new XTM141();
			
				item.Xtwldm = varXtwldm;
			
				item.Xtwlmc = varXtwlmc;
			
				item.Xtdqdm = varXtdqdm;
			
				item.Xtbmdm = varXtbmdm;
			
				item.Xtwldz = varXtwldz;
			
				item.Xtwldh = varXtwldh;
			
				item.Xtwlcz = varXtwlcz;
			
				item.Xtwlyb = varXtwlyb;
			
				item.Xtwlem = varXtwlem;
			
				item.Xtkhyh = varXtkhyh;
			
				item.Xtkhzh = varXtkhzh;
			
				item.Xtzcdd = varXtzcdd;
			
				item.Xtjymj = varXtjymj;
			
				item.Xtfrdb = varXtfrdb;
			
				item.Xtqyxz = varXtqyxz;
			
				item.Xtlxry = varXtlxry;
			
				item.Xtlxdh = varXtlxdh;
			
				item.Xtlxbp = varXtlxbp;
			
				item.Xtlxsj = varXtlxsj;
			
				item.Xtxsdb = varXtxsdb;
			
				item.Xtjsfs = varXtjsfs;
			
				item.Xtysfs = varXtysfs;
			
				item.Xthzqs = varXthzqs;
			
				item.Xtwlzt = varXtwlzt;
			
				item.Xtzzyy = varXtzzyy;
			
				item.Xtkhbz = varXtkhbz;
			
				item.Xtgybz = varXtgybz;
			
				item.Xskhzb = varXskhzb;
			
				item.Xskhkl = varXskhkl;
			
				item.Xsjxbz = varXsjxbz;
			
				item.Xtkhdj = varXtkhdj;
			
				item.Xtzzsh = varXtzzsh;
			
				item.Xtwtbz = varXtwtbz;
			
				item.Xtjgbz = varXtjgbz;
			
				item.Xtbzje = varXtbzje;
			
				item.Xtdjbl = varXtdjbl;
			
				item.Xtdjjy = varXtdjjy;
			
				item.Xtkhlx = varXtkhlx;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn XtwldmColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwlmcColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdqdmColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbmdmColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwldzColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwldhColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwlczColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwlybColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwlemColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkhyhColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkhzhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn XtzcddColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn XtjymjColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn XtfrdbColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn XtqyxzColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn XtlxryColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn XtlxdhColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn XtlxbpColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn XtlxsjColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn XtxsdbColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn XtjsfsColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn XtysfsColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn XthzqsColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwlztColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn XtzzyyColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkhbzColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn XtgybzColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn XskhzbColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn XskhklColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn XsjxbzColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkhdjColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn XtzzshColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwtbzColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn XtjgbzColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbzjeColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdjblColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdjjyColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkhlxColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Xtwldm = @"XTWLDM";
			 public static string Xtwlmc = @"XTWLMC";
			 public static string Xtdqdm = @"XTDQDM";
			 public static string Xtbmdm = @"XTBMDM";
			 public static string Xtwldz = @"XTWLDZ";
			 public static string Xtwldh = @"XTWLDH";
			 public static string Xtwlcz = @"XTWLCZ";
			 public static string Xtwlyb = @"XTWLYB";
			 public static string Xtwlem = @"XTWLEM";
			 public static string Xtkhyh = @"XTKHYH";
			 public static string Xtkhzh = @"XTKHZH";
			 public static string Xtzcdd = @"XTZCDD";
			 public static string Xtjymj = @"XTJYMJ";
			 public static string Xtfrdb = @"XTFRDB";
			 public static string Xtqyxz = @"XTQYXZ";
			 public static string Xtlxry = @"XTLXRY";
			 public static string Xtlxdh = @"XTLXDH";
			 public static string Xtlxbp = @"XTLXBP";
			 public static string Xtlxsj = @"XTLXSJ";
			 public static string Xtxsdb = @"XTXSDB";
			 public static string Xtjsfs = @"XTJSFS";
			 public static string Xtysfs = @"XTYSFS";
			 public static string Xthzqs = @"XTHZQS";
			 public static string Xtwlzt = @"XTWLZT";
			 public static string Xtzzyy = @"XTZZYY";
			 public static string Xtkhbz = @"XTKHBZ";
			 public static string Xtgybz = @"XTGYBZ";
			 public static string Xskhzb = @"XSKHZB";
			 public static string Xskhkl = @"XSKHKL";
			 public static string Xsjxbz = @"XSJXBZ";
			 public static string Xtkhdj = @"XTKHDJ";
			 public static string Xtzzsh = @"XTZZSH";
			 public static string Xtwtbz = @"XTWTBZ";
			 public static string Xtjgbz = @"XTJGBZ";
			 public static string Xtbzje = @"XTBZJE";
			 public static string Xtdjbl = @"XTDJBL";
			 public static string Xtdjjy = @"XTDJJY";
			 public static string Xtkhlx = @"XTKHLX";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
