using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
	/// <summary>
	/// Strongly-typed collection for the SCT51 class.
	/// </summary>
    [Serializable]
	public partial class SCT51Collection : ActiveList<SCT51, SCT51Collection>
	{	   
		public SCT51Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SCT51Collection</returns>
		public SCT51Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SCT51 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the SCT51 table.
	/// </summary>
	[Serializable]
	public partial class SCT51 : ActiveRecord<SCT51>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public SCT51()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SCT51(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SCT51(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SCT51(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("SCT51", TableType.Table, DataService.GetInstance("ErpNowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"FYERP";
				//columns
				
				TableSchema.TableColumn colvarSckhxb = new TableSchema.TableColumn(schema);
				colvarSckhxb.ColumnName = "SCKHXB";
				colvarSckhxb.DataType = DbType.String;
				colvarSckhxb.MaxLength = 1;
				colvarSckhxb.AutoIncrement = false;
				colvarSckhxb.IsNullable = true;
				colvarSckhxb.IsPrimaryKey = false;
				colvarSckhxb.IsForeignKey = false;
				colvarSckhxb.IsReadOnly = false;
				colvarSckhxb.DefaultSetting = @"";
				colvarSckhxb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSckhxb);
				
				TableSchema.TableColumn colvarScyxzj = new TableSchema.TableColumn(schema);
				colvarScyxzj.ColumnName = "SCYXZJ";
				colvarScyxzj.DataType = DbType.String;
				colvarScyxzj.MaxLength = 20;
				colvarScyxzj.AutoIncrement = false;
				colvarScyxzj.IsNullable = true;
				colvarScyxzj.IsPrimaryKey = false;
				colvarScyxzj.IsForeignKey = false;
				colvarScyxzj.IsReadOnly = false;
				colvarScyxzj.DefaultSetting = @"";
				colvarScyxzj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScyxzj);
				
				TableSchema.TableColumn colvarXtxsdm = new TableSchema.TableColumn(schema);
				colvarXtxsdm.ColumnName = "XTXSDM";
				colvarXtxsdm.DataType = DbType.String;
				colvarXtxsdm.MaxLength = 4;
				colvarXtxsdm.AutoIncrement = false;
				colvarXtxsdm.IsNullable = true;
				colvarXtxsdm.IsPrimaryKey = false;
				colvarXtxsdm.IsForeignKey = false;
				colvarXtxsdm.IsReadOnly = false;
				colvarXtxsdm.DefaultSetting = @"";
				colvarXtxsdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtxsdm);
				
				TableSchema.TableColumn colvarXthbdm = new TableSchema.TableColumn(schema);
				colvarXthbdm.ColumnName = "XTHBDM";
				colvarXthbdm.DataType = DbType.String;
				colvarXthbdm.MaxLength = 3;
				colvarXthbdm.AutoIncrement = false;
				colvarXthbdm.IsNullable = true;
				colvarXthbdm.IsPrimaryKey = false;
				colvarXthbdm.IsForeignKey = false;
				colvarXthbdm.IsReadOnly = false;
				colvarXthbdm.DefaultSetting = @"";
				colvarXthbdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXthbdm);
				
				TableSchema.TableColumn colvarXtdhhl = new TableSchema.TableColumn(schema);
				colvarXtdhhl.ColumnName = "XTDHHL";
				colvarXtdhhl.DataType = DbType.Decimal;
				colvarXtdhhl.MaxLength = 0;
				colvarXtdhhl.AutoIncrement = false;
				colvarXtdhhl.IsNullable = true;
				colvarXtdhhl.IsPrimaryKey = false;
				colvarXtdhhl.IsForeignKey = false;
				colvarXtdhhl.IsReadOnly = false;
				colvarXtdhhl.DefaultSetting = @"";
				colvarXtdhhl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdhhl);
				
				TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
				colvarScggdh.ColumnName = "SCGGDH";
				colvarScggdh.DataType = DbType.String;
				colvarScggdh.MaxLength = 12;
				colvarScggdh.AutoIncrement = false;
				colvarScggdh.IsNullable = false;
				colvarScggdh.IsPrimaryKey = true;
				colvarScggdh.IsForeignKey = false;
				colvarScggdh.IsReadOnly = false;
				colvarScggdh.DefaultSetting = @"";
				colvarScggdh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScggdh);
				
				TableSchema.TableColumn colvarSchtbh = new TableSchema.TableColumn(schema);
				colvarSchtbh.ColumnName = "SCHTBH";
				colvarSchtbh.DataType = DbType.String;
				colvarSchtbh.MaxLength = 12;
				colvarSchtbh.AutoIncrement = false;
				colvarSchtbh.IsNullable = true;
				colvarSchtbh.IsPrimaryKey = false;
				colvarSchtbh.IsForeignKey = false;
				colvarSchtbh.IsReadOnly = false;
				colvarSchtbh.DefaultSetting = @"";
				colvarSchtbh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSchtbh);
				
				TableSchema.TableColumn colvarXtwldm = new TableSchema.TableColumn(schema);
				colvarXtwldm.ColumnName = "XTWLDM";
				colvarXtwldm.DataType = DbType.String;
				colvarXtwldm.MaxLength = 8;
				colvarXtwldm.AutoIncrement = false;
				colvarXtwldm.IsNullable = true;
				colvarXtwldm.IsPrimaryKey = false;
				colvarXtwldm.IsForeignKey = false;
				colvarXtwldm.IsReadOnly = false;
				colvarXtwldm.DefaultSetting = @"";
				colvarXtwldm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwldm);
				
				TableSchema.TableColumn colvarSckhxm = new TableSchema.TableColumn(schema);
				colvarSckhxm.ColumnName = "SCKHXM";
				colvarSckhxm.DataType = DbType.String;
				colvarSckhxm.MaxLength = 100;
				colvarSckhxm.AutoIncrement = false;
				colvarSckhxm.IsNullable = true;
				colvarSckhxm.IsPrimaryKey = false;
				colvarSckhxm.IsForeignKey = false;
				colvarSckhxm.IsReadOnly = false;
				colvarSckhxm.DefaultSetting = @"";
				colvarSckhxm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSckhxm);
				
				TableSchema.TableColumn colvarSckhdz = new TableSchema.TableColumn(schema);
				colvarSckhdz.ColumnName = "SCKHDZ";
				colvarSckhdz.DataType = DbType.String;
				colvarSckhdz.MaxLength = 60;
				colvarSckhdz.AutoIncrement = false;
				colvarSckhdz.IsNullable = true;
				colvarSckhdz.IsPrimaryKey = false;
				colvarSckhdz.IsForeignKey = false;
				colvarSckhdz.IsReadOnly = false;
				colvarSckhdz.DefaultSetting = @"";
				colvarSckhdz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSckhdz);
				
				TableSchema.TableColumn colvarScyzbm = new TableSchema.TableColumn(schema);
				colvarScyzbm.ColumnName = "SCYZBM";
				colvarScyzbm.DataType = DbType.String;
				colvarScyzbm.MaxLength = 8;
				colvarScyzbm.AutoIncrement = false;
				colvarScyzbm.IsNullable = true;
				colvarScyzbm.IsPrimaryKey = false;
				colvarScyzbm.IsForeignKey = false;
				colvarScyzbm.IsReadOnly = false;
				colvarScyzbm.DefaultSetting = @"";
				colvarScyzbm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScyzbm);
				
				TableSchema.TableColumn colvarScgddh = new TableSchema.TableColumn(schema);
				colvarScgddh.ColumnName = "SCGDDH";
				colvarScgddh.DataType = DbType.String;
				colvarScgddh.MaxLength = 20;
				colvarScgddh.AutoIncrement = false;
				colvarScgddh.IsNullable = true;
				colvarScgddh.IsPrimaryKey = false;
				colvarScgddh.IsForeignKey = false;
				colvarScgddh.IsReadOnly = false;
				colvarScgddh.DefaultSetting = @"";
				colvarScgddh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScgddh);
				
				TableSchema.TableColumn colvarScyddh = new TableSchema.TableColumn(schema);
				colvarScyddh.ColumnName = "SCYDDH";
				colvarScyddh.DataType = DbType.String;
				colvarScyddh.MaxLength = 20;
				colvarScyddh.AutoIncrement = false;
				colvarScyddh.IsNullable = true;
				colvarScyddh.IsPrimaryKey = false;
				colvarScyddh.IsForeignKey = false;
				colvarScyddh.IsReadOnly = false;
				colvarScyddh.DefaultSetting = @"";
				colvarScyddh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScyddh);
				
				TableSchema.TableColumn colvarSchybh = new TableSchema.TableColumn(schema);
				colvarSchybh.ColumnName = "SCHYBH";
				colvarSchybh.DataType = DbType.String;
				colvarSchybh.MaxLength = 12;
				colvarSchybh.AutoIncrement = false;
				colvarSchybh.IsNullable = true;
				colvarSchybh.IsPrimaryKey = false;
				colvarSchybh.IsForeignKey = false;
				colvarSchybh.IsReadOnly = false;
				colvarSchybh.DefaultSetting = @"";
				colvarSchybh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSchybh);
				
				TableSchema.TableColumn colvarScjgry = new TableSchema.TableColumn(schema);
				colvarScjgry.ColumnName = "SCJGRY";
				colvarScjgry.DataType = DbType.String;
				colvarScjgry.MaxLength = 10;
				colvarScjgry.AutoIncrement = false;
				colvarScjgry.IsNullable = true;
				colvarScjgry.IsPrimaryKey = false;
				colvarScjgry.IsForeignKey = false;
				colvarScjgry.IsReadOnly = false;
				colvarScjgry.DefaultSetting = @"";
				colvarScjgry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScjgry);
				
				TableSchema.TableColumn colvarXtbmdm = new TableSchema.TableColumn(schema);
				colvarXtbmdm.ColumnName = "XTBMDM";
				colvarXtbmdm.DataType = DbType.String;
				colvarXtbmdm.MaxLength = 8;
				colvarXtbmdm.AutoIncrement = false;
				colvarXtbmdm.IsNullable = true;
				colvarXtbmdm.IsPrimaryKey = false;
				colvarXtbmdm.IsForeignKey = false;
				colvarXtbmdm.IsReadOnly = false;
				colvarXtbmdm.DefaultSetting = @"";
				colvarXtbmdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbmdm);
				
				TableSchema.TableColumn colvarScywry = new TableSchema.TableColumn(schema);
				colvarScywry.ColumnName = "SCYWRY";
				colvarScywry.DataType = DbType.String;
				colvarScywry.MaxLength = 8;
				colvarScywry.AutoIncrement = false;
				colvarScywry.IsNullable = true;
				colvarScywry.IsPrimaryKey = false;
				colvarScywry.IsForeignKey = false;
				colvarScywry.IsReadOnly = false;
				colvarScywry.DefaultSetting = @"";
				colvarScywry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScywry);
				
				TableSchema.TableColumn colvarSclrrq = new TableSchema.TableColumn(schema);
				colvarSclrrq.ColumnName = "SCLRRQ";
				colvarSclrrq.DataType = DbType.DateTime;
				colvarSclrrq.MaxLength = 0;
				colvarSclrrq.AutoIncrement = false;
				colvarSclrrq.IsNullable = true;
				colvarSclrrq.IsPrimaryKey = false;
				colvarSclrrq.IsForeignKey = false;
				colvarSclrrq.IsReadOnly = false;
				colvarSclrrq.DefaultSetting = @"";
				colvarSclrrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSclrrq);
				
				TableSchema.TableColumn colvarSclrry = new TableSchema.TableColumn(schema);
				colvarSclrry.ColumnName = "SCLRRY";
				colvarSclrry.DataType = DbType.String;
				colvarSclrry.MaxLength = 8;
				colvarSclrry.AutoIncrement = false;
				colvarSclrry.IsNullable = true;
				colvarSclrry.IsPrimaryKey = false;
				colvarSclrry.IsForeignKey = false;
				colvarSclrry.IsReadOnly = false;
				colvarSclrry.DefaultSetting = @"";
				colvarSclrry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSclrry);
				
				TableSchema.TableColumn colvarScssrq = new TableSchema.TableColumn(schema);
				colvarScssrq.ColumnName = "SCSSRQ";
				colvarScssrq.DataType = DbType.DateTime;
				colvarScssrq.MaxLength = 0;
				colvarScssrq.AutoIncrement = false;
				colvarScssrq.IsNullable = true;
				colvarScssrq.IsPrimaryKey = false;
				colvarScssrq.IsForeignKey = false;
				colvarScssrq.IsReadOnly = false;
				colvarScssrq.DefaultSetting = @"";
				colvarScssrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScssrq);
				
				TableSchema.TableColumn colvarScdjzt = new TableSchema.TableColumn(schema);
				colvarScdjzt.ColumnName = "SCDJZT";
				colvarScdjzt.DataType = DbType.String;
				colvarScdjzt.MaxLength = 1;
				colvarScdjzt.AutoIncrement = false;
				colvarScdjzt.IsNullable = true;
				colvarScdjzt.IsPrimaryKey = false;
				colvarScdjzt.IsForeignKey = false;
				colvarScdjzt.IsReadOnly = false;
				colvarScdjzt.DefaultSetting = @"";
				colvarScdjzt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScdjzt);
				
				TableSchema.TableColumn colvarSclybz = new TableSchema.TableColumn(schema);
				colvarSclybz.ColumnName = "SCLYBZ";
				colvarSclybz.DataType = DbType.String;
				colvarSclybz.MaxLength = 1;
				colvarSclybz.AutoIncrement = false;
				colvarSclybz.IsNullable = true;
				colvarSclybz.IsPrimaryKey = false;
				colvarSclybz.IsForeignKey = false;
				colvarSclybz.IsReadOnly = false;
				colvarSclybz.DefaultSetting = @"";
				colvarSclybz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSclybz);
				
				TableSchema.TableColumn colvarScggbz = new TableSchema.TableColumn(schema);
				colvarScggbz.ColumnName = "SCGGBZ";
				colvarScggbz.DataType = DbType.String;
				colvarScggbz.MaxLength = 1000;
				colvarScggbz.AutoIncrement = false;
				colvarScggbz.IsNullable = true;
				colvarScggbz.IsPrimaryKey = false;
				colvarScggbz.IsForeignKey = false;
				colvarScggbz.IsReadOnly = false;
				colvarScggbz.DefaultSetting = @"";
				colvarScggbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScggbz);
				
				TableSchema.TableColumn colvarScqdrq = new TableSchema.TableColumn(schema);
				colvarScqdrq.ColumnName = "SCQDRQ";
				colvarScqdrq.DataType = DbType.DateTime;
				colvarScqdrq.MaxLength = 0;
				colvarScqdrq.AutoIncrement = false;
				colvarScqdrq.IsNullable = true;
				colvarScqdrq.IsPrimaryKey = false;
				colvarScqdrq.IsForeignKey = false;
				colvarScqdrq.IsReadOnly = false;
				colvarScqdrq.DefaultSetting = @"";
				colvarScqdrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScqdrq);
				
				TableSchema.TableColumn colvarScjhrq = new TableSchema.TableColumn(schema);
				colvarScjhrq.ColumnName = "SCJHRQ";
				colvarScjhrq.DataType = DbType.DateTime;
				colvarScjhrq.MaxLength = 0;
				colvarScjhrq.AutoIncrement = false;
				colvarScjhrq.IsNullable = true;
				colvarScjhrq.IsPrimaryKey = false;
				colvarScjhrq.IsForeignKey = false;
				colvarScjhrq.IsReadOnly = false;
				colvarScjhrq.DefaultSetting = @"";
				colvarScjhrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScjhrq);
				
				TableSchema.TableColumn colvarScglbz = new TableSchema.TableColumn(schema);
				colvarScglbz.ColumnName = "SCGLBZ";
				colvarScglbz.DataType = DbType.String;
				colvarScglbz.MaxLength = 1;
				colvarScglbz.AutoIncrement = false;
				colvarScglbz.IsNullable = true;
				colvarScglbz.IsPrimaryKey = false;
				colvarScglbz.IsForeignKey = false;
				colvarScglbz.IsReadOnly = false;
				colvarScglbz.DefaultSetting = @"";
				colvarScglbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScglbz);
				
				TableSchema.TableColumn colvarScshrq = new TableSchema.TableColumn(schema);
				colvarScshrq.ColumnName = "SCSHRQ";
				colvarScshrq.DataType = DbType.DateTime;
				colvarScshrq.MaxLength = 0;
				colvarScshrq.AutoIncrement = false;
				colvarScshrq.IsNullable = true;
				colvarScshrq.IsPrimaryKey = false;
				colvarScshrq.IsForeignKey = false;
				colvarScshrq.IsReadOnly = false;
				colvarScshrq.DefaultSetting = @"";
				colvarScshrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScshrq);
				
				TableSchema.TableColumn colvarScshry = new TableSchema.TableColumn(schema);
				colvarScshry.ColumnName = "SCSHRY";
				colvarScshry.DataType = DbType.String;
				colvarScshry.MaxLength = 8;
				colvarScshry.AutoIncrement = false;
				colvarScshry.IsNullable = true;
				colvarScshry.IsPrimaryKey = false;
				colvarScshry.IsForeignKey = false;
				colvarScshry.IsReadOnly = false;
				colvarScshry.DefaultSetting = @"";
				colvarScshry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScshry);
				
				TableSchema.TableColumn colvarScshyj = new TableSchema.TableColumn(schema);
				colvarScshyj.ColumnName = "SCSHYJ";
				colvarScshyj.DataType = DbType.String;
				colvarScshyj.MaxLength = 255;
				colvarScshyj.AutoIncrement = false;
				colvarScshyj.IsNullable = true;
				colvarScshyj.IsPrimaryKey = false;
				colvarScshyj.IsForeignKey = false;
				colvarScshyj.IsReadOnly = false;
				colvarScshyj.DefaultSetting = @"";
				colvarScshyj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScshyj);
				
				TableSchema.TableColumn colvarScyspd = new TableSchema.TableColumn(schema);
				colvarScyspd.ColumnName = "SCYSPD";
				colvarScyspd.DataType = DbType.String;
				colvarScyspd.MaxLength = 12;
				colvarScyspd.AutoIncrement = false;
				colvarScyspd.IsNullable = true;
				colvarScyspd.IsPrimaryKey = false;
				colvarScyspd.IsForeignKey = false;
				colvarScyspd.IsReadOnly = false;
				colvarScyspd.DefaultSetting = @"";
				colvarScyspd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScyspd);
				
				TableSchema.TableColumn colvarScjqrq = new TableSchema.TableColumn(schema);
				colvarScjqrq.ColumnName = "SCJQRQ";
				colvarScjqrq.DataType = DbType.DateTime;
				colvarScjqrq.MaxLength = 0;
				colvarScjqrq.AutoIncrement = false;
				colvarScjqrq.IsNullable = true;
				colvarScjqrq.IsPrimaryKey = false;
				colvarScjqrq.IsForeignKey = false;
				colvarScjqrq.IsReadOnly = false;
				colvarScjqrq.DefaultSetting = @"";
				colvarScjqrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScjqrq);
				
				TableSchema.TableColumn colvarScjqsm = new TableSchema.TableColumn(schema);
				colvarScjqsm.ColumnName = "SCJQSM";
				colvarScjqsm.DataType = DbType.String;
				colvarScjqsm.MaxLength = 100;
				colvarScjqsm.AutoIncrement = false;
				colvarScjqsm.IsNullable = true;
				colvarScjqsm.IsPrimaryKey = false;
				colvarScjqsm.IsForeignKey = false;
				colvarScjqsm.IsReadOnly = false;
				colvarScjqsm.DefaultSetting = @"";
				colvarScjqsm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScjqsm);
				
				TableSchema.TableColumn colvarScjqry = new TableSchema.TableColumn(schema);
				colvarScjqry.ColumnName = "SCJQRY";
				colvarScjqry.DataType = DbType.String;
				colvarScjqry.MaxLength = 10;
				colvarScjqry.AutoIncrement = false;
				colvarScjqry.IsNullable = true;
				colvarScjqry.IsPrimaryKey = false;
				colvarScjqry.IsForeignKey = false;
				colvarScjqry.IsReadOnly = false;
				colvarScjqry.DefaultSetting = @"";
				colvarScjqry.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScjqry);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ErpNowthwin"].AddSchema("SCT51",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Sckhxb")]
		[Bindable(true)]
		public string Sckhxb 
		{
			get { return GetColumnValue<string>(Columns.Sckhxb); }
			set { SetColumnValue(Columns.Sckhxb, value); }
		}
		  
		[XmlAttribute("Scyxzj")]
		[Bindable(true)]
		public string Scyxzj 
		{
			get { return GetColumnValue<string>(Columns.Scyxzj); }
			set { SetColumnValue(Columns.Scyxzj, value); }
		}
		  
		[XmlAttribute("Xtxsdm")]
		[Bindable(true)]
		public string Xtxsdm 
		{
			get { return GetColumnValue<string>(Columns.Xtxsdm); }
			set { SetColumnValue(Columns.Xtxsdm, value); }
		}
		  
		[XmlAttribute("Xthbdm")]
		[Bindable(true)]
		public string Xthbdm 
		{
			get { return GetColumnValue<string>(Columns.Xthbdm); }
			set { SetColumnValue(Columns.Xthbdm, value); }
		}
		  
		[XmlAttribute("Xtdhhl")]
		[Bindable(true)]
		public decimal? Xtdhhl 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtdhhl); }
			set { SetColumnValue(Columns.Xtdhhl, value); }
		}
		  
		[XmlAttribute("Scggdh")]
		[Bindable(true)]
		public string Scggdh 
		{
			get { return GetColumnValue<string>(Columns.Scggdh); }
			set { SetColumnValue(Columns.Scggdh, value); }
		}
		  
		[XmlAttribute("Schtbh")]
		[Bindable(true)]
		public string Schtbh 
		{
			get { return GetColumnValue<string>(Columns.Schtbh); }
			set { SetColumnValue(Columns.Schtbh, value); }
		}
		  
		[XmlAttribute("Xtwldm")]
		[Bindable(true)]
		public string Xtwldm 
		{
			get { return GetColumnValue<string>(Columns.Xtwldm); }
			set { SetColumnValue(Columns.Xtwldm, value); }
		}
		  
		[XmlAttribute("Sckhxm")]
		[Bindable(true)]
		public string Sckhxm 
		{
			get { return GetColumnValue<string>(Columns.Sckhxm); }
			set { SetColumnValue(Columns.Sckhxm, value); }
		}
		  
		[XmlAttribute("Sckhdz")]
		[Bindable(true)]
		public string Sckhdz 
		{
			get { return GetColumnValue<string>(Columns.Sckhdz); }
			set { SetColumnValue(Columns.Sckhdz, value); }
		}
		  
		[XmlAttribute("Scyzbm")]
		[Bindable(true)]
		public string Scyzbm 
		{
			get { return GetColumnValue<string>(Columns.Scyzbm); }
			set { SetColumnValue(Columns.Scyzbm, value); }
		}
		  
		[XmlAttribute("Scgddh")]
		[Bindable(true)]
		public string Scgddh 
		{
			get { return GetColumnValue<string>(Columns.Scgddh); }
			set { SetColumnValue(Columns.Scgddh, value); }
		}
		  
		[XmlAttribute("Scyddh")]
		[Bindable(true)]
		public string Scyddh 
		{
			get { return GetColumnValue<string>(Columns.Scyddh); }
			set { SetColumnValue(Columns.Scyddh, value); }
		}
		  
		[XmlAttribute("Schybh")]
		[Bindable(true)]
		public string Schybh 
		{
			get { return GetColumnValue<string>(Columns.Schybh); }
			set { SetColumnValue(Columns.Schybh, value); }
		}
		  
		[XmlAttribute("Scjgry")]
		[Bindable(true)]
		public string Scjgry 
		{
			get { return GetColumnValue<string>(Columns.Scjgry); }
			set { SetColumnValue(Columns.Scjgry, value); }
		}
		  
		[XmlAttribute("Xtbmdm")]
		[Bindable(true)]
		public string Xtbmdm 
		{
			get { return GetColumnValue<string>(Columns.Xtbmdm); }
			set { SetColumnValue(Columns.Xtbmdm, value); }
		}
		  
		[XmlAttribute("Scywry")]
		[Bindable(true)]
		public string Scywry 
		{
			get { return GetColumnValue<string>(Columns.Scywry); }
			set { SetColumnValue(Columns.Scywry, value); }
		}
		  
		[XmlAttribute("Sclrrq")]
		[Bindable(true)]
		public DateTime? Sclrrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Sclrrq); }
			set { SetColumnValue(Columns.Sclrrq, value); }
		}
		  
		[XmlAttribute("Sclrry")]
		[Bindable(true)]
		public string Sclrry 
		{
			get { return GetColumnValue<string>(Columns.Sclrry); }
			set { SetColumnValue(Columns.Sclrry, value); }
		}
		  
		[XmlAttribute("Scssrq")]
		[Bindable(true)]
		public DateTime? Scssrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Scssrq); }
			set { SetColumnValue(Columns.Scssrq, value); }
		}
		  
		[XmlAttribute("Scdjzt")]
		[Bindable(true)]
		public string Scdjzt 
		{
			get { return GetColumnValue<string>(Columns.Scdjzt); }
			set { SetColumnValue(Columns.Scdjzt, value); }
		}
		  
		[XmlAttribute("Sclybz")]
		[Bindable(true)]
		public string Sclybz 
		{
			get { return GetColumnValue<string>(Columns.Sclybz); }
			set { SetColumnValue(Columns.Sclybz, value); }
		}
		  
		[XmlAttribute("Scggbz")]
		[Bindable(true)]
		public string Scggbz 
		{
			get { return GetColumnValue<string>(Columns.Scggbz); }
			set { SetColumnValue(Columns.Scggbz, value); }
		}
		  
		[XmlAttribute("Scqdrq")]
		[Bindable(true)]
		public DateTime? Scqdrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Scqdrq); }
			set { SetColumnValue(Columns.Scqdrq, value); }
		}
		  
		[XmlAttribute("Scjhrq")]
		[Bindable(true)]
		public DateTime? Scjhrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Scjhrq); }
			set { SetColumnValue(Columns.Scjhrq, value); }
		}
		  
		[XmlAttribute("Scglbz")]
		[Bindable(true)]
		public string Scglbz 
		{
			get { return GetColumnValue<string>(Columns.Scglbz); }
			set { SetColumnValue(Columns.Scglbz, value); }
		}
		  
		[XmlAttribute("Scshrq")]
		[Bindable(true)]
		public DateTime? Scshrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Scshrq); }
			set { SetColumnValue(Columns.Scshrq, value); }
		}
		  
		[XmlAttribute("Scshry")]
		[Bindable(true)]
		public string Scshry 
		{
			get { return GetColumnValue<string>(Columns.Scshry); }
			set { SetColumnValue(Columns.Scshry, value); }
		}
		  
		[XmlAttribute("Scshyj")]
		[Bindable(true)]
		public string Scshyj 
		{
			get { return GetColumnValue<string>(Columns.Scshyj); }
			set { SetColumnValue(Columns.Scshyj, value); }
		}
		  
		[XmlAttribute("Scyspd")]
		[Bindable(true)]
		public string Scyspd 
		{
			get { return GetColumnValue<string>(Columns.Scyspd); }
			set { SetColumnValue(Columns.Scyspd, value); }
		}
		  
		[XmlAttribute("Scjqrq")]
		[Bindable(true)]
		public DateTime? Scjqrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Scjqrq); }
			set { SetColumnValue(Columns.Scjqrq, value); }
		}
		  
		[XmlAttribute("Scjqsm")]
		[Bindable(true)]
		public string Scjqsm 
		{
			get { return GetColumnValue<string>(Columns.Scjqsm); }
			set { SetColumnValue(Columns.Scjqsm, value); }
		}
		  
		[XmlAttribute("Scjqry")]
		[Bindable(true)]
		public string Scjqry 
		{
			get { return GetColumnValue<string>(Columns.Scjqry); }
			set { SetColumnValue(Columns.Scjqry, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varSckhxb,string varScyxzj,string varXtxsdm,string varXthbdm,decimal? varXtdhhl,string varScggdh,string varSchtbh,string varXtwldm,string varSckhxm,string varSckhdz,string varScyzbm,string varScgddh,string varScyddh,string varSchybh,string varScjgry,string varXtbmdm,string varScywry,DateTime? varSclrrq,string varSclrry,DateTime? varScssrq,string varScdjzt,string varSclybz,string varScggbz,DateTime? varScqdrq,DateTime? varScjhrq,string varScglbz,DateTime? varScshrq,string varScshry,string varScshyj,string varScyspd,DateTime? varScjqrq,string varScjqsm,string varScjqry)
		{
			SCT51 item = new SCT51();
			
			item.Sckhxb = varSckhxb;
			
			item.Scyxzj = varScyxzj;
			
			item.Xtxsdm = varXtxsdm;
			
			item.Xthbdm = varXthbdm;
			
			item.Xtdhhl = varXtdhhl;
			
			item.Scggdh = varScggdh;
			
			item.Schtbh = varSchtbh;
			
			item.Xtwldm = varXtwldm;
			
			item.Sckhxm = varSckhxm;
			
			item.Sckhdz = varSckhdz;
			
			item.Scyzbm = varScyzbm;
			
			item.Scgddh = varScgddh;
			
			item.Scyddh = varScyddh;
			
			item.Schybh = varSchybh;
			
			item.Scjgry = varScjgry;
			
			item.Xtbmdm = varXtbmdm;
			
			item.Scywry = varScywry;
			
			item.Sclrrq = varSclrrq;
			
			item.Sclrry = varSclrry;
			
			item.Scssrq = varScssrq;
			
			item.Scdjzt = varScdjzt;
			
			item.Sclybz = varSclybz;
			
			item.Scggbz = varScggbz;
			
			item.Scqdrq = varScqdrq;
			
			item.Scjhrq = varScjhrq;
			
			item.Scglbz = varScglbz;
			
			item.Scshrq = varScshrq;
			
			item.Scshry = varScshry;
			
			item.Scshyj = varScshyj;
			
			item.Scyspd = varScyspd;
			
			item.Scjqrq = varScjqrq;
			
			item.Scjqsm = varScjqsm;
			
			item.Scjqry = varScjqry;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varSckhxb,string varScyxzj,string varXtxsdm,string varXthbdm,decimal? varXtdhhl,string varScggdh,string varSchtbh,string varXtwldm,string varSckhxm,string varSckhdz,string varScyzbm,string varScgddh,string varScyddh,string varSchybh,string varScjgry,string varXtbmdm,string varScywry,DateTime? varSclrrq,string varSclrry,DateTime? varScssrq,string varScdjzt,string varSclybz,string varScggbz,DateTime? varScqdrq,DateTime? varScjhrq,string varScglbz,DateTime? varScshrq,string varScshry,string varScshyj,string varScyspd,DateTime? varScjqrq,string varScjqsm,string varScjqry)
		{
			SCT51 item = new SCT51();
			
				item.Sckhxb = varSckhxb;
			
				item.Scyxzj = varScyxzj;
			
				item.Xtxsdm = varXtxsdm;
			
				item.Xthbdm = varXthbdm;
			
				item.Xtdhhl = varXtdhhl;
			
				item.Scggdh = varScggdh;
			
				item.Schtbh = varSchtbh;
			
				item.Xtwldm = varXtwldm;
			
				item.Sckhxm = varSckhxm;
			
				item.Sckhdz = varSckhdz;
			
				item.Scyzbm = varScyzbm;
			
				item.Scgddh = varScgddh;
			
				item.Scyddh = varScyddh;
			
				item.Schybh = varSchybh;
			
				item.Scjgry = varScjgry;
			
				item.Xtbmdm = varXtbmdm;
			
				item.Scywry = varScywry;
			
				item.Sclrrq = varSclrrq;
			
				item.Sclrry = varSclrry;
			
				item.Scssrq = varScssrq;
			
				item.Scdjzt = varScdjzt;
			
				item.Sclybz = varSclybz;
			
				item.Scggbz = varScggbz;
			
				item.Scqdrq = varScqdrq;
			
				item.Scjhrq = varScjhrq;
			
				item.Scglbz = varScglbz;
			
				item.Scshrq = varScshrq;
			
				item.Scshry = varScshry;
			
				item.Scshyj = varScshyj;
			
				item.Scyspd = varScyspd;
			
				item.Scjqrq = varScjqrq;
			
				item.Scjqsm = varScjqsm;
			
				item.Scjqry = varScjqry;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn SckhxbColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn ScyxzjColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn XtxsdmColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn XthbdmColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdhhlColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn ScggdhColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn SchtbhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwldmColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn SckhxmColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn SckhdzColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn ScyzbmColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ScgddhColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn ScyddhColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn SchybhColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ScjgryColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbmdmColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn ScywryColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn SclrrqColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn SclrryColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn ScssrqColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn ScdjztColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn SclybzColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn ScggbzColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn ScqdrqColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn ScjhrqColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn ScglbzColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn ScshrqColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn ScshryColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn ScshyjColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn ScyspdColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn ScjqrqColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn ScjqsmColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn ScjqryColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Sckhxb = @"SCKHXB";
			 public static string Scyxzj = @"SCYXZJ";
			 public static string Xtxsdm = @"XTXSDM";
			 public static string Xthbdm = @"XTHBDM";
			 public static string Xtdhhl = @"XTDHHL";
			 public static string Scggdh = @"SCGGDH";
			 public static string Schtbh = @"SCHTBH";
			 public static string Xtwldm = @"XTWLDM";
			 public static string Sckhxm = @"SCKHXM";
			 public static string Sckhdz = @"SCKHDZ";
			 public static string Scyzbm = @"SCYZBM";
			 public static string Scgddh = @"SCGDDH";
			 public static string Scyddh = @"SCYDDH";
			 public static string Schybh = @"SCHYBH";
			 public static string Scjgry = @"SCJGRY";
			 public static string Xtbmdm = @"XTBMDM";
			 public static string Scywry = @"SCYWRY";
			 public static string Sclrrq = @"SCLRRQ";
			 public static string Sclrry = @"SCLRRY";
			 public static string Scssrq = @"SCSSRQ";
			 public static string Scdjzt = @"SCDJZT";
			 public static string Sclybz = @"SCLYBZ";
			 public static string Scggbz = @"SCGGBZ";
			 public static string Scqdrq = @"SCQDRQ";
			 public static string Scjhrq = @"SCJHRQ";
			 public static string Scglbz = @"SCGLBZ";
			 public static string Scshrq = @"SCSHRQ";
			 public static string Scshry = @"SCSHRY";
			 public static string Scshyj = @"SCSHYJ";
			 public static string Scyspd = @"SCYSPD";
			 public static string Scjqrq = @"SCJQRQ";
			 public static string Scjqsm = @"SCJQSM";
			 public static string Scjqry = @"SCJQRY";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
