using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain{
    /// <summary>
    /// Strongly-typed collection for the VScjh class.
    /// </summary>
    [Serializable]
    public partial class VScjhCollection : ReadOnlyList<VScjh, VScjhCollection>
    {        
        public VScjhCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the V_SCJH view.
    /// </summary>
    [Serializable]
    public partial class VScjh : ReadOnlyRecord<VScjh>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("V_SCJH", TableType.View, DataService.GetInstance("ErpNowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"FYERP";
                //columns
                
                TableSchema.TableColumn colvarSczsbh = new TableSchema.TableColumn(schema);
                colvarSczsbh.ColumnName = "SCZSBH";
                colvarSczsbh.DataType = DbType.String;
                colvarSczsbh.MaxLength = 12;
                colvarSczsbh.AutoIncrement = false;
                colvarSczsbh.IsNullable = true;
                colvarSczsbh.IsPrimaryKey = false;
                colvarSczsbh.IsForeignKey = false;
                colvarSczsbh.IsReadOnly = false;
                
                schema.Columns.Add(colvarSczsbh);
                
                TableSchema.TableColumn colvarScxdrq = new TableSchema.TableColumn(schema);
                colvarScxdrq.ColumnName = "SCXDRQ";
                colvarScxdrq.DataType = DbType.DateTime;
                colvarScxdrq.MaxLength = 0;
                colvarScxdrq.AutoIncrement = false;
                colvarScxdrq.IsNullable = true;
                colvarScxdrq.IsPrimaryKey = false;
                colvarScxdrq.IsForeignKey = false;
                colvarScxdrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScxdrq);
                
                TableSchema.TableColumn colvarSccjjq = new TableSchema.TableColumn(schema);
                colvarSccjjq.ColumnName = "SCCJJQ";
                colvarSccjjq.DataType = DbType.DateTime;
                colvarSccjjq.MaxLength = 0;
                colvarSccjjq.AutoIncrement = false;
                colvarSccjjq.IsNullable = true;
                colvarSccjjq.IsPrimaryKey = false;
                colvarSccjjq.IsForeignKey = false;
                colvarSccjjq.IsReadOnly = false;
                
                schema.Columns.Add(colvarSccjjq);
                
                TableSchema.TableColumn colvarScfzjq = new TableSchema.TableColumn(schema);
                colvarScfzjq.ColumnName = "SCFZJQ";
                colvarScfzjq.DataType = DbType.DateTime;
                colvarScfzjq.MaxLength = 0;
                colvarScfzjq.AutoIncrement = false;
                colvarScfzjq.IsNullable = true;
                colvarScfzjq.IsPrimaryKey = false;
                colvarScfzjq.IsForeignKey = false;
                colvarScfzjq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScfzjq);
                
                TableSchema.TableColumn colvarScjhrq = new TableSchema.TableColumn(schema);
                colvarScjhrq.ColumnName = "SCJHRQ";
                colvarScjhrq.DataType = DbType.DateTime;
                colvarScjhrq.MaxLength = 0;
                colvarScjhrq.AutoIncrement = false;
                colvarScjhrq.IsNullable = true;
                colvarScjhrq.IsPrimaryKey = false;
                colvarScjhrq.IsForeignKey = false;
                colvarScjhrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhrq);
                
                TableSchema.TableColumn colvarScjqrq = new TableSchema.TableColumn(schema);
                colvarScjqrq.ColumnName = "SCJQRQ";
                colvarScjqrq.DataType = DbType.DateTime;
                colvarScjqrq.MaxLength = 0;
                colvarScjqrq.AutoIncrement = false;
                colvarScjqrq.IsNullable = true;
                colvarScjqrq.IsPrimaryKey = false;
                colvarScjqrq.IsForeignKey = false;
                colvarScjqrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjqrq);
                
                TableSchema.TableColumn colvarScshrq = new TableSchema.TableColumn(schema);
                colvarScshrq.ColumnName = "SCSHRQ";
                colvarScshrq.DataType = DbType.DateTime;
                colvarScshrq.MaxLength = 0;
                colvarScshrq.AutoIncrement = false;
                colvarScshrq.IsNullable = true;
                colvarScshrq.IsPrimaryKey = false;
                colvarScshrq.IsForeignKey = false;
                colvarScshrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScshrq);
                
                TableSchema.TableColumn colvarScztjq = new TableSchema.TableColumn(schema);
                colvarScztjq.ColumnName = "SCZTJQ";
                colvarScztjq.DataType = DbType.DateTime;
                colvarScztjq.MaxLength = 0;
                colvarScztjq.AutoIncrement = false;
                colvarScztjq.IsNullable = true;
                colvarScztjq.IsPrimaryKey = false;
                colvarScztjq.IsForeignKey = false;
                colvarScztjq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScztjq);
                
                TableSchema.TableColumn colvarScbzjq = new TableSchema.TableColumn(schema);
                colvarScbzjq.ColumnName = "SCBZJQ";
                colvarScbzjq.DataType = DbType.DateTime;
                colvarScbzjq.MaxLength = 0;
                colvarScbzjq.AutoIncrement = false;
                colvarScbzjq.IsNullable = true;
                colvarScbzjq.IsPrimaryKey = false;
                colvarScbzjq.IsForeignKey = false;
                colvarScbzjq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScbzjq);
                
                TableSchema.TableColumn colvarSctcrq = new TableSchema.TableColumn(schema);
                colvarSctcrq.ColumnName = "SCTCRQ";
                colvarSctcrq.DataType = DbType.DateTime;
                colvarSctcrq.MaxLength = 0;
                colvarSctcrq.AutoIncrement = false;
                colvarSctcrq.IsNullable = true;
                colvarSctcrq.IsPrimaryKey = false;
                colvarSctcrq.IsForeignKey = false;
                colvarSctcrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarSctcrq);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 12;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = true;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarScyspd = new TableSchema.TableColumn(schema);
                colvarScyspd.ColumnName = "SCYSPD";
                colvarScyspd.DataType = DbType.String;
                colvarScyspd.MaxLength = 12;
                colvarScyspd.AutoIncrement = false;
                colvarScyspd.IsNullable = true;
                colvarScyspd.IsPrimaryKey = false;
                colvarScyspd.IsForeignKey = false;
                colvarScyspd.IsReadOnly = false;
                
                schema.Columns.Add(colvarScyspd);
                
                TableSchema.TableColumn colvarSCDM04 = new TableSchema.TableColumn(schema);
                colvarSCDM04.ColumnName = "SCDM04";
                colvarSCDM04.DataType = DbType.String;
                colvarSCDM04.MaxLength = 20;
                colvarSCDM04.AutoIncrement = false;
                colvarSCDM04.IsNullable = true;
                colvarSCDM04.IsPrimaryKey = false;
                colvarSCDM04.IsForeignKey = false;
                colvarSCDM04.IsReadOnly = false;
                
                schema.Columns.Add(colvarSCDM04);
                
                TableSchema.TableColumn colvarSczsbz = new TableSchema.TableColumn(schema);
                colvarSczsbz.ColumnName = "SCZSBZ";
                colvarSczsbz.DataType = DbType.String;
                colvarSczsbz.MaxLength = 20;
                colvarSczsbz.AutoIncrement = false;
                colvarSczsbz.IsNullable = true;
                colvarSczsbz.IsPrimaryKey = false;
                colvarSczsbz.IsForeignKey = false;
                colvarSczsbz.IsReadOnly = false;
                
                schema.Columns.Add(colvarSczsbz);
                
                TableSchema.TableColumn colvarXtwlmc = new TableSchema.TableColumn(schema);
                colvarXtwlmc.ColumnName = "XTWLMC";
                colvarXtwlmc.DataType = DbType.String;
                colvarXtwlmc.MaxLength = 100;
                colvarXtwlmc.AutoIncrement = false;
                colvarXtwlmc.IsNullable = true;
                colvarXtwlmc.IsPrimaryKey = false;
                colvarXtwlmc.IsForeignKey = false;
                colvarXtwlmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwlmc);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ErpNowthwin"].AddSchema("V_SCJH",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VScjh()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VScjh(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VScjh(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VScjh(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Sczsbh")]
        [Bindable(true)]
        public string Sczsbh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCZSBH");
		    }
            set 
		    {
			    SetColumnValue("SCZSBH", value);
            }
        }
	      
        [XmlAttribute("Scxdrq")]
        [Bindable(true)]
        public DateTime? Scxdrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCXDRQ");
		    }
            set 
		    {
			    SetColumnValue("SCXDRQ", value);
            }
        }
	      
        [XmlAttribute("Sccjjq")]
        [Bindable(true)]
        public DateTime? Sccjjq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCCJJQ");
		    }
            set 
		    {
			    SetColumnValue("SCCJJQ", value);
            }
        }
	      
        [XmlAttribute("Scfzjq")]
        [Bindable(true)]
        public DateTime? Scfzjq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCFZJQ");
		    }
            set 
		    {
			    SetColumnValue("SCFZJQ", value);
            }
        }
	      
        [XmlAttribute("Scjhrq")]
        [Bindable(true)]
        public DateTime? Scjhrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCJHRQ");
		    }
            set 
		    {
			    SetColumnValue("SCJHRQ", value);
            }
        }
	      
        [XmlAttribute("Scjqrq")]
        [Bindable(true)]
        public DateTime? Scjqrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCJQRQ");
		    }
            set 
		    {
			    SetColumnValue("SCJQRQ", value);
            }
        }
	      
        [XmlAttribute("Scshrq")]
        [Bindable(true)]
        public DateTime? Scshrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCSHRQ");
		    }
            set 
		    {
			    SetColumnValue("SCSHRQ", value);
            }
        }
	      
        [XmlAttribute("Scztjq")]
        [Bindable(true)]
        public DateTime? Scztjq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCZTJQ");
		    }
            set 
		    {
			    SetColumnValue("SCZTJQ", value);
            }
        }
	      
        [XmlAttribute("Scbzjq")]
        [Bindable(true)]
        public DateTime? Scbzjq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCBZJQ");
		    }
            set 
		    {
			    SetColumnValue("SCBZJQ", value);
            }
        }
	      
        [XmlAttribute("Sctcrq")]
        [Bindable(true)]
        public DateTime? Sctcrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCTCRQ");
		    }
            set 
		    {
			    SetColumnValue("SCTCRQ", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("Scyspd")]
        [Bindable(true)]
        public string Scyspd 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCYSPD");
		    }
            set 
		    {
			    SetColumnValue("SCYSPD", value);
            }
        }
	      
        [XmlAttribute("SCDM04")]
        [Bindable(true)]
        public string SCDM04 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCDM04");
		    }
            set 
		    {
			    SetColumnValue("SCDM04", value);
            }
        }
	      
        [XmlAttribute("Sczsbz")]
        [Bindable(true)]
        public string Sczsbz 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCZSBZ");
		    }
            set 
		    {
			    SetColumnValue("SCZSBZ", value);
            }
        }
	      
        [XmlAttribute("Xtwlmc")]
        [Bindable(true)]
        public string Xtwlmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWLMC");
		    }
            set 
		    {
			    SetColumnValue("XTWLMC", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Sczsbh = @"SCZSBH";
            
            public static string Scxdrq = @"SCXDRQ";
            
            public static string Sccjjq = @"SCCJJQ";
            
            public static string Scfzjq = @"SCFZJQ";
            
            public static string Scjhrq = @"SCJHRQ";
            
            public static string Scjqrq = @"SCJQRQ";
            
            public static string Scshrq = @"SCSHRQ";
            
            public static string Scztjq = @"SCZTJQ";
            
            public static string Scbzjq = @"SCBZJQ";
            
            public static string Sctcrq = @"SCTCRQ";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string Scyspd = @"SCYSPD";
            
            public static string SCDM04 = @"SCDM04";
            
            public static string Sczsbz = @"SCZSBZ";
            
            public static string Xtwlmc = @"XTWLMC";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
