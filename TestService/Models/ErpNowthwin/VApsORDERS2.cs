using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain{
    /// <summary>
    /// Strongly-typed collection for the VApsORDERS2 class.
    /// </summary>
    [Serializable]
    public partial class VApsORDERS2Collection : ReadOnlyList<VApsORDERS2, VApsORDERS2Collection>
    {        
        public VApsORDERS2Collection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the V_APS_ORDERS2 view.
    /// </summary>
    [Serializable]
    public partial class VApsORDERS2 : ReadOnlyRecord<VApsORDERS2>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("V_APS_ORDERS2", TableType.View, DataService.GetInstance("ErpNowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"FYERP";
                //columns
                
                TableSchema.TableColumn colvarSchtbh = new TableSchema.TableColumn(schema);
                colvarSchtbh.ColumnName = "SCHTBH";
                colvarSchtbh.DataType = DbType.String;
                colvarSchtbh.MaxLength = 12;
                colvarSchtbh.AutoIncrement = false;
                colvarSchtbh.IsNullable = true;
                colvarSchtbh.IsPrimaryKey = false;
                colvarSchtbh.IsForeignKey = false;
                colvarSchtbh.IsReadOnly = false;
                
                schema.Columns.Add(colvarSchtbh);
                
                TableSchema.TableColumn colvarSchtxh = new TableSchema.TableColumn(schema);
                colvarSchtxh.ColumnName = "SCHTXH";
                colvarSchtxh.DataType = DbType.Decimal;
                colvarSchtxh.MaxLength = 0;
                colvarSchtxh.AutoIncrement = false;
                colvarSchtxh.IsNullable = true;
                colvarSchtxh.IsPrimaryKey = false;
                colvarSchtxh.IsForeignKey = false;
                colvarSchtxh.IsReadOnly = false;
                
                schema.Columns.Add(colvarSchtxh);
                
                TableSchema.TableColumn colvarXtwpks = new TableSchema.TableColumn(schema);
                colvarXtwpks.ColumnName = "XTWPKS";
                colvarXtwpks.DataType = DbType.String;
                colvarXtwpks.MaxLength = 20;
                colvarXtwpks.AutoIncrement = false;
                colvarXtwpks.IsNullable = true;
                colvarXtwpks.IsPrimaryKey = false;
                colvarXtwpks.IsForeignKey = false;
                colvarXtwpks.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpks);
                
                TableSchema.TableColumn colvarXtwpys = new TableSchema.TableColumn(schema);
                colvarXtwpys.ColumnName = "XTWPYS";
                colvarXtwpys.DataType = DbType.String;
                colvarXtwpys.MaxLength = 20;
                colvarXtwpys.AutoIncrement = false;
                colvarXtwpys.IsNullable = true;
                colvarXtwpys.IsPrimaryKey = false;
                colvarXtwpys.IsForeignKey = false;
                colvarXtwpys.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpys);
                
                TableSchema.TableColumn colvarXtxmdm = new TableSchema.TableColumn(schema);
                colvarXtxmdm.ColumnName = "XTXMDM";
                colvarXtxmdm.DataType = DbType.String;
                colvarXtxmdm.MaxLength = 10;
                colvarXtxmdm.AutoIncrement = false;
                colvarXtxmdm.IsNullable = true;
                colvarXtxmdm.IsPrimaryKey = false;
                colvarXtxmdm.IsForeignKey = false;
                colvarXtxmdm.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtxmdm);
                
                TableSchema.TableColumn colvarScjhrq = new TableSchema.TableColumn(schema);
                colvarScjhrq.ColumnName = "SCJHRQ";
                colvarScjhrq.DataType = DbType.DateTime;
                colvarScjhrq.MaxLength = 0;
                colvarScjhrq.AutoIncrement = false;
                colvarScjhrq.IsNullable = true;
                colvarScjhrq.IsPrimaryKey = false;
                colvarScjhrq.IsForeignKey = false;
                colvarScjhrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhrq);
                
                TableSchema.TableColumn colvarScjhdd = new TableSchema.TableColumn(schema);
                colvarScjhdd.ColumnName = "SCJHDD";
                colvarScjhdd.DataType = DbType.String;
                colvarScjhdd.MaxLength = 4000;
                colvarScjhdd.AutoIncrement = false;
                colvarScjhdd.IsNullable = true;
                colvarScjhdd.IsPrimaryKey = false;
                colvarScjhdd.IsForeignKey = false;
                colvarScjhdd.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhdd);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 12;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = false;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarScggxh = new TableSchema.TableColumn(schema);
                colvarScggxh.ColumnName = "SCGGXH";
                colvarScggxh.DataType = DbType.Decimal;
                colvarScggxh.MaxLength = 0;
                colvarScggxh.AutoIncrement = false;
                colvarScggxh.IsNullable = false;
                colvarScggxh.IsPrimaryKey = false;
                colvarScggxh.IsForeignKey = false;
                colvarScggxh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggxh);
                
                TableSchema.TableColumn colvarSchtsl = new TableSchema.TableColumn(schema);
                colvarSchtsl.ColumnName = "SCHTSL";
                colvarSchtsl.DataType = DbType.Decimal;
                colvarSchtsl.MaxLength = 0;
                colvarSchtsl.AutoIncrement = false;
                colvarSchtsl.IsNullable = true;
                colvarSchtsl.IsPrimaryKey = false;
                colvarSchtsl.IsForeignKey = false;
                colvarSchtsl.IsReadOnly = false;
                
                schema.Columns.Add(colvarSchtsl);
                
                TableSchema.TableColumn colvarSckhxm = new TableSchema.TableColumn(schema);
                colvarSckhxm.ColumnName = "SCKHXM";
                colvarSckhxm.DataType = DbType.String;
                colvarSckhxm.MaxLength = 100;
                colvarSckhxm.AutoIncrement = false;
                colvarSckhxm.IsNullable = true;
                colvarSckhxm.IsPrimaryKey = false;
                colvarSckhxm.IsForeignKey = false;
                colvarSckhxm.IsReadOnly = false;
                
                schema.Columns.Add(colvarSckhxm);
                
                TableSchema.TableColumn colvarScyspd = new TableSchema.TableColumn(schema);
                colvarScyspd.ColumnName = "SCYSPD";
                colvarScyspd.DataType = DbType.String;
                colvarScyspd.MaxLength = 12;
                colvarScyspd.AutoIncrement = false;
                colvarScyspd.IsNullable = true;
                colvarScyspd.IsPrimaryKey = false;
                colvarScyspd.IsForeignKey = false;
                colvarScyspd.IsReadOnly = false;
                
                schema.Columns.Add(colvarScyspd);
                
                TableSchema.TableColumn colvarScyddh = new TableSchema.TableColumn(schema);
                colvarScyddh.ColumnName = "SCYDDH";
                colvarScyddh.DataType = DbType.String;
                colvarScyddh.MaxLength = 20;
                colvarScyddh.AutoIncrement = false;
                colvarScyddh.IsNullable = true;
                colvarScyddh.IsPrimaryKey = false;
                colvarScyddh.IsForeignKey = false;
                colvarScyddh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScyddh);
                
                TableSchema.TableColumn colvarSckhdz = new TableSchema.TableColumn(schema);
                colvarSckhdz.ColumnName = "SCKHDZ";
                colvarSckhdz.DataType = DbType.String;
                colvarSckhdz.MaxLength = 60;
                colvarSckhdz.AutoIncrement = false;
                colvarSckhdz.IsNullable = true;
                colvarSckhdz.IsPrimaryKey = false;
                colvarSckhdz.IsForeignKey = false;
                colvarSckhdz.IsReadOnly = false;
                
                schema.Columns.Add(colvarSckhdz);
                
                TableSchema.TableColumn colvarScggbz = new TableSchema.TableColumn(schema);
                colvarScggbz.ColumnName = "SCGGBZ";
                colvarScggbz.DataType = DbType.String;
                colvarScggbz.MaxLength = 1000;
                colvarScggbz.AutoIncrement = false;
                colvarScggbz.IsNullable = true;
                colvarScggbz.IsPrimaryKey = false;
                colvarScggbz.IsForeignKey = false;
                colvarScggbz.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggbz);
                
                TableSchema.TableColumn colvarXtwldm = new TableSchema.TableColumn(schema);
                colvarXtwldm.ColumnName = "XTWLDM";
                colvarXtwldm.DataType = DbType.String;
                colvarXtwldm.MaxLength = 8;
                colvarXtwldm.AutoIncrement = false;
                colvarXtwldm.IsNullable = true;
                colvarXtwldm.IsPrimaryKey = false;
                colvarXtwldm.IsForeignKey = false;
                colvarXtwldm.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwldm);
                
                TableSchema.TableColumn colvarScglbz = new TableSchema.TableColumn(schema);
                colvarScglbz.ColumnName = "SCGLBZ";
                colvarScglbz.DataType = DbType.String;
                colvarScglbz.MaxLength = 1;
                colvarScglbz.AutoIncrement = false;
                colvarScglbz.IsNullable = true;
                colvarScglbz.IsPrimaryKey = false;
                colvarScglbz.IsForeignKey = false;
                colvarScglbz.IsReadOnly = false;
                
                schema.Columns.Add(colvarScglbz);
                
                TableSchema.TableColumn colvarScshyj = new TableSchema.TableColumn(schema);
                colvarScshyj.ColumnName = "SCSHYJ";
                colvarScshyj.DataType = DbType.String;
                colvarScshyj.MaxLength = 255;
                colvarScshyj.AutoIncrement = false;
                colvarScshyj.IsNullable = true;
                colvarScshyj.IsPrimaryKey = false;
                colvarScshyj.IsForeignKey = false;
                colvarScshyj.IsReadOnly = false;
                
                schema.Columns.Add(colvarScshyj);
                
                TableSchema.TableColumn colvarSctgbz = new TableSchema.TableColumn(schema);
                colvarSctgbz.ColumnName = "SCTGBZ";
                colvarSctgbz.DataType = DbType.String;
                colvarSctgbz.MaxLength = 1;
                colvarSctgbz.AutoIncrement = false;
                colvarSctgbz.IsNullable = true;
                colvarSctgbz.IsPrimaryKey = false;
                colvarSctgbz.IsForeignKey = false;
                colvarSctgbz.IsReadOnly = false;
                
                schema.Columns.Add(colvarSctgbz);
                
                TableSchema.TableColumn colvarScpcrq = new TableSchema.TableColumn(schema);
                colvarScpcrq.ColumnName = "SCPCRQ";
                colvarScpcrq.DataType = DbType.DateTime;
                colvarScpcrq.MaxLength = 0;
                colvarScpcrq.AutoIncrement = false;
                colvarScpcrq.IsNullable = true;
                colvarScpcrq.IsPrimaryKey = false;
                colvarScpcrq.IsForeignKey = false;
                colvarScpcrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScpcrq);
                
                TableSchema.TableColumn colvarScndxs = new TableSchema.TableColumn(schema);
                colvarScndxs.ColumnName = "SCNDXS";
                colvarScndxs.DataType = DbType.Decimal;
                colvarScndxs.MaxLength = 0;
                colvarScndxs.AutoIncrement = false;
                colvarScndxs.IsNullable = true;
                colvarScndxs.IsPrimaryKey = false;
                colvarScndxs.IsForeignKey = false;
                colvarScndxs.IsReadOnly = false;
                
                schema.Columns.Add(colvarScndxs);
                
                TableSchema.TableColumn colvarScgydm = new TableSchema.TableColumn(schema);
                colvarScgydm.ColumnName = "SCGYDM";
                colvarScgydm.DataType = DbType.String;
                colvarScgydm.MaxLength = 4;
                colvarScgydm.AutoIncrement = false;
                colvarScgydm.IsNullable = true;
                colvarScgydm.IsPrimaryKey = false;
                colvarScgydm.IsForeignKey = false;
                colvarScgydm.IsReadOnly = false;
                
                schema.Columns.Add(colvarScgydm);
                
                TableSchema.TableColumn colvarScyxjb = new TableSchema.TableColumn(schema);
                colvarScyxjb.ColumnName = "SCYXJB";
                colvarScyxjb.DataType = DbType.Decimal;
                colvarScyxjb.MaxLength = 0;
                colvarScyxjb.AutoIncrement = false;
                colvarScyxjb.IsNullable = true;
                colvarScyxjb.IsPrimaryKey = false;
                colvarScyxjb.IsForeignKey = false;
                colvarScyxjb.IsReadOnly = false;
                
                schema.Columns.Add(colvarScyxjb);
                
                TableSchema.TableColumn colvarScjhbz = new TableSchema.TableColumn(schema);
                colvarScjhbz.ColumnName = "SCJHBZ";
                colvarScjhbz.DataType = DbType.String;
                colvarScjhbz.MaxLength = 255;
                colvarScjhbz.AutoIncrement = false;
                colvarScjhbz.IsNullable = true;
                colvarScjhbz.IsPrimaryKey = false;
                colvarScjhbz.IsForeignKey = false;
                colvarScjhbz.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhbz);
                
                TableSchema.TableColumn colvarFzfl = new TableSchema.TableColumn(schema);
                colvarFzfl.ColumnName = "FZFL";
                colvarFzfl.DataType = DbType.String;
                colvarFzfl.MaxLength = 6;
                colvarFzfl.AutoIncrement = false;
                colvarFzfl.IsNullable = true;
                colvarFzfl.IsPrimaryKey = false;
                colvarFzfl.IsForeignKey = false;
                colvarFzfl.IsReadOnly = false;
                
                schema.Columns.Add(colvarFzfl);
                
                TableSchema.TableColumn colvarScptfs = new TableSchema.TableColumn(schema);
                colvarScptfs.ColumnName = "SCPTFS";
                colvarScptfs.DataType = DbType.String;
                colvarScptfs.MaxLength = 1;
                colvarScptfs.AutoIncrement = false;
                colvarScptfs.IsNullable = true;
                colvarScptfs.IsPrimaryKey = false;
                colvarScptfs.IsForeignKey = false;
                colvarScptfs.IsReadOnly = false;
                
                schema.Columns.Add(colvarScptfs);
                
                TableSchema.TableColumn colvarScptsl = new TableSchema.TableColumn(schema);
                colvarScptsl.ColumnName = "SCPTSL";
                colvarScptsl.DataType = DbType.Decimal;
                colvarScptsl.MaxLength = 0;
                colvarScptsl.AutoIncrement = false;
                colvarScptsl.IsNullable = true;
                colvarScptsl.IsPrimaryKey = false;
                colvarScptsl.IsForeignKey = false;
                colvarScptsl.IsReadOnly = false;
                
                schema.Columns.Add(colvarScptsl);
                
                TableSchema.TableColumn colvarXtwlmc = new TableSchema.TableColumn(schema);
                colvarXtwlmc.ColumnName = "XTWLMC";
                colvarXtwlmc.DataType = DbType.String;
                colvarXtwlmc.MaxLength = 100;
                colvarXtwlmc.AutoIncrement = false;
                colvarXtwlmc.IsNullable = true;
                colvarXtwlmc.IsPrimaryKey = false;
                colvarXtwlmc.IsForeignKey = false;
                colvarXtwlmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwlmc);
                
                TableSchema.TableColumn colvarXtsjbh = new TableSchema.TableColumn(schema);
                colvarXtsjbh.ColumnName = "XTSJBH";
                colvarXtsjbh.DataType = DbType.String;
                colvarXtsjbh.MaxLength = 24;
                colvarXtsjbh.AutoIncrement = false;
                colvarXtsjbh.IsNullable = true;
                colvarXtsjbh.IsPrimaryKey = false;
                colvarXtsjbh.IsForeignKey = false;
                colvarXtsjbh.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtsjbh);
                
                TableSchema.TableColumn colvarXtwpmc = new TableSchema.TableColumn(schema);
                colvarXtwpmc.ColumnName = "XTWPMC";
                colvarXtwpmc.DataType = DbType.String;
                colvarXtwpmc.MaxLength = 100;
                colvarXtwpmc.AutoIncrement = false;
                colvarXtwpmc.IsNullable = true;
                colvarXtwpmc.IsPrimaryKey = false;
                colvarXtwpmc.IsForeignKey = false;
                colvarXtwpmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpmc);
                
                TableSchema.TableColumn colvarXTLX07 = new TableSchema.TableColumn(schema);
                colvarXTLX07.ColumnName = "XTLX07";
                colvarXTLX07.DataType = DbType.String;
                colvarXTLX07.MaxLength = 20;
                colvarXTLX07.AutoIncrement = false;
                colvarXTLX07.IsNullable = true;
                colvarXTLX07.IsPrimaryKey = false;
                colvarXTLX07.IsForeignKey = false;
                colvarXTLX07.IsReadOnly = false;
                
                schema.Columns.Add(colvarXTLX07);
                
                TableSchema.TableColumn colvarXTLX99 = new TableSchema.TableColumn(schema);
                colvarXTLX99.ColumnName = "XTLX99";
                colvarXTLX99.DataType = DbType.String;
                colvarXTLX99.MaxLength = 20;
                colvarXTLX99.AutoIncrement = false;
                colvarXTLX99.IsNullable = true;
                colvarXTLX99.IsPrimaryKey = false;
                colvarXTLX99.IsForeignKey = false;
                colvarXTLX99.IsReadOnly = false;
                
                schema.Columns.Add(colvarXTLX99);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ErpNowthwin"].AddSchema("V_APS_ORDERS2",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VApsORDERS2()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VApsORDERS2(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VApsORDERS2(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VApsORDERS2(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Schtbh")]
        [Bindable(true)]
        public string Schtbh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCHTBH");
		    }
            set 
		    {
			    SetColumnValue("SCHTBH", value);
            }
        }
	      
        [XmlAttribute("Schtxh")]
        [Bindable(true)]
        public decimal? Schtxh 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("SCHTXH");
		    }
            set 
		    {
			    SetColumnValue("SCHTXH", value);
            }
        }
	      
        [XmlAttribute("Xtwpks")]
        [Bindable(true)]
        public string Xtwpks 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPKS");
		    }
            set 
		    {
			    SetColumnValue("XTWPKS", value);
            }
        }
	      
        [XmlAttribute("Xtwpys")]
        [Bindable(true)]
        public string Xtwpys 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPYS");
		    }
            set 
		    {
			    SetColumnValue("XTWPYS", value);
            }
        }
	      
        [XmlAttribute("Xtxmdm")]
        [Bindable(true)]
        public string Xtxmdm 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTXMDM");
		    }
            set 
		    {
			    SetColumnValue("XTXMDM", value);
            }
        }
	      
        [XmlAttribute("Scjhrq")]
        [Bindable(true)]
        public DateTime? Scjhrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCJHRQ");
		    }
            set 
		    {
			    SetColumnValue("SCJHRQ", value);
            }
        }
	      
        [XmlAttribute("Scjhdd")]
        [Bindable(true)]
        public string Scjhdd 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCJHDD");
		    }
            set 
		    {
			    SetColumnValue("SCJHDD", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("Scggxh")]
        [Bindable(true)]
        public decimal Scggxh 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("SCGGXH");
		    }
            set 
		    {
			    SetColumnValue("SCGGXH", value);
            }
        }
	      
        [XmlAttribute("Schtsl")]
        [Bindable(true)]
        public decimal? Schtsl 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("SCHTSL");
		    }
            set 
		    {
			    SetColumnValue("SCHTSL", value);
            }
        }
	      
        [XmlAttribute("Sckhxm")]
        [Bindable(true)]
        public string Sckhxm 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCKHXM");
		    }
            set 
		    {
			    SetColumnValue("SCKHXM", value);
            }
        }
	      
        [XmlAttribute("Scyspd")]
        [Bindable(true)]
        public string Scyspd 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCYSPD");
		    }
            set 
		    {
			    SetColumnValue("SCYSPD", value);
            }
        }
	      
        [XmlAttribute("Scyddh")]
        [Bindable(true)]
        public string Scyddh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCYDDH");
		    }
            set 
		    {
			    SetColumnValue("SCYDDH", value);
            }
        }
	      
        [XmlAttribute("Sckhdz")]
        [Bindable(true)]
        public string Sckhdz 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCKHDZ");
		    }
            set 
		    {
			    SetColumnValue("SCKHDZ", value);
            }
        }
	      
        [XmlAttribute("Scggbz")]
        [Bindable(true)]
        public string Scggbz 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGBZ");
		    }
            set 
		    {
			    SetColumnValue("SCGGBZ", value);
            }
        }
	      
        [XmlAttribute("Xtwldm")]
        [Bindable(true)]
        public string Xtwldm 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWLDM");
		    }
            set 
		    {
			    SetColumnValue("XTWLDM", value);
            }
        }
	      
        [XmlAttribute("Scglbz")]
        [Bindable(true)]
        public string Scglbz 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGLBZ");
		    }
            set 
		    {
			    SetColumnValue("SCGLBZ", value);
            }
        }
	      
        [XmlAttribute("Scshyj")]
        [Bindable(true)]
        public string Scshyj 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCSHYJ");
		    }
            set 
		    {
			    SetColumnValue("SCSHYJ", value);
            }
        }
	      
        [XmlAttribute("Sctgbz")]
        [Bindable(true)]
        public string Sctgbz 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCTGBZ");
		    }
            set 
		    {
			    SetColumnValue("SCTGBZ", value);
            }
        }
	      
        [XmlAttribute("Scpcrq")]
        [Bindable(true)]
        public DateTime? Scpcrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCPCRQ");
		    }
            set 
		    {
			    SetColumnValue("SCPCRQ", value);
            }
        }
	      
        [XmlAttribute("Scndxs")]
        [Bindable(true)]
        public decimal? Scndxs 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("SCNDXS");
		    }
            set 
		    {
			    SetColumnValue("SCNDXS", value);
            }
        }
	      
        [XmlAttribute("Scgydm")]
        [Bindable(true)]
        public string Scgydm 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGYDM");
		    }
            set 
		    {
			    SetColumnValue("SCGYDM", value);
            }
        }
	      
        [XmlAttribute("Scyxjb")]
        [Bindable(true)]
        public decimal? Scyxjb 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("SCYXJB");
		    }
            set 
		    {
			    SetColumnValue("SCYXJB", value);
            }
        }
	      
        [XmlAttribute("Scjhbz")]
        [Bindable(true)]
        public string Scjhbz 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCJHBZ");
		    }
            set 
		    {
			    SetColumnValue("SCJHBZ", value);
            }
        }
	      
        [XmlAttribute("Fzfl")]
        [Bindable(true)]
        public string Fzfl 
	    {
		    get
		    {
			    return GetColumnValue<string>("FZFL");
		    }
            set 
		    {
			    SetColumnValue("FZFL", value);
            }
        }
	      
        [XmlAttribute("Scptfs")]
        [Bindable(true)]
        public string Scptfs 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCPTFS");
		    }
            set 
		    {
			    SetColumnValue("SCPTFS", value);
            }
        }
	      
        [XmlAttribute("Scptsl")]
        [Bindable(true)]
        public decimal? Scptsl 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("SCPTSL");
		    }
            set 
		    {
			    SetColumnValue("SCPTSL", value);
            }
        }
	      
        [XmlAttribute("Xtwlmc")]
        [Bindable(true)]
        public string Xtwlmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWLMC");
		    }
            set 
		    {
			    SetColumnValue("XTWLMC", value);
            }
        }
	      
        [XmlAttribute("Xtsjbh")]
        [Bindable(true)]
        public string Xtsjbh 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTSJBH");
		    }
            set 
		    {
			    SetColumnValue("XTSJBH", value);
            }
        }
	      
        [XmlAttribute("Xtwpmc")]
        [Bindable(true)]
        public string Xtwpmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPMC");
		    }
            set 
		    {
			    SetColumnValue("XTWPMC", value);
            }
        }
	      
        [XmlAttribute("XTLX07")]
        [Bindable(true)]
        public string XTLX07 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTLX07");
		    }
            set 
		    {
			    SetColumnValue("XTLX07", value);
            }
        }
	      
        [XmlAttribute("XTLX99")]
        [Bindable(true)]
        public string XTLX99 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTLX99");
		    }
            set 
		    {
			    SetColumnValue("XTLX99", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Schtbh = @"SCHTBH";
            
            public static string Schtxh = @"SCHTXH";
            
            public static string Xtwpks = @"XTWPKS";
            
            public static string Xtwpys = @"XTWPYS";
            
            public static string Xtxmdm = @"XTXMDM";
            
            public static string Scjhrq = @"SCJHRQ";
            
            public static string Scjhdd = @"SCJHDD";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string Scggxh = @"SCGGXH";
            
            public static string Schtsl = @"SCHTSL";
            
            public static string Sckhxm = @"SCKHXM";
            
            public static string Scyspd = @"SCYSPD";
            
            public static string Scyddh = @"SCYDDH";
            
            public static string Sckhdz = @"SCKHDZ";
            
            public static string Scggbz = @"SCGGBZ";
            
            public static string Xtwldm = @"XTWLDM";
            
            public static string Scglbz = @"SCGLBZ";
            
            public static string Scshyj = @"SCSHYJ";
            
            public static string Sctgbz = @"SCTGBZ";
            
            public static string Scpcrq = @"SCPCRQ";
            
            public static string Scndxs = @"SCNDXS";
            
            public static string Scgydm = @"SCGYDM";
            
            public static string Scyxjb = @"SCYXJB";
            
            public static string Scjhbz = @"SCJHBZ";
            
            public static string Fzfl = @"FZFL";
            
            public static string Scptfs = @"SCPTFS";
            
            public static string Scptsl = @"SCPTSL";
            
            public static string Xtwlmc = @"XTWLMC";
            
            public static string Xtsjbh = @"XTSJBH";
            
            public static string Xtwpmc = @"XTWPMC";
            
            public static string XTLX07 = @"XTLX07";
            
            public static string XTLX99 = @"XTLX99";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
