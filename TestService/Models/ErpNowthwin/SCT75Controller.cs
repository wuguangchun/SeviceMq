using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for SCT75
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SCT75Controller
    {
        // Preload our schema..
        SCT75 thisSchemaLoad = new SCT75();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SCT75Collection FetchAll()
        {
            SCT75Collection coll = new SCT75Collection();
            Query qry = new Query(SCT75.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT75Collection FetchByID(object Scgpbh)
        {
            SCT75Collection coll = new SCT75Collection().Where("SCGPBH", Scgpbh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT75Collection FetchByQuery(Query qry)
        {
            SCT75Collection coll = new SCT75Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Scgpbh)
        {
            return (SCT75.Delete(Scgpbh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Scgpbh)
        {
            return (SCT75.Destroy(Scgpbh) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Scgpbh,string Scfddm,string Sczsbh,string Scscdm,string Xtwpdm,decimal? Wptjxh,decimal? Scgpsl,DateTime? Scjhrq,string Scgpzt)
	    {
		    SCT75 item = new SCT75();
		    
            item.Scgpbh = Scgpbh;
            
            item.Scfddm = Scfddm;
            
            item.Sczsbh = Sczsbh;
            
            item.Scscdm = Scscdm;
            
            item.Xtwpdm = Xtwpdm;
            
            item.Wptjxh = Wptjxh;
            
            item.Scgpsl = Scgpsl;
            
            item.Scjhrq = Scjhrq;
            
            item.Scgpzt = Scgpzt;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string Scgpbh,string Scfddm,string Sczsbh,string Scscdm,string Xtwpdm,decimal? Wptjxh,decimal? Scgpsl,DateTime? Scjhrq,string Scgpzt)
	    {
		    SCT75 item = new SCT75();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Scgpbh = Scgpbh;
				
			item.Scfddm = Scfddm;
				
			item.Sczsbh = Sczsbh;
				
			item.Scscdm = Scscdm;
				
			item.Xtwpdm = Xtwpdm;
				
			item.Wptjxh = Wptjxh;
				
			item.Scgpsl = Scgpsl;
				
			item.Scjhrq = Scjhrq;
				
			item.Scgpzt = Scgpzt;
				
	        item.Save(UserName);
	    }
    }
}
