using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain{
    /// <summary>
    /// Strongly-typed collection for the VXTM13 class.
    /// </summary>
    [Serializable]
    public partial class VXTM13Collection : ReadOnlyList<VXTM13, VXTM13Collection>
    {        
        public VXTM13Collection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the V_XTM13 view.
    /// </summary>
    [Serializable]
    public partial class VXTM13 : ReadOnlyRecord<VXTM13>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("V_XTM13", TableType.View, DataService.GetInstance("ErpNowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"FYERP";
                //columns
                
                TableSchema.TableColumn colvarXtdqdm = new TableSchema.TableColumn(schema);
                colvarXtdqdm.ColumnName = "XTDQDM";
                colvarXtdqdm.DataType = DbType.String;
                colvarXtdqdm.MaxLength = 8;
                colvarXtdqdm.AutoIncrement = false;
                colvarXtdqdm.IsNullable = false;
                colvarXtdqdm.IsPrimaryKey = false;
                colvarXtdqdm.IsForeignKey = false;
                colvarXtdqdm.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtdqdm);
                
                TableSchema.TableColumn colvarXtdqmc = new TableSchema.TableColumn(schema);
                colvarXtdqmc.ColumnName = "XTDQMC";
                colvarXtdqmc.DataType = DbType.String;
                colvarXtdqmc.MaxLength = 20;
                colvarXtdqmc.AutoIncrement = false;
                colvarXtdqmc.IsNullable = true;
                colvarXtdqmc.IsPrimaryKey = false;
                colvarXtdqmc.IsForeignKey = false;
                colvarXtdqmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtdqmc);
                
                TableSchema.TableColumn colvarXtmjbz = new TableSchema.TableColumn(schema);
                colvarXtmjbz.ColumnName = "XTMJBZ";
                colvarXtmjbz.DataType = DbType.String;
                colvarXtmjbz.MaxLength = 1;
                colvarXtmjbz.AutoIncrement = false;
                colvarXtmjbz.IsNullable = true;
                colvarXtmjbz.IsPrimaryKey = false;
                colvarXtmjbz.IsForeignKey = false;
                colvarXtmjbz.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtmjbz);
                
                TableSchema.TableColumn colvarXtdqwc = new TableSchema.TableColumn(schema);
                colvarXtdqwc.ColumnName = "XTDQWC";
                colvarXtdqwc.DataType = DbType.Decimal;
                colvarXtdqwc.MaxLength = 0;
                colvarXtdqwc.AutoIncrement = false;
                colvarXtdqwc.IsNullable = true;
                colvarXtdqwc.IsPrimaryKey = false;
                colvarXtdqwc.IsForeignKey = false;
                colvarXtdqwc.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtdqwc);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ErpNowthwin"].AddSchema("V_XTM13",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VXTM13()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VXTM13(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VXTM13(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VXTM13(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Xtdqdm")]
        [Bindable(true)]
        public string Xtdqdm 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTDQDM");
		    }
            set 
		    {
			    SetColumnValue("XTDQDM", value);
            }
        }
	      
        [XmlAttribute("Xtdqmc")]
        [Bindable(true)]
        public string Xtdqmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTDQMC");
		    }
            set 
		    {
			    SetColumnValue("XTDQMC", value);
            }
        }
	      
        [XmlAttribute("Xtmjbz")]
        [Bindable(true)]
        public string Xtmjbz 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTMJBZ");
		    }
            set 
		    {
			    SetColumnValue("XTMJBZ", value);
            }
        }
	      
        [XmlAttribute("Xtdqwc")]
        [Bindable(true)]
        public decimal? Xtdqwc 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("XTDQWC");
		    }
            set 
		    {
			    SetColumnValue("XTDQWC", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Xtdqdm = @"XTDQDM";
            
            public static string Xtdqmc = @"XTDQMC";
            
            public static string Xtmjbz = @"XTMJBZ";
            
            public static string Xtdqwc = @"XTDQWC";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
