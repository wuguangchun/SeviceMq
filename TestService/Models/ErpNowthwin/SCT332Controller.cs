using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for SCT332
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SCT332Controller
    {
        // Preload our schema..
        SCT332 thisSchemaLoad = new SCT332();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SCT332Collection FetchAll()
        {
            SCT332Collection coll = new SCT332Collection();
            Query qry = new Query(SCT332.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT332Collection FetchByID(object Schtbh)
        {
            SCT332Collection coll = new SCT332Collection().Where("SCHTBH", Schtbh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT332Collection FetchByQuery(Query qry)
        {
            SCT332Collection coll = new SCT332Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Schtbh)
        {
            return (SCT332.Delete(Schtbh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Schtbh)
        {
            return (SCT332.Destroy(Schtbh) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(string Schtbh,string Xtwpks,string Xtwpys,string Xtxmdm,decimal Scptxh)
        {
            Query qry = new Query(SCT332.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("Schtbh", Schtbh).AND("Xtwpks", Xtwpks).AND("Xtwpys", Xtwpys).AND("Xtxmdm", Xtxmdm).AND("Scptxh", Scptxh);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Schtbh,string Xtwpks,string Xtwpys,string Xtxmdm,decimal Scptxh,string Scptks,string Scptys,string Scptxm,decimal? Scptbl)
	    {
		    SCT332 item = new SCT332();
		    
            item.Schtbh = Schtbh;
            
            item.Xtwpks = Xtwpks;
            
            item.Xtwpys = Xtwpys;
            
            item.Xtxmdm = Xtxmdm;
            
            item.Scptxh = Scptxh;
            
            item.Scptks = Scptks;
            
            item.Scptys = Scptys;
            
            item.Scptxm = Scptxm;
            
            item.Scptbl = Scptbl;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string Schtbh,string Xtwpks,string Xtwpys,string Xtxmdm,decimal Scptxh,string Scptks,string Scptys,string Scptxm,decimal? Scptbl)
	    {
		    SCT332 item = new SCT332();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Schtbh = Schtbh;
				
			item.Xtwpks = Xtwpks;
				
			item.Xtwpys = Xtwpys;
				
			item.Xtxmdm = Xtxmdm;
				
			item.Scptxh = Scptxh;
				
			item.Scptks = Scptks;
				
			item.Scptys = Scptys;
				
			item.Scptxm = Scptxm;
				
			item.Scptbl = Scptbl;
				
	        item.Save(UserName);
	    }
    }
}
