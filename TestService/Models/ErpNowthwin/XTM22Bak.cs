using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
	/// <summary>
	/// Strongly-typed collection for the XTM22Bak class.
	/// </summary>
    [Serializable]
	public partial class XTM22BakCollection : ActiveList<XTM22Bak, XTM22BakCollection>
	{	   
		public XTM22BakCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>XTM22BakCollection</returns>
		public XTM22BakCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                XTM22Bak o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XTM22_BAK table.
	/// </summary>
	[Serializable]
	public partial class XTM22Bak : ActiveRecord<XTM22Bak>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public XTM22Bak()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public XTM22Bak(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public XTM22Bak(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public XTM22Bak(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XTM22_BAK", TableType.Table, DataService.GetInstance("ErpNowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"FYERP";
				//columns
				
				TableSchema.TableColumn colvarXtczxh = new TableSchema.TableColumn(schema);
				colvarXtczxh.ColumnName = "XTCZXH";
				colvarXtczxh.DataType = DbType.Decimal;
				colvarXtczxh.MaxLength = 0;
				colvarXtczxh.AutoIncrement = false;
				colvarXtczxh.IsNullable = false;
				colvarXtczxh.IsPrimaryKey = true;
				colvarXtczxh.IsForeignKey = false;
				colvarXtczxh.IsReadOnly = false;
				colvarXtczxh.DefaultSetting = @"";
				colvarXtczxh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtczxh);
				
				TableSchema.TableColumn colvarXtwpdm = new TableSchema.TableColumn(schema);
				colvarXtwpdm.ColumnName = "XTWPDM";
				colvarXtwpdm.DataType = DbType.String;
				colvarXtwpdm.MaxLength = 20;
				colvarXtwpdm.AutoIncrement = false;
				colvarXtwpdm.IsNullable = false;
				colvarXtwpdm.IsPrimaryKey = false;
				colvarXtwpdm.IsForeignKey = false;
				colvarXtwpdm.IsReadOnly = false;
				colvarXtwpdm.DefaultSetting = @"";
				colvarXtwpdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwpdm);
				
				TableSchema.TableColumn colvarXtwpmc = new TableSchema.TableColumn(schema);
				colvarXtwpmc.ColumnName = "XTWPMC";
				colvarXtwpmc.DataType = DbType.String;
				colvarXtwpmc.MaxLength = 100;
				colvarXtwpmc.AutoIncrement = false;
				colvarXtwpmc.IsNullable = true;
				colvarXtwpmc.IsPrimaryKey = false;
				colvarXtwpmc.IsForeignKey = false;
				colvarXtwpmc.IsReadOnly = false;
				colvarXtwpmc.DefaultSetting = @"";
				colvarXtwpmc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwpmc);
				
				TableSchema.TableColumn colvarXtpzgg = new TableSchema.TableColumn(schema);
				colvarXtpzgg.ColumnName = "XTPZGG";
				colvarXtpzgg.DataType = DbType.String;
				colvarXtpzgg.MaxLength = 30;
				colvarXtpzgg.AutoIncrement = false;
				colvarXtpzgg.IsNullable = true;
				colvarXtpzgg.IsPrimaryKey = false;
				colvarXtpzgg.IsForeignKey = false;
				colvarXtpzgg.IsReadOnly = false;
				colvarXtpzgg.DefaultSetting = @"";
				colvarXtpzgg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtpzgg);
				
				TableSchema.TableColumn colvarXtwpxh = new TableSchema.TableColumn(schema);
				colvarXtwpxh.ColumnName = "XTWPXH";
				colvarXtwpxh.DataType = DbType.String;
				colvarXtwpxh.MaxLength = 30;
				colvarXtwpxh.AutoIncrement = false;
				colvarXtwpxh.IsNullable = true;
				colvarXtwpxh.IsPrimaryKey = false;
				colvarXtwpxh.IsForeignKey = false;
				colvarXtwpxh.IsReadOnly = false;
				colvarXtwpxh.DefaultSetting = @"";
				colvarXtwpxh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwpxh);
				
				TableSchema.TableColumn colvarXttxhm = new TableSchema.TableColumn(schema);
				colvarXttxhm.ColumnName = "XTTXHM";
				colvarXttxhm.DataType = DbType.String;
				colvarXttxhm.MaxLength = 18;
				colvarXttxhm.AutoIncrement = false;
				colvarXttxhm.IsNullable = false;
				colvarXttxhm.IsPrimaryKey = false;
				colvarXttxhm.IsForeignKey = false;
				colvarXttxhm.IsReadOnly = false;
				colvarXttxhm.DefaultSetting = @"";
				colvarXttxhm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXttxhm);
				
				TableSchema.TableColumn colvarXtcwhs = new TableSchema.TableColumn(schema);
				colvarXtcwhs.ColumnName = "XTCWHS";
				colvarXtcwhs.DataType = DbType.String;
				colvarXtcwhs.MaxLength = 1;
				colvarXtcwhs.AutoIncrement = false;
				colvarXtcwhs.IsNullable = true;
				colvarXtcwhs.IsPrimaryKey = false;
				colvarXtcwhs.IsForeignKey = false;
				colvarXtcwhs.IsReadOnly = false;
				colvarXtcwhs.DefaultSetting = @"";
				colvarXtcwhs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtcwhs);
				
				TableSchema.TableColumn colvarKcjldw = new TableSchema.TableColumn(schema);
				colvarKcjldw.ColumnName = "KCJLDW";
				colvarKcjldw.DataType = DbType.String;
				colvarKcjldw.MaxLength = 6;
				colvarKcjldw.AutoIncrement = false;
				colvarKcjldw.IsNullable = true;
				colvarKcjldw.IsPrimaryKey = false;
				colvarKcjldw.IsForeignKey = false;
				colvarKcjldw.IsReadOnly = false;
				colvarKcjldw.DefaultSetting = @"";
				colvarKcjldw.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcjldw);
				
				TableSchema.TableColumn colvarCgjldw = new TableSchema.TableColumn(schema);
				colvarCgjldw.ColumnName = "CGJLDW";
				colvarCgjldw.DataType = DbType.String;
				colvarCgjldw.MaxLength = 6;
				colvarCgjldw.AutoIncrement = false;
				colvarCgjldw.IsNullable = true;
				colvarCgjldw.IsPrimaryKey = false;
				colvarCgjldw.IsForeignKey = false;
				colvarCgjldw.IsReadOnly = false;
				colvarCgjldw.DefaultSetting = @"";
				colvarCgjldw.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgjldw);
				
				TableSchema.TableColumn colvarXsjldw = new TableSchema.TableColumn(schema);
				colvarXsjldw.ColumnName = "XSJLDW";
				colvarXsjldw.DataType = DbType.String;
				colvarXsjldw.MaxLength = 6;
				colvarXsjldw.AutoIncrement = false;
				colvarXsjldw.IsNullable = true;
				colvarXsjldw.IsPrimaryKey = false;
				colvarXsjldw.IsForeignKey = false;
				colvarXsjldw.IsReadOnly = false;
				colvarXsjldw.DefaultSetting = @"";
				colvarXsjldw.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsjldw);
				
				TableSchema.TableColumn colvarCwjldw = new TableSchema.TableColumn(schema);
				colvarCwjldw.ColumnName = "CWJLDW";
				colvarCwjldw.DataType = DbType.String;
				colvarCwjldw.MaxLength = 6;
				colvarCwjldw.AutoIncrement = false;
				colvarCwjldw.IsNullable = true;
				colvarCwjldw.IsPrimaryKey = false;
				colvarCwjldw.IsForeignKey = false;
				colvarCwjldw.IsReadOnly = false;
				colvarCwjldw.DefaultSetting = @"";
				colvarCwjldw.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCwjldw);
				
				TableSchema.TableColumn colvarKcpcgl = new TableSchema.TableColumn(schema);
				colvarKcpcgl.ColumnName = "KCPCGL";
				colvarKcpcgl.DataType = DbType.String;
				colvarKcpcgl.MaxLength = 1;
				colvarKcpcgl.AutoIncrement = false;
				colvarKcpcgl.IsNullable = true;
				colvarKcpcgl.IsPrimaryKey = false;
				colvarKcpcgl.IsForeignKey = false;
				colvarKcpcgl.IsReadOnly = false;
				colvarKcpcgl.DefaultSetting = @"";
				colvarKcpcgl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcpcgl);
				
				TableSchema.TableColumn colvarKcqsck = new TableSchema.TableColumn(schema);
				colvarKcqsck.ColumnName = "KCQSCK";
				colvarKcqsck.DataType = DbType.String;
				colvarKcqsck.MaxLength = 8;
				colvarKcqsck.AutoIncrement = false;
				colvarKcqsck.IsNullable = true;
				colvarKcqsck.IsPrimaryKey = false;
				colvarKcqsck.IsForeignKey = false;
				colvarKcqsck.IsReadOnly = false;
				colvarKcqsck.DefaultSetting = @"";
				colvarKcqsck.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcqsck);
				
				TableSchema.TableColumn colvarWpjyxm = new TableSchema.TableColumn(schema);
				colvarWpjyxm.ColumnName = "WPJYXM";
				colvarWpjyxm.DataType = DbType.String;
				colvarWpjyxm.MaxLength = 12;
				colvarWpjyxm.AutoIncrement = false;
				colvarWpjyxm.IsNullable = true;
				colvarWpjyxm.IsPrimaryKey = false;
				colvarWpjyxm.IsForeignKey = false;
				colvarWpjyxm.IsReadOnly = false;
				colvarWpjyxm.DefaultSetting = @"";
				colvarWpjyxm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpjyxm);
				
				TableSchema.TableColumn colvarWphsjg = new TableSchema.TableColumn(schema);
				colvarWphsjg.ColumnName = "WPHSJG";
				colvarWphsjg.DataType = DbType.Decimal;
				colvarWphsjg.MaxLength = 0;
				colvarWphsjg.AutoIncrement = false;
				colvarWphsjg.IsNullable = true;
				colvarWphsjg.IsPrimaryKey = false;
				colvarWphsjg.IsForeignKey = false;
				colvarWphsjg.IsReadOnly = false;
				colvarWphsjg.DefaultSetting = @"";
				colvarWphsjg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWphsjg);
				
				TableSchema.TableColumn colvarWpryxq = new TableSchema.TableColumn(schema);
				colvarWpryxq.ColumnName = "WPRYXQ";
				colvarWpryxq.DataType = DbType.Double;
				colvarWpryxq.MaxLength = 0;
				colvarWpryxq.AutoIncrement = false;
				colvarWpryxq.IsNullable = true;
				colvarWpryxq.IsPrimaryKey = false;
				colvarWpryxq.IsForeignKey = false;
				colvarWpryxq.IsReadOnly = false;
				colvarWpryxq.DefaultSetting = @"";
				colvarWpryxq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpryxq);
				
				TableSchema.TableColumn colvarWpjcts = new TableSchema.TableColumn(schema);
				colvarWpjcts.ColumnName = "WPJCTS";
				colvarWpjcts.DataType = DbType.Double;
				colvarWpjcts.MaxLength = 0;
				colvarWpjcts.AutoIncrement = false;
				colvarWpjcts.IsNullable = true;
				colvarWpjcts.IsPrimaryKey = false;
				colvarWpjcts.IsForeignKey = false;
				colvarWpjcts.IsReadOnly = false;
				colvarWpjcts.DefaultSetting = @"";
				colvarWpjcts.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpjcts);
				
				TableSchema.TableColumn colvarWpxsdj = new TableSchema.TableColumn(schema);
				colvarWpxsdj.ColumnName = "WPXSDJ";
				colvarWpxsdj.DataType = DbType.Decimal;
				colvarWpxsdj.MaxLength = 0;
				colvarWpxsdj.AutoIncrement = false;
				colvarWpxsdj.IsNullable = true;
				colvarWpxsdj.IsPrimaryKey = false;
				colvarWpxsdj.IsForeignKey = false;
				colvarWpxsdj.IsReadOnly = false;
				colvarWpxsdj.DefaultSetting = @"";
				colvarWpxsdj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpxsdj);
				
				TableSchema.TableColumn colvarWpkcje = new TableSchema.TableColumn(schema);
				colvarWpkcje.ColumnName = "WPKCJE";
				colvarWpkcje.DataType = DbType.Decimal;
				colvarWpkcje.MaxLength = 0;
				colvarWpkcje.AutoIncrement = false;
				colvarWpkcje.IsNullable = true;
				colvarWpkcje.IsPrimaryKey = false;
				colvarWpkcje.IsForeignKey = false;
				colvarWpkcje.IsReadOnly = false;
				colvarWpkcje.DefaultSetting = @"";
				colvarWpkcje.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpkcje);
				
				TableSchema.TableColumn colvarWpmjbz = new TableSchema.TableColumn(schema);
				colvarWpmjbz.ColumnName = "WPMJBZ";
				colvarWpmjbz.DataType = DbType.String;
				colvarWpmjbz.MaxLength = 1;
				colvarWpmjbz.AutoIncrement = false;
				colvarWpmjbz.IsNullable = true;
				colvarWpmjbz.IsPrimaryKey = false;
				colvarWpmjbz.IsForeignKey = false;
				colvarWpmjbz.IsReadOnly = false;
				colvarWpmjbz.DefaultSetting = @"";
				colvarWpmjbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpmjbz);
				
				TableSchema.TableColumn colvarXttjbz = new TableSchema.TableColumn(schema);
				colvarXttjbz.ColumnName = "XTTJBZ";
				colvarXttjbz.DataType = DbType.String;
				colvarXttjbz.MaxLength = 1;
				colvarXttjbz.AutoIncrement = false;
				colvarXttjbz.IsNullable = true;
				colvarXttjbz.IsPrimaryKey = false;
				colvarXttjbz.IsForeignKey = false;
				colvarXttjbz.IsReadOnly = false;
				colvarXttjbz.DefaultSetting = @"";
				colvarXttjbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXttjbz);
				
				TableSchema.TableColumn colvarXtscsx = new TableSchema.TableColumn(schema);
				colvarXtscsx.ColumnName = "XTSCSX";
				colvarXtscsx.DataType = DbType.String;
				colvarXtscsx.MaxLength = 1;
				colvarXtscsx.AutoIncrement = false;
				colvarXtscsx.IsNullable = true;
				colvarXtscsx.IsPrimaryKey = false;
				colvarXtscsx.IsForeignKey = false;
				colvarXtscsx.IsReadOnly = false;
				colvarXtscsx.DefaultSetting = @"";
				colvarXtscsx.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtscsx);
				
				TableSchema.TableColumn colvarXtlybz = new TableSchema.TableColumn(schema);
				colvarXtlybz.ColumnName = "XTLYBZ";
				colvarXtlybz.DataType = DbType.String;
				colvarXtlybz.MaxLength = 1;
				colvarXtlybz.AutoIncrement = false;
				colvarXtlybz.IsNullable = true;
				colvarXtlybz.IsPrimaryKey = false;
				colvarXtlybz.IsForeignKey = false;
				colvarXtlybz.IsReadOnly = false;
				colvarXtlybz.DefaultSetting = @"";
				colvarXtlybz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtlybz);
				
				TableSchema.TableColumn colvarXtplgz = new TableSchema.TableColumn(schema);
				colvarXtplgz.ColumnName = "XTPLGZ";
				colvarXtplgz.DataType = DbType.String;
				colvarXtplgz.MaxLength = 1;
				colvarXtplgz.AutoIncrement = false;
				colvarXtplgz.IsNullable = true;
				colvarXtplgz.IsPrimaryKey = false;
				colvarXtplgz.IsForeignKey = false;
				colvarXtplgz.IsReadOnly = false;
				colvarXtplgz.DefaultSetting = @"";
				colvarXtplgz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtplgz);
				
				TableSchema.TableColumn colvarXtplsl = new TableSchema.TableColumn(schema);
				colvarXtplsl.ColumnName = "XTPLSL";
				colvarXtplsl.DataType = DbType.Decimal;
				colvarXtplsl.MaxLength = 0;
				colvarXtplsl.AutoIncrement = false;
				colvarXtplsl.IsNullable = true;
				colvarXtplsl.IsPrimaryKey = false;
				colvarXtplsl.IsForeignKey = false;
				colvarXtplsl.IsReadOnly = false;
				colvarXtplsl.DefaultSetting = @"";
				colvarXtplsl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtplsl);
				
				TableSchema.TableColumn colvarCgtqts = new TableSchema.TableColumn(schema);
				colvarCgtqts.ColumnName = "CGTQTS";
				colvarCgtqts.DataType = DbType.Double;
				colvarCgtqts.MaxLength = 0;
				colvarCgtqts.AutoIncrement = false;
				colvarCgtqts.IsNullable = true;
				colvarCgtqts.IsPrimaryKey = false;
				colvarCgtqts.IsForeignKey = false;
				colvarCgtqts.IsReadOnly = false;
				colvarCgtqts.DefaultSetting = @"";
				colvarCgtqts.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgtqts);
				
				TableSchema.TableColumn colvarCgwldm = new TableSchema.TableColumn(schema);
				colvarCgwldm.ColumnName = "CGWLDM";
				colvarCgwldm.DataType = DbType.String;
				colvarCgwldm.MaxLength = 10;
				colvarCgwldm.AutoIncrement = false;
				colvarCgwldm.IsNullable = true;
				colvarCgwldm.IsPrimaryKey = false;
				colvarCgwldm.IsForeignKey = false;
				colvarCgwldm.IsReadOnly = false;
				colvarCgwldm.DefaultSetting = @"";
				colvarCgwldm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgwldm);
				
				TableSchema.TableColumn colvarWpcgdj = new TableSchema.TableColumn(schema);
				colvarWpcgdj.ColumnName = "WPCGDJ";
				colvarWpcgdj.DataType = DbType.Decimal;
				colvarWpcgdj.MaxLength = 0;
				colvarWpcgdj.AutoIncrement = false;
				colvarWpcgdj.IsNullable = true;
				colvarWpcgdj.IsPrimaryKey = false;
				colvarWpcgdj.IsForeignKey = false;
				colvarWpcgdj.IsReadOnly = false;
				colvarWpcgdj.DefaultSetting = @"";
				colvarWpcgdj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpcgdj);
				
				TableSchema.TableColumn colvarXtwphh = new TableSchema.TableColumn(schema);
				colvarXtwphh.ColumnName = "XTWPHH";
				colvarXtwphh.DataType = DbType.String;
				colvarXtwphh.MaxLength = 24;
				colvarXtwphh.AutoIncrement = false;
				colvarXtwphh.IsNullable = true;
				colvarXtwphh.IsPrimaryKey = false;
				colvarXtwphh.IsForeignKey = false;
				colvarXtwphh.IsReadOnly = false;
				colvarXtwphh.DefaultSetting = @"";
				colvarXtwphh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwphh);
				
				TableSchema.TableColumn colvarWpbcsh = new TableSchema.TableColumn(schema);
				colvarWpbcsh.ColumnName = "WPBCSH";
				colvarWpbcsh.DataType = DbType.String;
				colvarWpbcsh.MaxLength = 20;
				colvarWpbcsh.AutoIncrement = false;
				colvarWpbcsh.IsNullable = true;
				colvarWpbcsh.IsPrimaryKey = false;
				colvarWpbcsh.IsForeignKey = false;
				colvarWpbcsh.IsReadOnly = false;
				colvarWpbcsh.DefaultSetting = @"";
				colvarWpbcsh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpbcsh);
				
				TableSchema.TableColumn colvarWpgfsh = new TableSchema.TableColumn(schema);
				colvarWpgfsh.ColumnName = "WPGFSH";
				colvarWpgfsh.DataType = DbType.String;
				colvarWpgfsh.MaxLength = 20;
				colvarWpgfsh.AutoIncrement = false;
				colvarWpgfsh.IsNullable = true;
				colvarWpgfsh.IsPrimaryKey = false;
				colvarWpgfsh.IsForeignKey = false;
				colvarWpgfsh.IsReadOnly = false;
				colvarWpgfsh.DefaultSetting = @"";
				colvarWpgfsh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpgfsh);
				
				TableSchema.TableColumn colvarScjldw = new TableSchema.TableColumn(schema);
				colvarScjldw.ColumnName = "SCJLDW";
				colvarScjldw.DataType = DbType.String;
				colvarScjldw.MaxLength = 6;
				colvarScjldw.AutoIncrement = false;
				colvarScjldw.IsNullable = true;
				colvarScjldw.IsPrimaryKey = false;
				colvarScjldw.IsForeignKey = false;
				colvarScjldw.IsReadOnly = false;
				colvarScjldw.DefaultSetting = @"";
				colvarScjldw.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScjldw);
				
				TableSchema.TableColumn colvarXtdwbz = new TableSchema.TableColumn(schema);
				colvarXtdwbz.ColumnName = "XTDWBZ";
				colvarXtdwbz.DataType = DbType.String;
				colvarXtdwbz.MaxLength = 1;
				colvarXtdwbz.AutoIncrement = false;
				colvarXtdwbz.IsNullable = true;
				colvarXtdwbz.IsPrimaryKey = false;
				colvarXtdwbz.IsForeignKey = false;
				colvarXtdwbz.IsReadOnly = false;
				colvarXtdwbz.DefaultSetting = @"";
				colvarXtdwbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdwbz);
				
				TableSchema.TableColumn colvarXtscsh = new TableSchema.TableColumn(schema);
				colvarXtscsh.ColumnName = "XTSCSH";
				colvarXtscsh.DataType = DbType.Decimal;
				colvarXtscsh.MaxLength = 0;
				colvarXtscsh.AutoIncrement = false;
				colvarXtscsh.IsNullable = true;
				colvarXtscsh.IsPrimaryKey = false;
				colvarXtscsh.IsForeignKey = false;
				colvarXtscsh.IsReadOnly = false;
				colvarXtscsh.DefaultSetting = @"";
				colvarXtscsh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtscsh);
				
				TableSchema.TableColumn colvarXtzhsh = new TableSchema.TableColumn(schema);
				colvarXtzhsh.ColumnName = "XTZHSH";
				colvarXtzhsh.DataType = DbType.Decimal;
				colvarXtzhsh.MaxLength = 0;
				colvarXtzhsh.AutoIncrement = false;
				colvarXtzhsh.IsNullable = true;
				colvarXtzhsh.IsPrimaryKey = false;
				colvarXtzhsh.IsForeignKey = false;
				colvarXtzhsh.IsReadOnly = false;
				colvarXtzhsh.DefaultSetting = @"";
				colvarXtzhsh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtzhsh);
				
				TableSchema.TableColumn colvarWpxgsx = new TableSchema.TableColumn(schema);
				colvarWpxgsx.ColumnName = "WPXGSX";
				colvarWpxgsx.DataType = DbType.String;
				colvarWpxgsx.MaxLength = 1;
				colvarWpxgsx.AutoIncrement = false;
				colvarWpxgsx.IsNullable = true;
				colvarWpxgsx.IsPrimaryKey = false;
				colvarWpxgsx.IsForeignKey = false;
				colvarWpxgsx.IsReadOnly = false;
				colvarWpxgsx.DefaultSetting = @"";
				colvarWpxgsx.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpxgsx);
				
				TableSchema.TableColumn colvarWpjylb = new TableSchema.TableColumn(schema);
				colvarWpjylb.ColumnName = "WPJYLB";
				colvarWpjylb.DataType = DbType.String;
				colvarWpjylb.MaxLength = 1;
				colvarWpjylb.AutoIncrement = false;
				colvarWpjylb.IsNullable = true;
				colvarWpjylb.IsPrimaryKey = false;
				colvarWpjylb.IsForeignKey = false;
				colvarWpjylb.IsReadOnly = false;
				colvarWpjylb.DefaultSetting = @"";
				colvarWpjylb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpjylb);
				
				TableSchema.TableColumn colvarWpcgsl = new TableSchema.TableColumn(schema);
				colvarWpcgsl.ColumnName = "WPCGSL";
				colvarWpcgsl.DataType = DbType.Decimal;
				colvarWpcgsl.MaxLength = 0;
				colvarWpcgsl.AutoIncrement = false;
				colvarWpcgsl.IsNullable = true;
				colvarWpcgsl.IsPrimaryKey = false;
				colvarWpcgsl.IsForeignKey = false;
				colvarWpcgsl.IsReadOnly = false;
				colvarWpcgsl.DefaultSetting = @"";
				colvarWpcgsl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpcgsl);
				
				TableSchema.TableColumn colvarWpskbz = new TableSchema.TableColumn(schema);
				colvarWpskbz.ColumnName = "WPSKBZ";
				colvarWpskbz.DataType = DbType.String;
				colvarWpskbz.MaxLength = 1;
				colvarWpskbz.AutoIncrement = false;
				colvarWpskbz.IsNullable = true;
				colvarWpskbz.IsPrimaryKey = false;
				colvarWpskbz.IsForeignKey = false;
				colvarWpskbz.IsReadOnly = false;
				colvarWpskbz.DefaultSetting = @"";
				colvarWpskbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpskbz);
				
				TableSchema.TableColumn colvarWpjybh = new TableSchema.TableColumn(schema);
				colvarWpjybh.ColumnName = "WPJYBH";
				colvarWpjybh.DataType = DbType.String;
				colvarWpjybh.MaxLength = 20;
				colvarWpjybh.AutoIncrement = false;
				colvarWpjybh.IsNullable = true;
				colvarWpjybh.IsPrimaryKey = false;
				colvarWpjybh.IsForeignKey = false;
				colvarWpjybh.IsReadOnly = false;
				colvarWpjybh.DefaultSetting = @"";
				colvarWpjybh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpjybh);
				
				TableSchema.TableColumn colvarCgkchs = new TableSchema.TableColumn(schema);
				colvarCgkchs.ColumnName = "CGKCHS";
				colvarCgkchs.DataType = DbType.Decimal;
				colvarCgkchs.MaxLength = 0;
				colvarCgkchs.AutoIncrement = false;
				colvarCgkchs.IsNullable = true;
				colvarCgkchs.IsPrimaryKey = false;
				colvarCgkchs.IsForeignKey = false;
				colvarCgkchs.IsReadOnly = false;
				colvarCgkchs.DefaultSetting = @"";
				colvarCgkchs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgkchs);
				
				TableSchema.TableColumn colvarKcschs = new TableSchema.TableColumn(schema);
				colvarKcschs.ColumnName = "KCSCHS";
				colvarKcschs.DataType = DbType.Decimal;
				colvarKcschs.MaxLength = 0;
				colvarKcschs.AutoIncrement = false;
				colvarKcschs.IsNullable = true;
				colvarKcschs.IsPrimaryKey = false;
				colvarKcschs.IsForeignKey = false;
				colvarKcschs.IsReadOnly = false;
				colvarKcschs.DefaultSetting = @"";
				colvarKcschs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcschs);
				
				TableSchema.TableColumn colvarXtcllb = new TableSchema.TableColumn(schema);
				colvarXtcllb.ColumnName = "XTCLLB";
				colvarXtcllb.DataType = DbType.String;
				colvarXtcllb.MaxLength = 1;
				colvarXtcllb.AutoIncrement = false;
				colvarXtcllb.IsNullable = true;
				colvarXtcllb.IsPrimaryKey = false;
				colvarXtcllb.IsForeignKey = false;
				colvarXtcllb.IsReadOnly = false;
				colvarXtcllb.DefaultSetting = @"";
				colvarXtcllb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtcllb);
				
				TableSchema.TableColumn colvarWpkzsl = new TableSchema.TableColumn(schema);
				colvarWpkzsl.ColumnName = "WPKZSL";
				colvarWpkzsl.DataType = DbType.Decimal;
				colvarWpkzsl.MaxLength = 0;
				colvarWpkzsl.AutoIncrement = false;
				colvarWpkzsl.IsNullable = true;
				colvarWpkzsl.IsPrimaryKey = false;
				colvarWpkzsl.IsForeignKey = false;
				colvarWpkzsl.IsReadOnly = false;
				colvarWpkzsl.DefaultSetting = @"";
				colvarWpkzsl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpkzsl);
				
				TableSchema.TableColumn colvarXtqybz = new TableSchema.TableColumn(schema);
				colvarXtqybz.ColumnName = "XTQYBZ";
				colvarXtqybz.DataType = DbType.String;
				colvarXtqybz.MaxLength = 1;
				colvarXtqybz.AutoIncrement = false;
				colvarXtqybz.IsNullable = true;
				colvarXtqybz.IsPrimaryKey = false;
				colvarXtqybz.IsForeignKey = false;
				colvarXtqybz.IsReadOnly = false;
				colvarXtqybz.DefaultSetting = @"";
				colvarXtqybz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtqybz);
				
				TableSchema.TableColumn colvarXttybz = new TableSchema.TableColumn(schema);
				colvarXttybz.ColumnName = "XTTYBZ";
				colvarXttybz.DataType = DbType.String;
				colvarXttybz.MaxLength = 1;
				colvarXttybz.AutoIncrement = false;
				colvarXttybz.IsNullable = true;
				colvarXttybz.IsPrimaryKey = false;
				colvarXttybz.IsForeignKey = false;
				colvarXttybz.IsReadOnly = false;
				colvarXttybz.DefaultSetting = @"";
				colvarXttybz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXttybz);
				
				TableSchema.TableColumn colvarXtqyrq = new TableSchema.TableColumn(schema);
				colvarXtqyrq.ColumnName = "XTQYRQ";
				colvarXtqyrq.DataType = DbType.DateTime;
				colvarXtqyrq.MaxLength = 0;
				colvarXtqyrq.AutoIncrement = false;
				colvarXtqyrq.IsNullable = true;
				colvarXtqyrq.IsPrimaryKey = false;
				colvarXtqyrq.IsForeignKey = false;
				colvarXtqyrq.IsReadOnly = false;
				colvarXtqyrq.DefaultSetting = @"";
				colvarXtqyrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtqyrq);
				
				TableSchema.TableColumn colvarXttyrq = new TableSchema.TableColumn(schema);
				colvarXttyrq.ColumnName = "XTTYRQ";
				colvarXttyrq.DataType = DbType.DateTime;
				colvarXttyrq.MaxLength = 0;
				colvarXttyrq.AutoIncrement = false;
				colvarXttyrq.IsNullable = true;
				colvarXttyrq.IsPrimaryKey = false;
				colvarXttyrq.IsForeignKey = false;
				colvarXttyrq.IsReadOnly = false;
				colvarXttyrq.DefaultSetting = @"";
				colvarXttyrq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXttyrq);
				
				TableSchema.TableColumn colvarWpkclb = new TableSchema.TableColumn(schema);
				colvarWpkclb.ColumnName = "WPKCLB";
				colvarWpkclb.DataType = DbType.String;
				colvarWpkclb.MaxLength = 10;
				colvarWpkclb.AutoIncrement = false;
				colvarWpkclb.IsNullable = true;
				colvarWpkclb.IsPrimaryKey = false;
				colvarWpkclb.IsForeignKey = false;
				colvarWpkclb.IsReadOnly = false;
				colvarWpkclb.DefaultSetting = @"";
				colvarWpkclb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWpkclb);
				
				TableSchema.TableColumn colvarKczdkc = new TableSchema.TableColumn(schema);
				colvarKczdkc.ColumnName = "KCZDKC";
				colvarKczdkc.DataType = DbType.Decimal;
				colvarKczdkc.MaxLength = 0;
				colvarKczdkc.AutoIncrement = false;
				colvarKczdkc.IsNullable = true;
				colvarKczdkc.IsPrimaryKey = false;
				colvarKczdkc.IsForeignKey = false;
				colvarKczdkc.IsReadOnly = false;
				colvarKczdkc.DefaultSetting = @"";
				colvarKczdkc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKczdkc);
				
				TableSchema.TableColumn colvarKcaqkc = new TableSchema.TableColumn(schema);
				colvarKcaqkc.ColumnName = "KCAQKC";
				colvarKcaqkc.DataType = DbType.Decimal;
				colvarKcaqkc.MaxLength = 0;
				colvarKcaqkc.AutoIncrement = false;
				colvarKcaqkc.IsNullable = true;
				colvarKcaqkc.IsPrimaryKey = false;
				colvarKcaqkc.IsForeignKey = false;
				colvarKcaqkc.IsReadOnly = false;
				colvarKcaqkc.DefaultSetting = @"";
				colvarKcaqkc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcaqkc);
				
				TableSchema.TableColumn colvarKcdhdl = new TableSchema.TableColumn(schema);
				colvarKcdhdl.ColumnName = "KCDHDL";
				colvarKcdhdl.DataType = DbType.Decimal;
				colvarKcdhdl.MaxLength = 0;
				colvarKcdhdl.AutoIncrement = false;
				colvarKcdhdl.IsNullable = true;
				colvarKcdhdl.IsPrimaryKey = false;
				colvarKcdhdl.IsForeignKey = false;
				colvarKcdhdl.IsReadOnly = false;
				colvarKcdhdl.DefaultSetting = @"";
				colvarKcdhdl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcdhdl);
				
				TableSchema.TableColumn colvarKcrhfl = new TableSchema.TableColumn(schema);
				colvarKcrhfl.ColumnName = "KCRHFL";
				colvarKcrhfl.DataType = DbType.Decimal;
				colvarKcrhfl.MaxLength = 0;
				colvarKcrhfl.AutoIncrement = false;
				colvarKcrhfl.IsNullable = true;
				colvarKcrhfl.IsPrimaryKey = false;
				colvarKcrhfl.IsForeignKey = false;
				colvarKcrhfl.IsReadOnly = false;
				colvarKcrhfl.DefaultSetting = @"";
				colvarKcrhfl.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcrhfl);
				
				TableSchema.TableColumn colvarKcdhbc = new TableSchema.TableColumn(schema);
				colvarKcdhbc.ColumnName = "KCDHBC";
				colvarKcdhbc.DataType = DbType.Decimal;
				colvarKcdhbc.MaxLength = 0;
				colvarKcdhbc.AutoIncrement = false;
				colvarKcdhbc.IsNullable = true;
				colvarKcdhbc.IsPrimaryKey = false;
				colvarKcdhbc.IsForeignKey = false;
				colvarKcdhbc.IsReadOnly = false;
				colvarKcdhbc.DefaultSetting = @"";
				colvarKcdhbc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcdhbc);
				
				TableSchema.TableColumn colvarKcpdzq = new TableSchema.TableColumn(schema);
				colvarKcpdzq.ColumnName = "KCPDZQ";
				colvarKcpdzq.DataType = DbType.Double;
				colvarKcpdzq.MaxLength = 0;
				colvarKcpdzq.AutoIncrement = false;
				colvarKcpdzq.IsNullable = true;
				colvarKcpdzq.IsPrimaryKey = false;
				colvarKcpdzq.IsForeignKey = false;
				colvarKcpdzq.IsReadOnly = false;
				colvarKcpdzq.DefaultSetting = @"";
				colvarKcpdzq.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcpdzq);
				
				TableSchema.TableColumn colvarKcpdwc = new TableSchema.TableColumn(schema);
				colvarKcpdwc.ColumnName = "KCPDWC";
				colvarKcpdwc.DataType = DbType.Decimal;
				colvarKcpdwc.MaxLength = 0;
				colvarKcpdwc.AutoIncrement = false;
				colvarKcpdwc.IsNullable = true;
				colvarKcpdwc.IsPrimaryKey = false;
				colvarKcpdwc.IsForeignKey = false;
				colvarKcpdwc.IsReadOnly = false;
				colvarKcpdwc.DefaultSetting = @"";
				colvarKcpdwc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcpdwc);
				
				TableSchema.TableColumn colvarKcjyqx = new TableSchema.TableColumn(schema);
				colvarKcjyqx.ColumnName = "KCJYQX";
				colvarKcjyqx.DataType = DbType.Double;
				colvarKcjyqx.MaxLength = 0;
				colvarKcjyqx.AutoIncrement = false;
				colvarKcjyqx.IsNullable = true;
				colvarKcjyqx.IsPrimaryKey = false;
				colvarKcjyqx.IsForeignKey = false;
				colvarKcjyqx.IsReadOnly = false;
				colvarKcjyqx.DefaultSetting = @"";
				colvarKcjyqx.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcjyqx);
				
				TableSchema.TableColumn colvarXtzybz = new TableSchema.TableColumn(schema);
				colvarXtzybz.ColumnName = "XTZYBZ";
				colvarXtzybz.DataType = DbType.String;
				colvarXtzybz.MaxLength = 1;
				colvarXtzybz.AutoIncrement = false;
				colvarXtzybz.IsNullable = true;
				colvarXtzybz.IsPrimaryKey = false;
				colvarXtzybz.IsForeignKey = false;
				colvarXtzybz.IsReadOnly = false;
				colvarXtzybz.DefaultSetting = @"";
				colvarXtzybz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtzybz);
				
				TableSchema.TableColumn colvarScgydm = new TableSchema.TableColumn(schema);
				colvarScgydm.ColumnName = "SCGYDM";
				colvarScgydm.DataType = DbType.String;
				colvarScgydm.MaxLength = 4;
				colvarScgydm.AutoIncrement = false;
				colvarScgydm.IsNullable = true;
				colvarScgydm.IsPrimaryKey = false;
				colvarScgydm.IsForeignKey = false;
				colvarScgydm.IsReadOnly = false;
				colvarScgydm.DefaultSetting = @"";
				colvarScgydm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScgydm);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ErpNowthwin"].AddSchema("XTM22_BAK",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Xtczxh")]
		[Bindable(true)]
		public decimal Xtczxh 
		{
			get { return GetColumnValue<decimal>(Columns.Xtczxh); }
			set { SetColumnValue(Columns.Xtczxh, value); }
		}
		  
		[XmlAttribute("Xtwpdm")]
		[Bindable(true)]
		public string Xtwpdm 
		{
			get { return GetColumnValue<string>(Columns.Xtwpdm); }
			set { SetColumnValue(Columns.Xtwpdm, value); }
		}
		  
		[XmlAttribute("Xtwpmc")]
		[Bindable(true)]
		public string Xtwpmc 
		{
			get { return GetColumnValue<string>(Columns.Xtwpmc); }
			set { SetColumnValue(Columns.Xtwpmc, value); }
		}
		  
		[XmlAttribute("Xtpzgg")]
		[Bindable(true)]
		public string Xtpzgg 
		{
			get { return GetColumnValue<string>(Columns.Xtpzgg); }
			set { SetColumnValue(Columns.Xtpzgg, value); }
		}
		  
		[XmlAttribute("Xtwpxh")]
		[Bindable(true)]
		public string Xtwpxh 
		{
			get { return GetColumnValue<string>(Columns.Xtwpxh); }
			set { SetColumnValue(Columns.Xtwpxh, value); }
		}
		  
		[XmlAttribute("Xttxhm")]
		[Bindable(true)]
		public string Xttxhm 
		{
			get { return GetColumnValue<string>(Columns.Xttxhm); }
			set { SetColumnValue(Columns.Xttxhm, value); }
		}
		  
		[XmlAttribute("Xtcwhs")]
		[Bindable(true)]
		public string Xtcwhs 
		{
			get { return GetColumnValue<string>(Columns.Xtcwhs); }
			set { SetColumnValue(Columns.Xtcwhs, value); }
		}
		  
		[XmlAttribute("Kcjldw")]
		[Bindable(true)]
		public string Kcjldw 
		{
			get { return GetColumnValue<string>(Columns.Kcjldw); }
			set { SetColumnValue(Columns.Kcjldw, value); }
		}
		  
		[XmlAttribute("Cgjldw")]
		[Bindable(true)]
		public string Cgjldw 
		{
			get { return GetColumnValue<string>(Columns.Cgjldw); }
			set { SetColumnValue(Columns.Cgjldw, value); }
		}
		  
		[XmlAttribute("Xsjldw")]
		[Bindable(true)]
		public string Xsjldw 
		{
			get { return GetColumnValue<string>(Columns.Xsjldw); }
			set { SetColumnValue(Columns.Xsjldw, value); }
		}
		  
		[XmlAttribute("Cwjldw")]
		[Bindable(true)]
		public string Cwjldw 
		{
			get { return GetColumnValue<string>(Columns.Cwjldw); }
			set { SetColumnValue(Columns.Cwjldw, value); }
		}
		  
		[XmlAttribute("Kcpcgl")]
		[Bindable(true)]
		public string Kcpcgl 
		{
			get { return GetColumnValue<string>(Columns.Kcpcgl); }
			set { SetColumnValue(Columns.Kcpcgl, value); }
		}
		  
		[XmlAttribute("Kcqsck")]
		[Bindable(true)]
		public string Kcqsck 
		{
			get { return GetColumnValue<string>(Columns.Kcqsck); }
			set { SetColumnValue(Columns.Kcqsck, value); }
		}
		  
		[XmlAttribute("Wpjyxm")]
		[Bindable(true)]
		public string Wpjyxm 
		{
			get { return GetColumnValue<string>(Columns.Wpjyxm); }
			set { SetColumnValue(Columns.Wpjyxm, value); }
		}
		  
		[XmlAttribute("Wphsjg")]
		[Bindable(true)]
		public decimal? Wphsjg 
		{
			get { return GetColumnValue<decimal?>(Columns.Wphsjg); }
			set { SetColumnValue(Columns.Wphsjg, value); }
		}
		  
		[XmlAttribute("Wpryxq")]
		[Bindable(true)]
		public double? Wpryxq 
		{
			get { return GetColumnValue<double?>(Columns.Wpryxq); }
			set { SetColumnValue(Columns.Wpryxq, value); }
		}
		  
		[XmlAttribute("Wpjcts")]
		[Bindable(true)]
		public double? Wpjcts 
		{
			get { return GetColumnValue<double?>(Columns.Wpjcts); }
			set { SetColumnValue(Columns.Wpjcts, value); }
		}
		  
		[XmlAttribute("Wpxsdj")]
		[Bindable(true)]
		public decimal? Wpxsdj 
		{
			get { return GetColumnValue<decimal?>(Columns.Wpxsdj); }
			set { SetColumnValue(Columns.Wpxsdj, value); }
		}
		  
		[XmlAttribute("Wpkcje")]
		[Bindable(true)]
		public decimal? Wpkcje 
		{
			get { return GetColumnValue<decimal?>(Columns.Wpkcje); }
			set { SetColumnValue(Columns.Wpkcje, value); }
		}
		  
		[XmlAttribute("Wpmjbz")]
		[Bindable(true)]
		public string Wpmjbz 
		{
			get { return GetColumnValue<string>(Columns.Wpmjbz); }
			set { SetColumnValue(Columns.Wpmjbz, value); }
		}
		  
		[XmlAttribute("Xttjbz")]
		[Bindable(true)]
		public string Xttjbz 
		{
			get { return GetColumnValue<string>(Columns.Xttjbz); }
			set { SetColumnValue(Columns.Xttjbz, value); }
		}
		  
		[XmlAttribute("Xtscsx")]
		[Bindable(true)]
		public string Xtscsx 
		{
			get { return GetColumnValue<string>(Columns.Xtscsx); }
			set { SetColumnValue(Columns.Xtscsx, value); }
		}
		  
		[XmlAttribute("Xtlybz")]
		[Bindable(true)]
		public string Xtlybz 
		{
			get { return GetColumnValue<string>(Columns.Xtlybz); }
			set { SetColumnValue(Columns.Xtlybz, value); }
		}
		  
		[XmlAttribute("Xtplgz")]
		[Bindable(true)]
		public string Xtplgz 
		{
			get { return GetColumnValue<string>(Columns.Xtplgz); }
			set { SetColumnValue(Columns.Xtplgz, value); }
		}
		  
		[XmlAttribute("Xtplsl")]
		[Bindable(true)]
		public decimal? Xtplsl 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtplsl); }
			set { SetColumnValue(Columns.Xtplsl, value); }
		}
		  
		[XmlAttribute("Cgtqts")]
		[Bindable(true)]
		public double? Cgtqts 
		{
			get { return GetColumnValue<double?>(Columns.Cgtqts); }
			set { SetColumnValue(Columns.Cgtqts, value); }
		}
		  
		[XmlAttribute("Cgwldm")]
		[Bindable(true)]
		public string Cgwldm 
		{
			get { return GetColumnValue<string>(Columns.Cgwldm); }
			set { SetColumnValue(Columns.Cgwldm, value); }
		}
		  
		[XmlAttribute("Wpcgdj")]
		[Bindable(true)]
		public decimal? Wpcgdj 
		{
			get { return GetColumnValue<decimal?>(Columns.Wpcgdj); }
			set { SetColumnValue(Columns.Wpcgdj, value); }
		}
		  
		[XmlAttribute("Xtwphh")]
		[Bindable(true)]
		public string Xtwphh 
		{
			get { return GetColumnValue<string>(Columns.Xtwphh); }
			set { SetColumnValue(Columns.Xtwphh, value); }
		}
		  
		[XmlAttribute("Wpbcsh")]
		[Bindable(true)]
		public string Wpbcsh 
		{
			get { return GetColumnValue<string>(Columns.Wpbcsh); }
			set { SetColumnValue(Columns.Wpbcsh, value); }
		}
		  
		[XmlAttribute("Wpgfsh")]
		[Bindable(true)]
		public string Wpgfsh 
		{
			get { return GetColumnValue<string>(Columns.Wpgfsh); }
			set { SetColumnValue(Columns.Wpgfsh, value); }
		}
		  
		[XmlAttribute("Scjldw")]
		[Bindable(true)]
		public string Scjldw 
		{
			get { return GetColumnValue<string>(Columns.Scjldw); }
			set { SetColumnValue(Columns.Scjldw, value); }
		}
		  
		[XmlAttribute("Xtdwbz")]
		[Bindable(true)]
		public string Xtdwbz 
		{
			get { return GetColumnValue<string>(Columns.Xtdwbz); }
			set { SetColumnValue(Columns.Xtdwbz, value); }
		}
		  
		[XmlAttribute("Xtscsh")]
		[Bindable(true)]
		public decimal? Xtscsh 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtscsh); }
			set { SetColumnValue(Columns.Xtscsh, value); }
		}
		  
		[XmlAttribute("Xtzhsh")]
		[Bindable(true)]
		public decimal? Xtzhsh 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtzhsh); }
			set { SetColumnValue(Columns.Xtzhsh, value); }
		}
		  
		[XmlAttribute("Wpxgsx")]
		[Bindable(true)]
		public string Wpxgsx 
		{
			get { return GetColumnValue<string>(Columns.Wpxgsx); }
			set { SetColumnValue(Columns.Wpxgsx, value); }
		}
		  
		[XmlAttribute("Wpjylb")]
		[Bindable(true)]
		public string Wpjylb 
		{
			get { return GetColumnValue<string>(Columns.Wpjylb); }
			set { SetColumnValue(Columns.Wpjylb, value); }
		}
		  
		[XmlAttribute("Wpcgsl")]
		[Bindable(true)]
		public decimal? Wpcgsl 
		{
			get { return GetColumnValue<decimal?>(Columns.Wpcgsl); }
			set { SetColumnValue(Columns.Wpcgsl, value); }
		}
		  
		[XmlAttribute("Wpskbz")]
		[Bindable(true)]
		public string Wpskbz 
		{
			get { return GetColumnValue<string>(Columns.Wpskbz); }
			set { SetColumnValue(Columns.Wpskbz, value); }
		}
		  
		[XmlAttribute("Wpjybh")]
		[Bindable(true)]
		public string Wpjybh 
		{
			get { return GetColumnValue<string>(Columns.Wpjybh); }
			set { SetColumnValue(Columns.Wpjybh, value); }
		}
		  
		[XmlAttribute("Cgkchs")]
		[Bindable(true)]
		public decimal? Cgkchs 
		{
			get { return GetColumnValue<decimal?>(Columns.Cgkchs); }
			set { SetColumnValue(Columns.Cgkchs, value); }
		}
		  
		[XmlAttribute("Kcschs")]
		[Bindable(true)]
		public decimal? Kcschs 
		{
			get { return GetColumnValue<decimal?>(Columns.Kcschs); }
			set { SetColumnValue(Columns.Kcschs, value); }
		}
		  
		[XmlAttribute("Xtcllb")]
		[Bindable(true)]
		public string Xtcllb 
		{
			get { return GetColumnValue<string>(Columns.Xtcllb); }
			set { SetColumnValue(Columns.Xtcllb, value); }
		}
		  
		[XmlAttribute("Wpkzsl")]
		[Bindable(true)]
		public decimal? Wpkzsl 
		{
			get { return GetColumnValue<decimal?>(Columns.Wpkzsl); }
			set { SetColumnValue(Columns.Wpkzsl, value); }
		}
		  
		[XmlAttribute("Xtqybz")]
		[Bindable(true)]
		public string Xtqybz 
		{
			get { return GetColumnValue<string>(Columns.Xtqybz); }
			set { SetColumnValue(Columns.Xtqybz, value); }
		}
		  
		[XmlAttribute("Xttybz")]
		[Bindable(true)]
		public string Xttybz 
		{
			get { return GetColumnValue<string>(Columns.Xttybz); }
			set { SetColumnValue(Columns.Xttybz, value); }
		}
		  
		[XmlAttribute("Xtqyrq")]
		[Bindable(true)]
		public DateTime? Xtqyrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Xtqyrq); }
			set { SetColumnValue(Columns.Xtqyrq, value); }
		}
		  
		[XmlAttribute("Xttyrq")]
		[Bindable(true)]
		public DateTime? Xttyrq 
		{
			get { return GetColumnValue<DateTime?>(Columns.Xttyrq); }
			set { SetColumnValue(Columns.Xttyrq, value); }
		}
		  
		[XmlAttribute("Wpkclb")]
		[Bindable(true)]
		public string Wpkclb 
		{
			get { return GetColumnValue<string>(Columns.Wpkclb); }
			set { SetColumnValue(Columns.Wpkclb, value); }
		}
		  
		[XmlAttribute("Kczdkc")]
		[Bindable(true)]
		public decimal? Kczdkc 
		{
			get { return GetColumnValue<decimal?>(Columns.Kczdkc); }
			set { SetColumnValue(Columns.Kczdkc, value); }
		}
		  
		[XmlAttribute("Kcaqkc")]
		[Bindable(true)]
		public decimal? Kcaqkc 
		{
			get { return GetColumnValue<decimal?>(Columns.Kcaqkc); }
			set { SetColumnValue(Columns.Kcaqkc, value); }
		}
		  
		[XmlAttribute("Kcdhdl")]
		[Bindable(true)]
		public decimal? Kcdhdl 
		{
			get { return GetColumnValue<decimal?>(Columns.Kcdhdl); }
			set { SetColumnValue(Columns.Kcdhdl, value); }
		}
		  
		[XmlAttribute("Kcrhfl")]
		[Bindable(true)]
		public decimal? Kcrhfl 
		{
			get { return GetColumnValue<decimal?>(Columns.Kcrhfl); }
			set { SetColumnValue(Columns.Kcrhfl, value); }
		}
		  
		[XmlAttribute("Kcdhbc")]
		[Bindable(true)]
		public decimal? Kcdhbc 
		{
			get { return GetColumnValue<decimal?>(Columns.Kcdhbc); }
			set { SetColumnValue(Columns.Kcdhbc, value); }
		}
		  
		[XmlAttribute("Kcpdzq")]
		[Bindable(true)]
		public double? Kcpdzq 
		{
			get { return GetColumnValue<double?>(Columns.Kcpdzq); }
			set { SetColumnValue(Columns.Kcpdzq, value); }
		}
		  
		[XmlAttribute("Kcpdwc")]
		[Bindable(true)]
		public decimal? Kcpdwc 
		{
			get { return GetColumnValue<decimal?>(Columns.Kcpdwc); }
			set { SetColumnValue(Columns.Kcpdwc, value); }
		}
		  
		[XmlAttribute("Kcjyqx")]
		[Bindable(true)]
		public double? Kcjyqx 
		{
			get { return GetColumnValue<double?>(Columns.Kcjyqx); }
			set { SetColumnValue(Columns.Kcjyqx, value); }
		}
		  
		[XmlAttribute("Xtzybz")]
		[Bindable(true)]
		public string Xtzybz 
		{
			get { return GetColumnValue<string>(Columns.Xtzybz); }
			set { SetColumnValue(Columns.Xtzybz, value); }
		}
		  
		[XmlAttribute("Scgydm")]
		[Bindable(true)]
		public string Scgydm 
		{
			get { return GetColumnValue<string>(Columns.Scgydm); }
			set { SetColumnValue(Columns.Scgydm, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(decimal varXtczxh,string varXtwpdm,string varXtwpmc,string varXtpzgg,string varXtwpxh,string varXttxhm,string varXtcwhs,string varKcjldw,string varCgjldw,string varXsjldw,string varCwjldw,string varKcpcgl,string varKcqsck,string varWpjyxm,decimal? varWphsjg,double? varWpryxq,double? varWpjcts,decimal? varWpxsdj,decimal? varWpkcje,string varWpmjbz,string varXttjbz,string varXtscsx,string varXtlybz,string varXtplgz,decimal? varXtplsl,double? varCgtqts,string varCgwldm,decimal? varWpcgdj,string varXtwphh,string varWpbcsh,string varWpgfsh,string varScjldw,string varXtdwbz,decimal? varXtscsh,decimal? varXtzhsh,string varWpxgsx,string varWpjylb,decimal? varWpcgsl,string varWpskbz,string varWpjybh,decimal? varCgkchs,decimal? varKcschs,string varXtcllb,decimal? varWpkzsl,string varXtqybz,string varXttybz,DateTime? varXtqyrq,DateTime? varXttyrq,string varWpkclb,decimal? varKczdkc,decimal? varKcaqkc,decimal? varKcdhdl,decimal? varKcrhfl,decimal? varKcdhbc,double? varKcpdzq,decimal? varKcpdwc,double? varKcjyqx,string varXtzybz,string varScgydm)
		{
			XTM22Bak item = new XTM22Bak();
			
			item.Xtczxh = varXtczxh;
			
			item.Xtwpdm = varXtwpdm;
			
			item.Xtwpmc = varXtwpmc;
			
			item.Xtpzgg = varXtpzgg;
			
			item.Xtwpxh = varXtwpxh;
			
			item.Xttxhm = varXttxhm;
			
			item.Xtcwhs = varXtcwhs;
			
			item.Kcjldw = varKcjldw;
			
			item.Cgjldw = varCgjldw;
			
			item.Xsjldw = varXsjldw;
			
			item.Cwjldw = varCwjldw;
			
			item.Kcpcgl = varKcpcgl;
			
			item.Kcqsck = varKcqsck;
			
			item.Wpjyxm = varWpjyxm;
			
			item.Wphsjg = varWphsjg;
			
			item.Wpryxq = varWpryxq;
			
			item.Wpjcts = varWpjcts;
			
			item.Wpxsdj = varWpxsdj;
			
			item.Wpkcje = varWpkcje;
			
			item.Wpmjbz = varWpmjbz;
			
			item.Xttjbz = varXttjbz;
			
			item.Xtscsx = varXtscsx;
			
			item.Xtlybz = varXtlybz;
			
			item.Xtplgz = varXtplgz;
			
			item.Xtplsl = varXtplsl;
			
			item.Cgtqts = varCgtqts;
			
			item.Cgwldm = varCgwldm;
			
			item.Wpcgdj = varWpcgdj;
			
			item.Xtwphh = varXtwphh;
			
			item.Wpbcsh = varWpbcsh;
			
			item.Wpgfsh = varWpgfsh;
			
			item.Scjldw = varScjldw;
			
			item.Xtdwbz = varXtdwbz;
			
			item.Xtscsh = varXtscsh;
			
			item.Xtzhsh = varXtzhsh;
			
			item.Wpxgsx = varWpxgsx;
			
			item.Wpjylb = varWpjylb;
			
			item.Wpcgsl = varWpcgsl;
			
			item.Wpskbz = varWpskbz;
			
			item.Wpjybh = varWpjybh;
			
			item.Cgkchs = varCgkchs;
			
			item.Kcschs = varKcschs;
			
			item.Xtcllb = varXtcllb;
			
			item.Wpkzsl = varWpkzsl;
			
			item.Xtqybz = varXtqybz;
			
			item.Xttybz = varXttybz;
			
			item.Xtqyrq = varXtqyrq;
			
			item.Xttyrq = varXttyrq;
			
			item.Wpkclb = varWpkclb;
			
			item.Kczdkc = varKczdkc;
			
			item.Kcaqkc = varKcaqkc;
			
			item.Kcdhdl = varKcdhdl;
			
			item.Kcrhfl = varKcrhfl;
			
			item.Kcdhbc = varKcdhbc;
			
			item.Kcpdzq = varKcpdzq;
			
			item.Kcpdwc = varKcpdwc;
			
			item.Kcjyqx = varKcjyqx;
			
			item.Xtzybz = varXtzybz;
			
			item.Scgydm = varScgydm;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(decimal varXtczxh,string varXtwpdm,string varXtwpmc,string varXtpzgg,string varXtwpxh,string varXttxhm,string varXtcwhs,string varKcjldw,string varCgjldw,string varXsjldw,string varCwjldw,string varKcpcgl,string varKcqsck,string varWpjyxm,decimal? varWphsjg,double? varWpryxq,double? varWpjcts,decimal? varWpxsdj,decimal? varWpkcje,string varWpmjbz,string varXttjbz,string varXtscsx,string varXtlybz,string varXtplgz,decimal? varXtplsl,double? varCgtqts,string varCgwldm,decimal? varWpcgdj,string varXtwphh,string varWpbcsh,string varWpgfsh,string varScjldw,string varXtdwbz,decimal? varXtscsh,decimal? varXtzhsh,string varWpxgsx,string varWpjylb,decimal? varWpcgsl,string varWpskbz,string varWpjybh,decimal? varCgkchs,decimal? varKcschs,string varXtcllb,decimal? varWpkzsl,string varXtqybz,string varXttybz,DateTime? varXtqyrq,DateTime? varXttyrq,string varWpkclb,decimal? varKczdkc,decimal? varKcaqkc,decimal? varKcdhdl,decimal? varKcrhfl,decimal? varKcdhbc,double? varKcpdzq,decimal? varKcpdwc,double? varKcjyqx,string varXtzybz,string varScgydm)
		{
			XTM22Bak item = new XTM22Bak();
			
				item.Xtczxh = varXtczxh;
			
				item.Xtwpdm = varXtwpdm;
			
				item.Xtwpmc = varXtwpmc;
			
				item.Xtpzgg = varXtpzgg;
			
				item.Xtwpxh = varXtwpxh;
			
				item.Xttxhm = varXttxhm;
			
				item.Xtcwhs = varXtcwhs;
			
				item.Kcjldw = varKcjldw;
			
				item.Cgjldw = varCgjldw;
			
				item.Xsjldw = varXsjldw;
			
				item.Cwjldw = varCwjldw;
			
				item.Kcpcgl = varKcpcgl;
			
				item.Kcqsck = varKcqsck;
			
				item.Wpjyxm = varWpjyxm;
			
				item.Wphsjg = varWphsjg;
			
				item.Wpryxq = varWpryxq;
			
				item.Wpjcts = varWpjcts;
			
				item.Wpxsdj = varWpxsdj;
			
				item.Wpkcje = varWpkcje;
			
				item.Wpmjbz = varWpmjbz;
			
				item.Xttjbz = varXttjbz;
			
				item.Xtscsx = varXtscsx;
			
				item.Xtlybz = varXtlybz;
			
				item.Xtplgz = varXtplgz;
			
				item.Xtplsl = varXtplsl;
			
				item.Cgtqts = varCgtqts;
			
				item.Cgwldm = varCgwldm;
			
				item.Wpcgdj = varWpcgdj;
			
				item.Xtwphh = varXtwphh;
			
				item.Wpbcsh = varWpbcsh;
			
				item.Wpgfsh = varWpgfsh;
			
				item.Scjldw = varScjldw;
			
				item.Xtdwbz = varXtdwbz;
			
				item.Xtscsh = varXtscsh;
			
				item.Xtzhsh = varXtzhsh;
			
				item.Wpxgsx = varWpxgsx;
			
				item.Wpjylb = varWpjylb;
			
				item.Wpcgsl = varWpcgsl;
			
				item.Wpskbz = varWpskbz;
			
				item.Wpjybh = varWpjybh;
			
				item.Cgkchs = varCgkchs;
			
				item.Kcschs = varKcschs;
			
				item.Xtcllb = varXtcllb;
			
				item.Wpkzsl = varWpkzsl;
			
				item.Xtqybz = varXtqybz;
			
				item.Xttybz = varXttybz;
			
				item.Xtqyrq = varXtqyrq;
			
				item.Xttyrq = varXttyrq;
			
				item.Wpkclb = varWpkclb;
			
				item.Kczdkc = varKczdkc;
			
				item.Kcaqkc = varKcaqkc;
			
				item.Kcdhdl = varKcdhdl;
			
				item.Kcrhfl = varKcrhfl;
			
				item.Kcdhbc = varKcdhbc;
			
				item.Kcpdzq = varKcpdzq;
			
				item.Kcpdwc = varKcpdwc;
			
				item.Kcjyqx = varKcjyqx;
			
				item.Xtzybz = varXtzybz;
			
				item.Scgydm = varScgydm;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn XtczxhColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwpdmColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwpmcColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn XtpzggColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwpxhColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn XttxhmColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn XtcwhsColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KcjldwColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CgjldwColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn XsjldwColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CwjldwColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn KcpcglColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn KcqsckColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn WpjyxmColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn WphsjgColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn WpryxqColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn WpjctsColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn WpxsdjColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn WpkcjeColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn WpmjbzColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn XttjbzColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn XtscsxColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn XtlybzColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn XtplgzColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn XtplslColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn CgtqtsColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn CgwldmColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn WpcgdjColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwphhColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn WpbcshColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn WpgfshColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn ScjldwColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdwbzColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn XtscshColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn XtzhshColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn WpxgsxColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn WpjylbColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn WpcgslColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn WpskbzColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn WpjybhColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn CgkchsColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn KcschsColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn XtcllbColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn WpkzslColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn XtqybzColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        public static TableSchema.TableColumn XttybzColumn
        {
            get { return Schema.Columns[45]; }
        }
        
        
        
        public static TableSchema.TableColumn XtqyrqColumn
        {
            get { return Schema.Columns[46]; }
        }
        
        
        
        public static TableSchema.TableColumn XttyrqColumn
        {
            get { return Schema.Columns[47]; }
        }
        
        
        
        public static TableSchema.TableColumn WpkclbColumn
        {
            get { return Schema.Columns[48]; }
        }
        
        
        
        public static TableSchema.TableColumn KczdkcColumn
        {
            get { return Schema.Columns[49]; }
        }
        
        
        
        public static TableSchema.TableColumn KcaqkcColumn
        {
            get { return Schema.Columns[50]; }
        }
        
        
        
        public static TableSchema.TableColumn KcdhdlColumn
        {
            get { return Schema.Columns[51]; }
        }
        
        
        
        public static TableSchema.TableColumn KcrhflColumn
        {
            get { return Schema.Columns[52]; }
        }
        
        
        
        public static TableSchema.TableColumn KcdhbcColumn
        {
            get { return Schema.Columns[53]; }
        }
        
        
        
        public static TableSchema.TableColumn KcpdzqColumn
        {
            get { return Schema.Columns[54]; }
        }
        
        
        
        public static TableSchema.TableColumn KcpdwcColumn
        {
            get { return Schema.Columns[55]; }
        }
        
        
        
        public static TableSchema.TableColumn KcjyqxColumn
        {
            get { return Schema.Columns[56]; }
        }
        
        
        
        public static TableSchema.TableColumn XtzybzColumn
        {
            get { return Schema.Columns[57]; }
        }
        
        
        
        public static TableSchema.TableColumn ScgydmColumn
        {
            get { return Schema.Columns[58]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Xtczxh = @"XTCZXH";
			 public static string Xtwpdm = @"XTWPDM";
			 public static string Xtwpmc = @"XTWPMC";
			 public static string Xtpzgg = @"XTPZGG";
			 public static string Xtwpxh = @"XTWPXH";
			 public static string Xttxhm = @"XTTXHM";
			 public static string Xtcwhs = @"XTCWHS";
			 public static string Kcjldw = @"KCJLDW";
			 public static string Cgjldw = @"CGJLDW";
			 public static string Xsjldw = @"XSJLDW";
			 public static string Cwjldw = @"CWJLDW";
			 public static string Kcpcgl = @"KCPCGL";
			 public static string Kcqsck = @"KCQSCK";
			 public static string Wpjyxm = @"WPJYXM";
			 public static string Wphsjg = @"WPHSJG";
			 public static string Wpryxq = @"WPRYXQ";
			 public static string Wpjcts = @"WPJCTS";
			 public static string Wpxsdj = @"WPXSDJ";
			 public static string Wpkcje = @"WPKCJE";
			 public static string Wpmjbz = @"WPMJBZ";
			 public static string Xttjbz = @"XTTJBZ";
			 public static string Xtscsx = @"XTSCSX";
			 public static string Xtlybz = @"XTLYBZ";
			 public static string Xtplgz = @"XTPLGZ";
			 public static string Xtplsl = @"XTPLSL";
			 public static string Cgtqts = @"CGTQTS";
			 public static string Cgwldm = @"CGWLDM";
			 public static string Wpcgdj = @"WPCGDJ";
			 public static string Xtwphh = @"XTWPHH";
			 public static string Wpbcsh = @"WPBCSH";
			 public static string Wpgfsh = @"WPGFSH";
			 public static string Scjldw = @"SCJLDW";
			 public static string Xtdwbz = @"XTDWBZ";
			 public static string Xtscsh = @"XTSCSH";
			 public static string Xtzhsh = @"XTZHSH";
			 public static string Wpxgsx = @"WPXGSX";
			 public static string Wpjylb = @"WPJYLB";
			 public static string Wpcgsl = @"WPCGSL";
			 public static string Wpskbz = @"WPSKBZ";
			 public static string Wpjybh = @"WPJYBH";
			 public static string Cgkchs = @"CGKCHS";
			 public static string Kcschs = @"KCSCHS";
			 public static string Xtcllb = @"XTCLLB";
			 public static string Wpkzsl = @"WPKZSL";
			 public static string Xtqybz = @"XTQYBZ";
			 public static string Xttybz = @"XTTYBZ";
			 public static string Xtqyrq = @"XTQYRQ";
			 public static string Xttyrq = @"XTTYRQ";
			 public static string Wpkclb = @"WPKCLB";
			 public static string Kczdkc = @"KCZDKC";
			 public static string Kcaqkc = @"KCAQKC";
			 public static string Kcdhdl = @"KCDHDL";
			 public static string Kcrhfl = @"KCRHFL";
			 public static string Kcdhbc = @"KCDHBC";
			 public static string Kcpdzq = @"KCPDZQ";
			 public static string Kcpdwc = @"KCPDWC";
			 public static string Kcjyqx = @"KCJYQX";
			 public static string Xtzybz = @"XTZYBZ";
			 public static string Scgydm = @"SCGYDM";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
