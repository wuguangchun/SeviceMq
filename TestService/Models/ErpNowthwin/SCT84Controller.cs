using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
    /// <summary>
    /// Controller class for SCT84
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SCT84Controller
    {
        // Preload our schema..
        SCT84 thisSchemaLoad = new SCT84();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SCT84Collection FetchAll()
        {
            SCT84Collection coll = new SCT84Collection();
            Query qry = new Query(SCT84.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT84Collection FetchByID(object Sczxdh)
        {
            SCT84Collection coll = new SCT84Collection().Where("SCZXDH", Sczxdh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT84Collection FetchByQuery(Query qry)
        {
            SCT84Collection coll = new SCT84Collection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Sczxdh)
        {
            return (SCT84.Delete(Sczxdh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Sczxdh)
        {
            return (SCT84.Destroy(Sczxdh) == 1);
        }
        
        
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(string Sczxdh,decimal Sczxxh,string Xtwpdm)
        {
            Query qry = new Query(SCT84.Schema);
            qry.QueryType = QueryType.Delete;
            qry.AddWhere("Sczxdh", Sczxdh).AND("Sczxxh", Sczxxh).AND("Xtwpdm", Xtwpdm);
            qry.Execute();
            return (true);
        }        
       
    	
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Sczxdh,decimal Sczxxh,string Xtwpdm,decimal? Sczxsl,string Sczsbh,string Sczxbz,string Scjylb)
	    {
		    SCT84 item = new SCT84();
		    
            item.Sczxdh = Sczxdh;
            
            item.Sczxxh = Sczxxh;
            
            item.Xtwpdm = Xtwpdm;
            
            item.Sczxsl = Sczxsl;
            
            item.Sczsbh = Sczsbh;
            
            item.Sczxbz = Sczxbz;
            
            item.Scjylb = Scjylb;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string Sczxdh,decimal Sczxxh,string Xtwpdm,decimal? Sczxsl,string Sczsbh,string Sczxbz,string Scjylb)
	    {
		    SCT84 item = new SCT84();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Sczxdh = Sczxdh;
				
			item.Sczxxh = Sczxxh;
				
			item.Xtwpdm = Xtwpdm;
				
			item.Sczxsl = Sczxsl;
				
			item.Sczsbh = Sczsbh;
				
			item.Sczxbz = Sczxbz;
				
			item.Scjylb = Scjylb;
				
	        item.Save(UserName);
	    }
    }
}
