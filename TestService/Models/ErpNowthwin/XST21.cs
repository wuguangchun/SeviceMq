using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
	/// <summary>
	/// Strongly-typed collection for the XST21 class.
	/// </summary>
    [Serializable]
	public partial class XST21Collection : ActiveList<XST21, XST21Collection>
	{	   
		public XST21Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>XST21Collection</returns>
		public XST21Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                XST21 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XST21 table.
	/// </summary>
	[Serializable]
	public partial class XST21 : ActiveRecord<XST21>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public XST21()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public XST21(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public XST21(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public XST21(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XST21", TableType.Table, DataService.GetInstance("ErpNowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"FYERP";
				//columns
				
				TableSchema.TableColumn colvarXtwldm = new TableSchema.TableColumn(schema);
				colvarXtwldm.ColumnName = "XTWLDM";
				colvarXtwldm.DataType = DbType.String;
				colvarXtwldm.MaxLength = 8;
				colvarXtwldm.AutoIncrement = false;
				colvarXtwldm.IsNullable = false;
				colvarXtwldm.IsPrimaryKey = true;
				colvarXtwldm.IsForeignKey = false;
				colvarXtwldm.IsReadOnly = false;
				colvarXtwldm.DefaultSetting = @"";
				colvarXtwldm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwldm);
				
				TableSchema.TableColumn colvarXskjnd = new TableSchema.TableColumn(schema);
				colvarXskjnd.ColumnName = "XSKJND";
				colvarXskjnd.DataType = DbType.Decimal;
				colvarXskjnd.MaxLength = 0;
				colvarXskjnd.AutoIncrement = false;
				colvarXskjnd.IsNullable = false;
				colvarXskjnd.IsPrimaryKey = true;
				colvarXskjnd.IsForeignKey = false;
				colvarXskjnd.IsReadOnly = false;
				colvarXskjnd.DefaultSetting = @"";
				colvarXskjnd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskjnd);
				
				TableSchema.TableColumn colvarXskjyf = new TableSchema.TableColumn(schema);
				colvarXskjyf.ColumnName = "XSKJYF";
				colvarXskjyf.DataType = DbType.Decimal;
				colvarXskjyf.MaxLength = 0;
				colvarXskjyf.AutoIncrement = false;
				colvarXskjyf.IsNullable = false;
				colvarXskjyf.IsPrimaryKey = true;
				colvarXskjyf.IsForeignKey = false;
				colvarXskjyf.IsReadOnly = false;
				colvarXskjyf.DefaultSetting = @"";
				colvarXskjyf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXskjyf);
				
				TableSchema.TableColumn colvarXsysye = new TableSchema.TableColumn(schema);
				colvarXsysye.ColumnName = "XSYSYE";
				colvarXsysye.DataType = DbType.Decimal;
				colvarXsysye.MaxLength = 0;
				colvarXsysye.AutoIncrement = false;
				colvarXsysye.IsNullable = false;
				colvarXsysye.IsPrimaryKey = false;
				colvarXsysye.IsForeignKey = false;
				colvarXsysye.IsReadOnly = false;
				colvarXsysye.DefaultSetting = @"";
				colvarXsysye.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsysye);
				
				TableSchema.TableColumn colvarXsfcye = new TableSchema.TableColumn(schema);
				colvarXsfcye.ColumnName = "XSFCYE";
				colvarXsfcye.DataType = DbType.Decimal;
				colvarXsfcye.MaxLength = 0;
				colvarXsfcye.AutoIncrement = false;
				colvarXsfcye.IsNullable = false;
				colvarXsfcye.IsPrimaryKey = false;
				colvarXsfcye.IsForeignKey = false;
				colvarXsfcye.IsReadOnly = false;
				colvarXsfcye.DefaultSetting = @"";
				colvarXsfcye.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfcye);
				
				TableSchema.TableColumn colvarXsfcze = new TableSchema.TableColumn(schema);
				colvarXsfcze.ColumnName = "XSFCZE";
				colvarXsfcze.DataType = DbType.Decimal;
				colvarXsfcze.MaxLength = 0;
				colvarXsfcze.AutoIncrement = false;
				colvarXsfcze.IsNullable = false;
				colvarXsfcze.IsPrimaryKey = false;
				colvarXsfcze.IsForeignKey = false;
				colvarXsfcze.IsReadOnly = false;
				colvarXsfcze.DefaultSetting = @"";
				colvarXsfcze.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfcze);
				
				TableSchema.TableColumn colvarXsfpze = new TableSchema.TableColumn(schema);
				colvarXsfpze.ColumnName = "XSFPZE";
				colvarXsfpze.DataType = DbType.Decimal;
				colvarXsfpze.MaxLength = 0;
				colvarXsfpze.AutoIncrement = false;
				colvarXsfpze.IsNullable = false;
				colvarXsfpze.IsPrimaryKey = false;
				colvarXsfpze.IsForeignKey = false;
				colvarXsfpze.IsReadOnly = false;
				colvarXsfpze.DefaultSetting = @"";
				colvarXsfpze.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsfpze);
				
				TableSchema.TableColumn colvarXshkze = new TableSchema.TableColumn(schema);
				colvarXshkze.ColumnName = "XSHKZE";
				colvarXshkze.DataType = DbType.Decimal;
				colvarXshkze.MaxLength = 0;
				colvarXshkze.AutoIncrement = false;
				colvarXshkze.IsNullable = false;
				colvarXshkze.IsPrimaryKey = false;
				colvarXshkze.IsForeignKey = false;
				colvarXshkze.IsReadOnly = false;
				colvarXshkze.DefaultSetting = @"";
				colvarXshkze.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXshkze);
				
				TableSchema.TableColumn colvarXsdyxs = new TableSchema.TableColumn(schema);
				colvarXsdyxs.ColumnName = "XSDYXS";
				colvarXsdyxs.DataType = DbType.Decimal;
				colvarXsdyxs.MaxLength = 0;
				colvarXsdyxs.AutoIncrement = false;
				colvarXsdyxs.IsNullable = true;
				colvarXsdyxs.IsPrimaryKey = false;
				colvarXsdyxs.IsForeignKey = false;
				colvarXsdyxs.IsReadOnly = false;
				colvarXsdyxs.DefaultSetting = @"";
				colvarXsdyxs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsdyxs);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ErpNowthwin"].AddSchema("XST21",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Xtwldm")]
		[Bindable(true)]
		public string Xtwldm 
		{
			get { return GetColumnValue<string>(Columns.Xtwldm); }
			set { SetColumnValue(Columns.Xtwldm, value); }
		}
		  
		[XmlAttribute("Xskjnd")]
		[Bindable(true)]
		public decimal Xskjnd 
		{
			get { return GetColumnValue<decimal>(Columns.Xskjnd); }
			set { SetColumnValue(Columns.Xskjnd, value); }
		}
		  
		[XmlAttribute("Xskjyf")]
		[Bindable(true)]
		public decimal Xskjyf 
		{
			get { return GetColumnValue<decimal>(Columns.Xskjyf); }
			set { SetColumnValue(Columns.Xskjyf, value); }
		}
		  
		[XmlAttribute("Xsysye")]
		[Bindable(true)]
		public decimal Xsysye 
		{
			get { return GetColumnValue<decimal>(Columns.Xsysye); }
			set { SetColumnValue(Columns.Xsysye, value); }
		}
		  
		[XmlAttribute("Xsfcye")]
		[Bindable(true)]
		public decimal Xsfcye 
		{
			get { return GetColumnValue<decimal>(Columns.Xsfcye); }
			set { SetColumnValue(Columns.Xsfcye, value); }
		}
		  
		[XmlAttribute("Xsfcze")]
		[Bindable(true)]
		public decimal Xsfcze 
		{
			get { return GetColumnValue<decimal>(Columns.Xsfcze); }
			set { SetColumnValue(Columns.Xsfcze, value); }
		}
		  
		[XmlAttribute("Xsfpze")]
		[Bindable(true)]
		public decimal Xsfpze 
		{
			get { return GetColumnValue<decimal>(Columns.Xsfpze); }
			set { SetColumnValue(Columns.Xsfpze, value); }
		}
		  
		[XmlAttribute("Xshkze")]
		[Bindable(true)]
		public decimal Xshkze 
		{
			get { return GetColumnValue<decimal>(Columns.Xshkze); }
			set { SetColumnValue(Columns.Xshkze, value); }
		}
		  
		[XmlAttribute("Xsdyxs")]
		[Bindable(true)]
		public decimal? Xsdyxs 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsdyxs); }
			set { SetColumnValue(Columns.Xsdyxs, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varXtwldm,decimal varXskjnd,decimal varXskjyf,decimal varXsysye,decimal varXsfcye,decimal varXsfcze,decimal varXsfpze,decimal varXshkze,decimal? varXsdyxs)
		{
			XST21 item = new XST21();
			
			item.Xtwldm = varXtwldm;
			
			item.Xskjnd = varXskjnd;
			
			item.Xskjyf = varXskjyf;
			
			item.Xsysye = varXsysye;
			
			item.Xsfcye = varXsfcye;
			
			item.Xsfcze = varXsfcze;
			
			item.Xsfpze = varXsfpze;
			
			item.Xshkze = varXshkze;
			
			item.Xsdyxs = varXsdyxs;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varXtwldm,decimal varXskjnd,decimal varXskjyf,decimal varXsysye,decimal varXsfcye,decimal varXsfcze,decimal varXsfpze,decimal varXshkze,decimal? varXsdyxs)
		{
			XST21 item = new XST21();
			
				item.Xtwldm = varXtwldm;
			
				item.Xskjnd = varXskjnd;
			
				item.Xskjyf = varXskjyf;
			
				item.Xsysye = varXsysye;
			
				item.Xsfcye = varXsfcye;
			
				item.Xsfcze = varXsfcze;
			
				item.Xsfpze = varXsfpze;
			
				item.Xshkze = varXshkze;
			
				item.Xsdyxs = varXsdyxs;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn XtwldmColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn XskjndColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn XskjyfColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn XsysyeColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfcyeColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfczeColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn XsfpzeColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn XshkzeColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XsdyxsColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Xtwldm = @"XTWLDM";
			 public static string Xskjnd = @"XSKJND";
			 public static string Xskjyf = @"XSKJYF";
			 public static string Xsysye = @"XSYSYE";
			 public static string Xsfcye = @"XSFCYE";
			 public static string Xsfcze = @"XSFCZE";
			 public static string Xsfpze = @"XSFPZE";
			 public static string Xshkze = @"XSHKZE";
			 public static string Xsdyxs = @"XSDYXS";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
