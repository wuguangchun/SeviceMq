using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
	/// <summary>
	/// Strongly-typed collection for the XTT01 class.
	/// </summary>
    [Serializable]
	public partial class XTT01Collection : ActiveList<XTT01, XTT01Collection>
	{	   
		public XTT01Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>XTT01Collection</returns>
		public XTT01Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                XTT01 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XTT01 table.
	/// </summary>
	[Serializable]
	public partial class XTT01 : ActiveRecord<XTT01>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public XTT01()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public XTT01(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public XTT01(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public XTT01(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XTT01", TableType.Table, DataService.GetInstance("ErpNowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"FYERP";
				//columns
				
				TableSchema.TableColumn colvarXtkjnd = new TableSchema.TableColumn(schema);
				colvarXtkjnd.ColumnName = "XTKJND";
				colvarXtkjnd.DataType = DbType.Decimal;
				colvarXtkjnd.MaxLength = 0;
				colvarXtkjnd.AutoIncrement = false;
				colvarXtkjnd.IsNullable = false;
				colvarXtkjnd.IsPrimaryKey = true;
				colvarXtkjnd.IsForeignKey = false;
				colvarXtkjnd.IsReadOnly = false;
				colvarXtkjnd.DefaultSetting = @"";
				colvarXtkjnd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkjnd);
				
				TableSchema.TableColumn colvarXtkjyf = new TableSchema.TableColumn(schema);
				colvarXtkjyf.ColumnName = "XTKJYF";
				colvarXtkjyf.DataType = DbType.Decimal;
				colvarXtkjyf.MaxLength = 0;
				colvarXtkjyf.AutoIncrement = false;
				colvarXtkjyf.IsNullable = false;
				colvarXtkjyf.IsPrimaryKey = true;
				colvarXtkjyf.IsForeignKey = false;
				colvarXtkjyf.IsReadOnly = false;
				colvarXtkjyf.DefaultSetting = @"";
				colvarXtkjyf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkjyf);
				
				TableSchema.TableColumn colvarXsxyth = new TableSchema.TableColumn(schema);
				colvarXsxyth.ColumnName = "XSXYTH";
				colvarXsxyth.DataType = DbType.Decimal;
				colvarXsxyth.MaxLength = 0;
				colvarXsxyth.AutoIncrement = false;
				colvarXsxyth.IsNullable = true;
				colvarXsxyth.IsPrimaryKey = false;
				colvarXsxyth.IsForeignKey = false;
				colvarXsxyth.IsReadOnly = false;
				colvarXsxyth.DefaultSetting = @"";
				colvarXsxyth.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsxyth);
				
				TableSchema.TableColumn colvarXsxyfp = new TableSchema.TableColumn(schema);
				colvarXsxyfp.ColumnName = "XSXYFP";
				colvarXsxyfp.DataType = DbType.Decimal;
				colvarXsxyfp.MaxLength = 0;
				colvarXsxyfp.AutoIncrement = false;
				colvarXsxyfp.IsNullable = true;
				colvarXsxyfp.IsPrimaryKey = false;
				colvarXsxyfp.IsForeignKey = false;
				colvarXsxyfp.IsReadOnly = false;
				colvarXsxyfp.DefaultSetting = @"";
				colvarXsxyfp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsxyfp);
				
				TableSchema.TableColumn colvarCgxysh = new TableSchema.TableColumn(schema);
				colvarCgxysh.ColumnName = "CGXYSH";
				colvarCgxysh.DataType = DbType.Decimal;
				colvarCgxysh.MaxLength = 0;
				colvarCgxysh.AutoIncrement = false;
				colvarCgxysh.IsNullable = true;
				colvarCgxysh.IsPrimaryKey = false;
				colvarCgxysh.IsForeignKey = false;
				colvarCgxysh.IsReadOnly = false;
				colvarCgxysh.DefaultSetting = @"";
				colvarCgxysh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgxysh);
				
				TableSchema.TableColumn colvarCgxyfp = new TableSchema.TableColumn(schema);
				colvarCgxyfp.ColumnName = "CGXYFP";
				colvarCgxyfp.DataType = DbType.Decimal;
				colvarCgxyfp.MaxLength = 0;
				colvarCgxyfp.AutoIncrement = false;
				colvarCgxyfp.IsNullable = true;
				colvarCgxyfp.IsPrimaryKey = false;
				colvarCgxyfp.IsForeignKey = false;
				colvarCgxyfp.IsReadOnly = false;
				colvarCgxyfp.DefaultSetting = @"";
				colvarCgxyfp.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgxyfp);
				
				TableSchema.TableColumn colvarXsxyhk = new TableSchema.TableColumn(schema);
				colvarXsxyhk.ColumnName = "XSXYHK";
				colvarXsxyhk.DataType = DbType.Decimal;
				colvarXsxyhk.MaxLength = 0;
				colvarXsxyhk.AutoIncrement = false;
				colvarXsxyhk.IsNullable = true;
				colvarXsxyhk.IsPrimaryKey = false;
				colvarXsxyhk.IsForeignKey = false;
				colvarXsxyhk.IsReadOnly = false;
				colvarXsxyhk.DefaultSetting = @"";
				colvarXsxyhk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsxyhk);
				
				TableSchema.TableColumn colvarXsxyyh = new TableSchema.TableColumn(schema);
				colvarXsxyyh.ColumnName = "XSXYYH";
				colvarXsxyyh.DataType = DbType.Decimal;
				colvarXsxyyh.MaxLength = 0;
				colvarXsxyyh.AutoIncrement = false;
				colvarXsxyyh.IsNullable = true;
				colvarXsxyyh.IsPrimaryKey = false;
				colvarXsxyyh.IsForeignKey = false;
				colvarXsxyyh.IsReadOnly = false;
				colvarXsxyyh.DefaultSetting = @"";
				colvarXsxyyh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsxyyh);
				
				TableSchema.TableColumn colvarXsyxph = new TableSchema.TableColumn(schema);
				colvarXsyxph.ColumnName = "XSYXPH";
				colvarXsyxph.DataType = DbType.Decimal;
				colvarXsyxph.MaxLength = 0;
				colvarXsyxph.AutoIncrement = false;
				colvarXsyxph.IsNullable = true;
				colvarXsyxph.IsPrimaryKey = false;
				colvarXsyxph.IsForeignKey = false;
				colvarXsyxph.IsReadOnly = false;
				colvarXsyxph.DefaultSetting = @"";
				colvarXsyxph.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsyxph);
				
				TableSchema.TableColumn colvarCgxyfk = new TableSchema.TableColumn(schema);
				colvarCgxyfk.ColumnName = "CGXYFK";
				colvarCgxyfk.DataType = DbType.Decimal;
				colvarCgxyfk.MaxLength = 0;
				colvarCgxyfk.AutoIncrement = false;
				colvarCgxyfk.IsNullable = true;
				colvarCgxyfk.IsPrimaryKey = false;
				colvarCgxyfk.IsForeignKey = false;
				colvarCgxyfk.IsReadOnly = false;
				colvarCgxyfk.DefaultSetting = @"";
				colvarCgxyfk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgxyfk);
				
				TableSchema.TableColumn colvarKcxyxh = new TableSchema.TableColumn(schema);
				colvarKcxyxh.ColumnName = "KCXYXH";
				colvarKcxyxh.DataType = DbType.Decimal;
				colvarKcxyxh.MaxLength = 0;
				colvarKcxyxh.AutoIncrement = false;
				colvarKcxyxh.IsNullable = true;
				colvarKcxyxh.IsPrimaryKey = false;
				colvarKcxyxh.IsForeignKey = false;
				colvarKcxyxh.IsReadOnly = false;
				colvarKcxyxh.DefaultSetting = @"";
				colvarKcxyxh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKcxyxh);
				
				TableSchema.TableColumn colvarDxxyth = new TableSchema.TableColumn(schema);
				colvarDxxyth.ColumnName = "DXXYTH";
				colvarDxxyth.DataType = DbType.Decimal;
				colvarDxxyth.MaxLength = 0;
				colvarDxxyth.AutoIncrement = false;
				colvarDxxyth.IsNullable = true;
				colvarDxxyth.IsPrimaryKey = false;
				colvarDxxyth.IsForeignKey = false;
				colvarDxxyth.IsReadOnly = false;
				colvarDxxyth.DefaultSetting = @"";
				colvarDxxyth.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDxxyth);
				
				TableSchema.TableColumn colvarXsxydd = new TableSchema.TableColumn(schema);
				colvarXsxydd.ColumnName = "XSXYDD";
				colvarXsxydd.DataType = DbType.Decimal;
				colvarXsxydd.MaxLength = 0;
				colvarXsxydd.AutoIncrement = false;
				colvarXsxydd.IsNullable = true;
				colvarXsxydd.IsPrimaryKey = false;
				colvarXsxydd.IsForeignKey = false;
				colvarXsxydd.IsReadOnly = false;
				colvarXsxydd.DefaultSetting = @"";
				colvarXsxydd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXsxydd);
				
				TableSchema.TableColumn colvarScddxh = new TableSchema.TableColumn(schema);
				colvarScddxh.ColumnName = "SCDDXH";
				colvarScddxh.DataType = DbType.Decimal;
				colvarScddxh.MaxLength = 0;
				colvarScddxh.AutoIncrement = false;
				colvarScddxh.IsNullable = true;
				colvarScddxh.IsPrimaryKey = false;
				colvarScddxh.IsForeignKey = false;
				colvarScddxh.IsReadOnly = false;
				colvarScddxh.DefaultSetting = @"";
				colvarScddxh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScddxh);
				
				TableSchema.TableColumn colvarScttxh = new TableSchema.TableColumn(schema);
				colvarScttxh.ColumnName = "SCTTXH";
				colvarScttxh.DataType = DbType.Decimal;
				colvarScttxh.MaxLength = 0;
				colvarScttxh.AutoIncrement = false;
				colvarScttxh.IsNullable = true;
				colvarScttxh.IsPrimaryKey = false;
				colvarScttxh.IsForeignKey = false;
				colvarScttxh.IsReadOnly = false;
				colvarScttxh.DefaultSetting = @"";
				colvarScttxh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScttxh);
				
				TableSchema.TableColumn colvarScdtxh = new TableSchema.TableColumn(schema);
				colvarScdtxh.ColumnName = "SCDTXH";
				colvarScdtxh.DataType = DbType.Decimal;
				colvarScdtxh.MaxLength = 0;
				colvarScdtxh.AutoIncrement = false;
				colvarScdtxh.IsNullable = true;
				colvarScdtxh.IsPrimaryKey = false;
				colvarScdtxh.IsForeignKey = false;
				colvarScdtxh.IsReadOnly = false;
				colvarScdtxh.DefaultSetting = @"";
				colvarScdtxh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScdtxh);
				
				TableSchema.TableColumn colvarScggxh = new TableSchema.TableColumn(schema);
				colvarScggxh.ColumnName = "SCGGXH";
				colvarScggxh.DataType = DbType.Decimal;
				colvarScggxh.MaxLength = 0;
				colvarScggxh.AutoIncrement = false;
				colvarScggxh.IsNullable = true;
				colvarScggxh.IsPrimaryKey = false;
				colvarScggxh.IsForeignKey = false;
				colvarScggxh.IsReadOnly = false;
				colvarScggxh.DefaultSetting = @"";
				colvarScggxh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScggxh);
				
				TableSchema.TableColumn colvarCgxydd = new TableSchema.TableColumn(schema);
				colvarCgxydd.ColumnName = "CGXYDD";
				colvarCgxydd.DataType = DbType.Decimal;
				colvarCgxydd.MaxLength = 0;
				colvarCgxydd.AutoIncrement = false;
				colvarCgxydd.IsNullable = true;
				colvarCgxydd.IsPrimaryKey = false;
				colvarCgxydd.IsForeignKey = false;
				colvarCgxydd.IsReadOnly = false;
				colvarCgxydd.DefaultSetting = @"";
				colvarCgxydd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCgxydd);
				
				TableSchema.TableColumn colvarScxyjh = new TableSchema.TableColumn(schema);
				colvarScxyjh.ColumnName = "SCXYJH";
				colvarScxyjh.DataType = DbType.Decimal;
				colvarScxyjh.MaxLength = 0;
				colvarScxyjh.AutoIncrement = false;
				colvarScxyjh.IsNullable = true;
				colvarScxyjh.IsPrimaryKey = false;
				colvarScxyjh.IsForeignKey = false;
				colvarScxyjh.IsReadOnly = false;
				colvarScxyjh.DefaultSetting = @"";
				colvarScxyjh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScxyjh);
				
				TableSchema.TableColumn colvarScxysf = new TableSchema.TableColumn(schema);
				colvarScxysf.ColumnName = "SCXYSF";
				colvarScxysf.DataType = DbType.Decimal;
				colvarScxysf.MaxLength = 0;
				colvarScxysf.AutoIncrement = false;
				colvarScxysf.IsNullable = true;
				colvarScxysf.IsPrimaryKey = false;
				colvarScxysf.IsForeignKey = false;
				colvarScxysf.IsReadOnly = false;
				colvarScxysf.DefaultSetting = @"";
				colvarScxysf.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScxysf);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ErpNowthwin"].AddSchema("XTT01",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Xtkjnd")]
		[Bindable(true)]
		public decimal Xtkjnd 
		{
			get { return GetColumnValue<decimal>(Columns.Xtkjnd); }
			set { SetColumnValue(Columns.Xtkjnd, value); }
		}
		  
		[XmlAttribute("Xtkjyf")]
		[Bindable(true)]
		public decimal Xtkjyf 
		{
			get { return GetColumnValue<decimal>(Columns.Xtkjyf); }
			set { SetColumnValue(Columns.Xtkjyf, value); }
		}
		  
		[XmlAttribute("Xsxyth")]
		[Bindable(true)]
		public decimal? Xsxyth 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsxyth); }
			set { SetColumnValue(Columns.Xsxyth, value); }
		}
		  
		[XmlAttribute("Xsxyfp")]
		[Bindable(true)]
		public decimal? Xsxyfp 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsxyfp); }
			set { SetColumnValue(Columns.Xsxyfp, value); }
		}
		  
		[XmlAttribute("Cgxysh")]
		[Bindable(true)]
		public decimal? Cgxysh 
		{
			get { return GetColumnValue<decimal?>(Columns.Cgxysh); }
			set { SetColumnValue(Columns.Cgxysh, value); }
		}
		  
		[XmlAttribute("Cgxyfp")]
		[Bindable(true)]
		public decimal? Cgxyfp 
		{
			get { return GetColumnValue<decimal?>(Columns.Cgxyfp); }
			set { SetColumnValue(Columns.Cgxyfp, value); }
		}
		  
		[XmlAttribute("Xsxyhk")]
		[Bindable(true)]
		public decimal? Xsxyhk 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsxyhk); }
			set { SetColumnValue(Columns.Xsxyhk, value); }
		}
		  
		[XmlAttribute("Xsxyyh")]
		[Bindable(true)]
		public decimal? Xsxyyh 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsxyyh); }
			set { SetColumnValue(Columns.Xsxyyh, value); }
		}
		  
		[XmlAttribute("Xsyxph")]
		[Bindable(true)]
		public decimal? Xsyxph 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsyxph); }
			set { SetColumnValue(Columns.Xsyxph, value); }
		}
		  
		[XmlAttribute("Cgxyfk")]
		[Bindable(true)]
		public decimal? Cgxyfk 
		{
			get { return GetColumnValue<decimal?>(Columns.Cgxyfk); }
			set { SetColumnValue(Columns.Cgxyfk, value); }
		}
		  
		[XmlAttribute("Kcxyxh")]
		[Bindable(true)]
		public decimal? Kcxyxh 
		{
			get { return GetColumnValue<decimal?>(Columns.Kcxyxh); }
			set { SetColumnValue(Columns.Kcxyxh, value); }
		}
		  
		[XmlAttribute("Dxxyth")]
		[Bindable(true)]
		public decimal? Dxxyth 
		{
			get { return GetColumnValue<decimal?>(Columns.Dxxyth); }
			set { SetColumnValue(Columns.Dxxyth, value); }
		}
		  
		[XmlAttribute("Xsxydd")]
		[Bindable(true)]
		public decimal? Xsxydd 
		{
			get { return GetColumnValue<decimal?>(Columns.Xsxydd); }
			set { SetColumnValue(Columns.Xsxydd, value); }
		}
		  
		[XmlAttribute("Scddxh")]
		[Bindable(true)]
		public decimal? Scddxh 
		{
			get { return GetColumnValue<decimal?>(Columns.Scddxh); }
			set { SetColumnValue(Columns.Scddxh, value); }
		}
		  
		[XmlAttribute("Scttxh")]
		[Bindable(true)]
		public decimal? Scttxh 
		{
			get { return GetColumnValue<decimal?>(Columns.Scttxh); }
			set { SetColumnValue(Columns.Scttxh, value); }
		}
		  
		[XmlAttribute("Scdtxh")]
		[Bindable(true)]
		public decimal? Scdtxh 
		{
			get { return GetColumnValue<decimal?>(Columns.Scdtxh); }
			set { SetColumnValue(Columns.Scdtxh, value); }
		}
		  
		[XmlAttribute("Scggxh")]
		[Bindable(true)]
		public decimal? Scggxh 
		{
			get { return GetColumnValue<decimal?>(Columns.Scggxh); }
			set { SetColumnValue(Columns.Scggxh, value); }
		}
		  
		[XmlAttribute("Cgxydd")]
		[Bindable(true)]
		public decimal? Cgxydd 
		{
			get { return GetColumnValue<decimal?>(Columns.Cgxydd); }
			set { SetColumnValue(Columns.Cgxydd, value); }
		}
		  
		[XmlAttribute("Scxyjh")]
		[Bindable(true)]
		public decimal? Scxyjh 
		{
			get { return GetColumnValue<decimal?>(Columns.Scxyjh); }
			set { SetColumnValue(Columns.Scxyjh, value); }
		}
		  
		[XmlAttribute("Scxysf")]
		[Bindable(true)]
		public decimal? Scxysf 
		{
			get { return GetColumnValue<decimal?>(Columns.Scxysf); }
			set { SetColumnValue(Columns.Scxysf, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(decimal varXtkjnd,decimal varXtkjyf,decimal? varXsxyth,decimal? varXsxyfp,decimal? varCgxysh,decimal? varCgxyfp,decimal? varXsxyhk,decimal? varXsxyyh,decimal? varXsyxph,decimal? varCgxyfk,decimal? varKcxyxh,decimal? varDxxyth,decimal? varXsxydd,decimal? varScddxh,decimal? varScttxh,decimal? varScdtxh,decimal? varScggxh,decimal? varCgxydd,decimal? varScxyjh,decimal? varScxysf)
		{
			XTT01 item = new XTT01();
			
			item.Xtkjnd = varXtkjnd;
			
			item.Xtkjyf = varXtkjyf;
			
			item.Xsxyth = varXsxyth;
			
			item.Xsxyfp = varXsxyfp;
			
			item.Cgxysh = varCgxysh;
			
			item.Cgxyfp = varCgxyfp;
			
			item.Xsxyhk = varXsxyhk;
			
			item.Xsxyyh = varXsxyyh;
			
			item.Xsyxph = varXsyxph;
			
			item.Cgxyfk = varCgxyfk;
			
			item.Kcxyxh = varKcxyxh;
			
			item.Dxxyth = varDxxyth;
			
			item.Xsxydd = varXsxydd;
			
			item.Scddxh = varScddxh;
			
			item.Scttxh = varScttxh;
			
			item.Scdtxh = varScdtxh;
			
			item.Scggxh = varScggxh;
			
			item.Cgxydd = varCgxydd;
			
			item.Scxyjh = varScxyjh;
			
			item.Scxysf = varScxysf;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(decimal varXtkjnd,decimal varXtkjyf,decimal? varXsxyth,decimal? varXsxyfp,decimal? varCgxysh,decimal? varCgxyfp,decimal? varXsxyhk,decimal? varXsxyyh,decimal? varXsyxph,decimal? varCgxyfk,decimal? varKcxyxh,decimal? varDxxyth,decimal? varXsxydd,decimal? varScddxh,decimal? varScttxh,decimal? varScdtxh,decimal? varScggxh,decimal? varCgxydd,decimal? varScxyjh,decimal? varScxysf)
		{
			XTT01 item = new XTT01();
			
				item.Xtkjnd = varXtkjnd;
			
				item.Xtkjyf = varXtkjyf;
			
				item.Xsxyth = varXsxyth;
			
				item.Xsxyfp = varXsxyfp;
			
				item.Cgxysh = varCgxysh;
			
				item.Cgxyfp = varCgxyfp;
			
				item.Xsxyhk = varXsxyhk;
			
				item.Xsxyyh = varXsxyyh;
			
				item.Xsyxph = varXsyxph;
			
				item.Cgxyfk = varCgxyfk;
			
				item.Kcxyxh = varKcxyxh;
			
				item.Dxxyth = varDxxyth;
			
				item.Xsxydd = varXsxydd;
			
				item.Scddxh = varScddxh;
			
				item.Scttxh = varScttxh;
			
				item.Scdtxh = varScdtxh;
			
				item.Scggxh = varScggxh;
			
				item.Cgxydd = varCgxydd;
			
				item.Scxyjh = varScxyjh;
			
				item.Scxysf = varScxysf;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn XtkjndColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkjyfColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn XsxythColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn XsxyfpColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CgxyshColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn CgxyfpColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn XsxyhkColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn XsxyyhColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XsyxphColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CgxyfkColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn KcxyxhColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn DxxythColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn XsxyddColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn ScddxhColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ScttxhColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn ScdtxhColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn ScggxhColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn CgxyddColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn ScxyjhColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn ScxysfColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Xtkjnd = @"XTKJND";
			 public static string Xtkjyf = @"XTKJYF";
			 public static string Xsxyth = @"XSXYTH";
			 public static string Xsxyfp = @"XSXYFP";
			 public static string Cgxysh = @"CGXYSH";
			 public static string Cgxyfp = @"CGXYFP";
			 public static string Xsxyhk = @"XSXYHK";
			 public static string Xsxyyh = @"XSXYYH";
			 public static string Xsyxph = @"XSYXPH";
			 public static string Cgxyfk = @"CGXYFK";
			 public static string Kcxyxh = @"KCXYXH";
			 public static string Dxxyth = @"DXXYTH";
			 public static string Xsxydd = @"XSXYDD";
			 public static string Scddxh = @"SCDDXH";
			 public static string Scttxh = @"SCTTXH";
			 public static string Scdtxh = @"SCDTXH";
			 public static string Scggxh = @"SCGGXH";
			 public static string Cgxydd = @"CGXYDD";
			 public static string Scxyjh = @"SCXYJH";
			 public static string Scxysf = @"SCXYSF";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
