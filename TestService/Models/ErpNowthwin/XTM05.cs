using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain
{
	/// <summary>
	/// Strongly-typed collection for the XTM05 class.
	/// </summary>
    [Serializable]
	public partial class XTM05Collection : ActiveList<XTM05, XTM05Collection>
	{	   
		public XTM05Collection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>XTM05Collection</returns>
		public XTM05Collection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                XTM05 o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the XTM05 table.
	/// </summary>
	[Serializable]
	public partial class XTM05 : ActiveRecord<XTM05>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public XTM05()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public XTM05(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public XTM05(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public XTM05(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("XTM05", TableType.Table, DataService.GetInstance("ErpNowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"FYERP";
				//columns
				
				TableSchema.TableColumn colvarXtscrk = new TableSchema.TableColumn(schema);
				colvarXtscrk.ColumnName = "XTSCRK";
				colvarXtscrk.DataType = DbType.String;
				colvarXtscrk.MaxLength = 6;
				colvarXtscrk.AutoIncrement = false;
				colvarXtscrk.IsNullable = true;
				colvarXtscrk.IsPrimaryKey = false;
				colvarXtscrk.IsForeignKey = false;
				colvarXtscrk.IsReadOnly = false;
				colvarXtscrk.DefaultSetting = @"";
				colvarXtscrk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtscrk);
				
				TableSchema.TableColumn colvarXtcgrk = new TableSchema.TableColumn(schema);
				colvarXtcgrk.ColumnName = "XTCGRK";
				colvarXtcgrk.DataType = DbType.String;
				colvarXtcgrk.MaxLength = 6;
				colvarXtcgrk.AutoIncrement = false;
				colvarXtcgrk.IsNullable = true;
				colvarXtcgrk.IsPrimaryKey = false;
				colvarXtcgrk.IsForeignKey = false;
				colvarXtcgrk.IsReadOnly = false;
				colvarXtcgrk.DefaultSetting = @"";
				colvarXtcgrk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtcgrk);
				
				TableSchema.TableColumn colvarXtjxck = new TableSchema.TableColumn(schema);
				colvarXtjxck.ColumnName = "XTJXCK";
				colvarXtjxck.DataType = DbType.String;
				colvarXtjxck.MaxLength = 6;
				colvarXtjxck.AutoIncrement = false;
				colvarXtjxck.IsNullable = true;
				colvarXtjxck.IsPrimaryKey = false;
				colvarXtjxck.IsForeignKey = false;
				colvarXtjxck.IsReadOnly = false;
				colvarXtjxck.DefaultSetting = @"";
				colvarXtjxck.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtjxck);
				
				TableSchema.TableColumn colvarXtjxfk = new TableSchema.TableColumn(schema);
				colvarXtjxfk.ColumnName = "XTJXFK";
				colvarXtjxfk.DataType = DbType.String;
				colvarXtjxfk.MaxLength = 6;
				colvarXtjxfk.AutoIncrement = false;
				colvarXtjxfk.IsNullable = true;
				colvarXtjxfk.IsPrimaryKey = false;
				colvarXtjxfk.IsForeignKey = false;
				colvarXtjxfk.IsReadOnly = false;
				colvarXtjxfk.DefaultSetting = @"";
				colvarXtjxfk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtjxfk);
				
				TableSchema.TableColumn colvarXtrbck = new TableSchema.TableColumn(schema);
				colvarXtrbck.ColumnName = "XTRBCK";
				colvarXtrbck.DataType = DbType.String;
				colvarXtrbck.MaxLength = 6;
				colvarXtrbck.AutoIncrement = false;
				colvarXtrbck.IsNullable = true;
				colvarXtrbck.IsPrimaryKey = false;
				colvarXtrbck.IsForeignKey = false;
				colvarXtrbck.IsReadOnly = false;
				colvarXtrbck.DefaultSetting = @"";
				colvarXtrbck.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtrbck);
				
				TableSchema.TableColumn colvarXtbmth = new TableSchema.TableColumn(schema);
				colvarXtbmth.ColumnName = "XTBMTH";
				colvarXtbmth.DataType = DbType.String;
				colvarXtbmth.MaxLength = 6;
				colvarXtbmth.AutoIncrement = false;
				colvarXtbmth.IsNullable = true;
				colvarXtbmth.IsPrimaryKey = false;
				colvarXtbmth.IsForeignKey = false;
				colvarXtbmth.IsReadOnly = false;
				colvarXtbmth.DefaultSetting = @"";
				colvarXtbmth.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbmth);
				
				TableSchema.TableColumn colvarXtbmsh = new TableSchema.TableColumn(schema);
				colvarXtbmsh.ColumnName = "XTBMSH";
				colvarXtbmsh.DataType = DbType.String;
				colvarXtbmsh.MaxLength = 6;
				colvarXtbmsh.AutoIncrement = false;
				colvarXtbmsh.IsNullable = true;
				colvarXtbmsh.IsPrimaryKey = false;
				colvarXtbmsh.IsForeignKey = false;
				colvarXtbmsh.IsReadOnly = false;
				colvarXtbmsh.DefaultSetting = @"";
				colvarXtbmsh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbmsh);
				
				TableSchema.TableColumn colvarXtbmrh = new TableSchema.TableColumn(schema);
				colvarXtbmrh.ColumnName = "XTBMRH";
				colvarXtbmrh.DataType = DbType.String;
				colvarXtbmrh.MaxLength = 6;
				colvarXtbmrh.AutoIncrement = false;
				colvarXtbmrh.IsNullable = true;
				colvarXtbmrh.IsPrimaryKey = false;
				colvarXtbmrh.IsForeignKey = false;
				colvarXtbmrh.IsReadOnly = false;
				colvarXtbmrh.DefaultSetting = @"";
				colvarXtbmrh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbmrh);
				
				TableSchema.TableColumn colvarXtbmfk = new TableSchema.TableColumn(schema);
				colvarXtbmfk.ColumnName = "XTBMFK";
				colvarXtbmfk.DataType = DbType.String;
				colvarXtbmfk.MaxLength = 6;
				colvarXtbmfk.AutoIncrement = false;
				colvarXtbmfk.IsNullable = true;
				colvarXtbmfk.IsPrimaryKey = false;
				colvarXtbmfk.IsForeignKey = false;
				colvarXtbmfk.IsReadOnly = false;
				colvarXtbmfk.DefaultSetting = @"";
				colvarXtbmfk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbmfk);
				
				TableSchema.TableColumn colvarXtscth = new TableSchema.TableColumn(schema);
				colvarXtscth.ColumnName = "XTSCTH";
				colvarXtscth.DataType = DbType.String;
				colvarXtscth.MaxLength = 6;
				colvarXtscth.AutoIncrement = false;
				colvarXtscth.IsNullable = true;
				colvarXtscth.IsPrimaryKey = false;
				colvarXtscth.IsForeignKey = false;
				colvarXtscth.IsReadOnly = false;
				colvarXtscth.DefaultSetting = @"";
				colvarXtscth.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtscth);
				
				TableSchema.TableColumn colvarXtscsh = new TableSchema.TableColumn(schema);
				colvarXtscsh.ColumnName = "XTSCSH";
				colvarXtscsh.DataType = DbType.String;
				colvarXtscsh.MaxLength = 6;
				colvarXtscsh.AutoIncrement = false;
				colvarXtscsh.IsNullable = true;
				colvarXtscsh.IsPrimaryKey = false;
				colvarXtscsh.IsForeignKey = false;
				colvarXtscsh.IsReadOnly = false;
				colvarXtscsh.DefaultSetting = @"";
				colvarXtscsh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtscsh);
				
				TableSchema.TableColumn colvarXtscrh = new TableSchema.TableColumn(schema);
				colvarXtscrh.ColumnName = "XTSCRH";
				colvarXtscrh.DataType = DbType.String;
				colvarXtscrh.MaxLength = 6;
				colvarXtscrh.AutoIncrement = false;
				colvarXtscrh.IsNullable = true;
				colvarXtscrh.IsPrimaryKey = false;
				colvarXtscrh.IsForeignKey = false;
				colvarXtscrh.IsReadOnly = false;
				colvarXtscrh.DefaultSetting = @"";
				colvarXtscrh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtscrh);
				
				TableSchema.TableColumn colvarXtscfk = new TableSchema.TableColumn(schema);
				colvarXtscfk.ColumnName = "XTSCFK";
				colvarXtscfk.DataType = DbType.String;
				colvarXtscfk.MaxLength = 6;
				colvarXtscfk.AutoIncrement = false;
				colvarXtscfk.IsNullable = true;
				colvarXtscfk.IsPrimaryKey = false;
				colvarXtscfk.IsForeignKey = false;
				colvarXtscfk.IsReadOnly = false;
				colvarXtscfk.DefaultSetting = @"";
				colvarXtscfk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtscfk);
				
				TableSchema.TableColumn colvarXtpkcz = new TableSchema.TableColumn(schema);
				colvarXtpkcz.ColumnName = "XTPKCZ";
				colvarXtpkcz.DataType = DbType.String;
				colvarXtpkcz.MaxLength = 6;
				colvarXtpkcz.AutoIncrement = false;
				colvarXtpkcz.IsNullable = true;
				colvarXtpkcz.IsPrimaryKey = false;
				colvarXtpkcz.IsForeignKey = false;
				colvarXtpkcz.IsReadOnly = false;
				colvarXtpkcz.DefaultSetting = @"";
				colvarXtpkcz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtpkcz);
				
				TableSchema.TableColumn colvarXtlogo = new TableSchema.TableColumn(schema);
				colvarXtlogo.ColumnName = "XTLOGO";
				colvarXtlogo.DataType = DbType.String;
				colvarXtlogo.MaxLength = 100;
				colvarXtlogo.AutoIncrement = false;
				colvarXtlogo.IsNullable = true;
				colvarXtlogo.IsPrimaryKey = false;
				colvarXtlogo.IsForeignKey = false;
				colvarXtlogo.IsReadOnly = false;
				colvarXtlogo.DefaultSetting = @"";
				colvarXtlogo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtlogo);
				
				TableSchema.TableColumn colvarClhsff = new TableSchema.TableColumn(schema);
				colvarClhsff.ColumnName = "CLHSFF";
				colvarClhsff.DataType = DbType.String;
				colvarClhsff.MaxLength = 1;
				colvarClhsff.AutoIncrement = false;
				colvarClhsff.IsNullable = true;
				colvarClhsff.IsPrimaryKey = false;
				colvarClhsff.IsForeignKey = false;
				colvarClhsff.IsReadOnly = false;
				colvarClhsff.DefaultSetting = @"";
				colvarClhsff.ForeignKeyTableName = "";
				schema.Columns.Add(colvarClhsff);
				
				TableSchema.TableColumn colvarClwpje = new TableSchema.TableColumn(schema);
				colvarClwpje.ColumnName = "CLWPJE";
				colvarClwpje.DataType = DbType.String;
				colvarClwpje.MaxLength = 1;
				colvarClwpje.AutoIncrement = false;
				colvarClwpje.IsNullable = true;
				colvarClwpje.IsPrimaryKey = false;
				colvarClwpje.IsForeignKey = false;
				colvarClwpje.IsReadOnly = false;
				colvarClwpje.DefaultSetting = @"";
				colvarClwpje.ForeignKeyTableName = "";
				schema.Columns.Add(colvarClwpje);
				
				TableSchema.TableColumn colvarClcsbz = new TableSchema.TableColumn(schema);
				colvarClcsbz.ColumnName = "CLCSBZ";
				colvarClcsbz.DataType = DbType.String;
				colvarClcsbz.MaxLength = 1;
				colvarClcsbz.AutoIncrement = false;
				colvarClcsbz.IsNullable = true;
				colvarClcsbz.IsPrimaryKey = false;
				colvarClcsbz.IsForeignKey = false;
				colvarClcsbz.IsReadOnly = false;
				colvarClcsbz.DefaultSetting = @"";
				colvarClcsbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarClcsbz);
				
				TableSchema.TableColumn colvarXtlsbh = new TableSchema.TableColumn(schema);
				colvarXtlsbh.ColumnName = "XTLSBH";
				colvarXtlsbh.DataType = DbType.Decimal;
				colvarXtlsbh.MaxLength = 0;
				colvarXtlsbh.AutoIncrement = false;
				colvarXtlsbh.IsNullable = true;
				colvarXtlsbh.IsPrimaryKey = false;
				colvarXtlsbh.IsForeignKey = false;
				colvarXtlsbh.IsReadOnly = false;
				colvarXtlsbh.DefaultSetting = @"";
				colvarXtlsbh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtlsbh);
				
				TableSchema.TableColumn colvarXtdwmc = new TableSchema.TableColumn(schema);
				colvarXtdwmc.ColumnName = "XTDWMC";
				colvarXtdwmc.DataType = DbType.String;
				colvarXtdwmc.MaxLength = 60;
				colvarXtdwmc.AutoIncrement = false;
				colvarXtdwmc.IsNullable = false;
				colvarXtdwmc.IsPrimaryKey = true;
				colvarXtdwmc.IsForeignKey = false;
				colvarXtdwmc.IsReadOnly = false;
				colvarXtdwmc.DefaultSetting = @"";
				colvarXtdwmc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdwmc);
				
				TableSchema.TableColumn colvarXtdwdz = new TableSchema.TableColumn(schema);
				colvarXtdwdz.ColumnName = "XTDWDZ";
				colvarXtdwdz.DataType = DbType.String;
				colvarXtdwdz.MaxLength = 100;
				colvarXtdwdz.AutoIncrement = false;
				colvarXtdwdz.IsNullable = true;
				colvarXtdwdz.IsPrimaryKey = false;
				colvarXtdwdz.IsForeignKey = false;
				colvarXtdwdz.IsReadOnly = false;
				colvarXtdwdz.DefaultSetting = @"";
				colvarXtdwdz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdwdz);
				
				TableSchema.TableColumn colvarXtyzbm = new TableSchema.TableColumn(schema);
				colvarXtyzbm.ColumnName = "XTYZBM";
				colvarXtyzbm.DataType = DbType.String;
				colvarXtyzbm.MaxLength = 20;
				colvarXtyzbm.AutoIncrement = false;
				colvarXtyzbm.IsNullable = true;
				colvarXtyzbm.IsPrimaryKey = false;
				colvarXtyzbm.IsForeignKey = false;
				colvarXtyzbm.IsReadOnly = false;
				colvarXtyzbm.DefaultSetting = @"";
				colvarXtyzbm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtyzbm);
				
				TableSchema.TableColumn colvarXtdhhm = new TableSchema.TableColumn(schema);
				colvarXtdhhm.ColumnName = "XTDHHM";
				colvarXtdhhm.DataType = DbType.String;
				colvarXtdhhm.MaxLength = 20;
				colvarXtdhhm.AutoIncrement = false;
				colvarXtdhhm.IsNullable = true;
				colvarXtdhhm.IsPrimaryKey = false;
				colvarXtdhhm.IsForeignKey = false;
				colvarXtdhhm.IsReadOnly = false;
				colvarXtdhhm.DefaultSetting = @"";
				colvarXtdhhm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdhhm);
				
				TableSchema.TableColumn colvarXtczhm = new TableSchema.TableColumn(schema);
				colvarXtczhm.ColumnName = "XTCZHM";
				colvarXtczhm.DataType = DbType.String;
				colvarXtczhm.MaxLength = 20;
				colvarXtczhm.AutoIncrement = false;
				colvarXtczhm.IsNullable = true;
				colvarXtczhm.IsPrimaryKey = false;
				colvarXtczhm.IsForeignKey = false;
				colvarXtczhm.IsReadOnly = false;
				colvarXtczhm.DefaultSetting = @"";
				colvarXtczhm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtczhm);
				
				TableSchema.TableColumn colvarXtdzyj = new TableSchema.TableColumn(schema);
				colvarXtdzyj.ColumnName = "XTDZYJ";
				colvarXtdzyj.DataType = DbType.String;
				colvarXtdzyj.MaxLength = 100;
				colvarXtdzyj.AutoIncrement = false;
				colvarXtdzyj.IsNullable = true;
				colvarXtdzyj.IsPrimaryKey = false;
				colvarXtdzyj.IsForeignKey = false;
				colvarXtdzyj.IsReadOnly = false;
				colvarXtdzyj.DefaultSetting = @"";
				colvarXtdzyj.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdzyj);
				
				TableSchema.TableColumn colvarXtfrdb = new TableSchema.TableColumn(schema);
				colvarXtfrdb.ColumnName = "XTFRDB";
				colvarXtfrdb.DataType = DbType.String;
				colvarXtfrdb.MaxLength = 20;
				colvarXtfrdb.AutoIncrement = false;
				colvarXtfrdb.IsNullable = true;
				colvarXtfrdb.IsPrimaryKey = false;
				colvarXtfrdb.IsForeignKey = false;
				colvarXtfrdb.IsReadOnly = false;
				colvarXtfrdb.DefaultSetting = @"";
				colvarXtfrdb.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtfrdb);
				
				TableSchema.TableColumn colvarXtkhyh = new TableSchema.TableColumn(schema);
				colvarXtkhyh.ColumnName = "XTKHYH";
				colvarXtkhyh.DataType = DbType.String;
				colvarXtkhyh.MaxLength = 100;
				colvarXtkhyh.AutoIncrement = false;
				colvarXtkhyh.IsNullable = true;
				colvarXtkhyh.IsPrimaryKey = false;
				colvarXtkhyh.IsForeignKey = false;
				colvarXtkhyh.IsReadOnly = false;
				colvarXtkhyh.DefaultSetting = @"";
				colvarXtkhyh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkhyh);
				
				TableSchema.TableColumn colvarXtkhzh = new TableSchema.TableColumn(schema);
				colvarXtkhzh.ColumnName = "XTKHZH";
				colvarXtkhzh.DataType = DbType.String;
				colvarXtkhzh.MaxLength = 60;
				colvarXtkhzh.AutoIncrement = false;
				colvarXtkhzh.IsNullable = true;
				colvarXtkhzh.IsPrimaryKey = false;
				colvarXtkhzh.IsForeignKey = false;
				colvarXtkhzh.IsReadOnly = false;
				colvarXtkhzh.DefaultSetting = @"";
				colvarXtkhzh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtkhzh);
				
				TableSchema.TableColumn colvarXtdwfz = new TableSchema.TableColumn(schema);
				colvarXtdwfz.ColumnName = "XTDWFZ";
				colvarXtdwfz.DataType = DbType.String;
				colvarXtdwfz.MaxLength = 20;
				colvarXtdwfz.AutoIncrement = false;
				colvarXtdwfz.IsNullable = true;
				colvarXtdwfz.IsPrimaryKey = false;
				colvarXtdwfz.IsForeignKey = false;
				colvarXtdwfz.IsReadOnly = false;
				colvarXtdwfz.DefaultSetting = @"";
				colvarXtdwfz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdwfz);
				
				TableSchema.TableColumn colvarXtbwbi = new TableSchema.TableColumn(schema);
				colvarXtbwbi.ColumnName = "XTBWBI";
				colvarXtbwbi.DataType = DbType.String;
				colvarXtbwbi.MaxLength = 3;
				colvarXtbwbi.AutoIncrement = false;
				colvarXtbwbi.IsNullable = true;
				colvarXtbwbi.IsPrimaryKey = false;
				colvarXtbwbi.IsForeignKey = false;
				colvarXtbwbi.IsReadOnly = false;
				colvarXtbwbi.DefaultSetting = @"";
				colvarXtbwbi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtbwbi);
				
				TableSchema.TableColumn colvarXtdwxz = new TableSchema.TableColumn(schema);
				colvarXtdwxz.ColumnName = "XTDWXZ";
				colvarXtdwxz.DataType = DbType.String;
				colvarXtdwxz.MaxLength = 1;
				colvarXtdwxz.AutoIncrement = false;
				colvarXtdwxz.IsNullable = true;
				colvarXtdwxz.IsPrimaryKey = false;
				colvarXtdwxz.IsForeignKey = false;
				colvarXtdwxz.IsReadOnly = false;
				colvarXtdwxz.DefaultSetting = @"";
				colvarXtdwxz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdwxz);
				
				TableSchema.TableColumn colvarXtyfkc = new TableSchema.TableColumn(schema);
				colvarXtyfkc.ColumnName = "XTYFKC";
				colvarXtyfkc.DataType = DbType.String;
				colvarXtyfkc.MaxLength = 1;
				colvarXtyfkc.AutoIncrement = false;
				colvarXtyfkc.IsNullable = true;
				colvarXtyfkc.IsPrimaryKey = false;
				colvarXtyfkc.IsForeignKey = false;
				colvarXtyfkc.IsReadOnly = false;
				colvarXtyfkc.DefaultSetting = @"";
				colvarXtyfkc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtyfkc);
				
				TableSchema.TableColumn colvarXtyxbz = new TableSchema.TableColumn(schema);
				colvarXtyxbz.ColumnName = "XTYXBZ";
				colvarXtyxbz.DataType = DbType.String;
				colvarXtyxbz.MaxLength = 1;
				colvarXtyxbz.AutoIncrement = false;
				colvarXtyxbz.IsNullable = true;
				colvarXtyxbz.IsPrimaryKey = false;
				colvarXtyxbz.IsForeignKey = false;
				colvarXtyxbz.IsReadOnly = false;
				colvarXtyxbz.DefaultSetting = @"";
				colvarXtyxbz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtyxbz);
				
				TableSchema.TableColumn colvarCbhsff = new TableSchema.TableColumn(schema);
				colvarCbhsff.ColumnName = "CBHSFF";
				colvarCbhsff.DataType = DbType.String;
				colvarCbhsff.MaxLength = 1;
				colvarCbhsff.AutoIncrement = false;
				colvarCbhsff.IsNullable = true;
				colvarCbhsff.IsPrimaryKey = false;
				colvarCbhsff.IsForeignKey = false;
				colvarCbhsff.IsReadOnly = false;
				colvarCbhsff.DefaultSetting = @"";
				colvarCbhsff.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCbhsff);
				
				TableSchema.TableColumn colvarXtdjsz = new TableSchema.TableColumn(schema);
				colvarXtdjsz.ColumnName = "XTDJSZ";
				colvarXtdjsz.DataType = DbType.String;
				colvarXtdjsz.MaxLength = 1;
				colvarXtdjsz.AutoIncrement = false;
				colvarXtdjsz.IsNullable = true;
				colvarXtdjsz.IsPrimaryKey = false;
				colvarXtdjsz.IsForeignKey = false;
				colvarXtdjsz.IsReadOnly = false;
				colvarXtdjsz.DefaultSetting = @"";
				colvarXtdjsz.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtdjsz);
				
				TableSchema.TableColumn colvarXtwpje = new TableSchema.TableColumn(schema);
				colvarXtwpje.ColumnName = "XTWPJE";
				colvarXtwpje.DataType = DbType.String;
				colvarXtwpje.MaxLength = 1;
				colvarXtwpje.AutoIncrement = false;
				colvarXtwpje.IsNullable = true;
				colvarXtwpje.IsPrimaryKey = false;
				colvarXtwpje.IsForeignKey = false;
				colvarXtwpje.IsReadOnly = false;
				colvarXtwpje.DefaultSetting = @"";
				colvarXtwpje.ForeignKeyTableName = "";
				schema.Columns.Add(colvarXtwpje);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ErpNowthwin"].AddSchema("XTM05",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Xtscrk")]
		[Bindable(true)]
		public string Xtscrk 
		{
			get { return GetColumnValue<string>(Columns.Xtscrk); }
			set { SetColumnValue(Columns.Xtscrk, value); }
		}
		  
		[XmlAttribute("Xtcgrk")]
		[Bindable(true)]
		public string Xtcgrk 
		{
			get { return GetColumnValue<string>(Columns.Xtcgrk); }
			set { SetColumnValue(Columns.Xtcgrk, value); }
		}
		  
		[XmlAttribute("Xtjxck")]
		[Bindable(true)]
		public string Xtjxck 
		{
			get { return GetColumnValue<string>(Columns.Xtjxck); }
			set { SetColumnValue(Columns.Xtjxck, value); }
		}
		  
		[XmlAttribute("Xtjxfk")]
		[Bindable(true)]
		public string Xtjxfk 
		{
			get { return GetColumnValue<string>(Columns.Xtjxfk); }
			set { SetColumnValue(Columns.Xtjxfk, value); }
		}
		  
		[XmlAttribute("Xtrbck")]
		[Bindable(true)]
		public string Xtrbck 
		{
			get { return GetColumnValue<string>(Columns.Xtrbck); }
			set { SetColumnValue(Columns.Xtrbck, value); }
		}
		  
		[XmlAttribute("Xtbmth")]
		[Bindable(true)]
		public string Xtbmth 
		{
			get { return GetColumnValue<string>(Columns.Xtbmth); }
			set { SetColumnValue(Columns.Xtbmth, value); }
		}
		  
		[XmlAttribute("Xtbmsh")]
		[Bindable(true)]
		public string Xtbmsh 
		{
			get { return GetColumnValue<string>(Columns.Xtbmsh); }
			set { SetColumnValue(Columns.Xtbmsh, value); }
		}
		  
		[XmlAttribute("Xtbmrh")]
		[Bindable(true)]
		public string Xtbmrh 
		{
			get { return GetColumnValue<string>(Columns.Xtbmrh); }
			set { SetColumnValue(Columns.Xtbmrh, value); }
		}
		  
		[XmlAttribute("Xtbmfk")]
		[Bindable(true)]
		public string Xtbmfk 
		{
			get { return GetColumnValue<string>(Columns.Xtbmfk); }
			set { SetColumnValue(Columns.Xtbmfk, value); }
		}
		  
		[XmlAttribute("Xtscth")]
		[Bindable(true)]
		public string Xtscth 
		{
			get { return GetColumnValue<string>(Columns.Xtscth); }
			set { SetColumnValue(Columns.Xtscth, value); }
		}
		  
		[XmlAttribute("Xtscsh")]
		[Bindable(true)]
		public string Xtscsh 
		{
			get { return GetColumnValue<string>(Columns.Xtscsh); }
			set { SetColumnValue(Columns.Xtscsh, value); }
		}
		  
		[XmlAttribute("Xtscrh")]
		[Bindable(true)]
		public string Xtscrh 
		{
			get { return GetColumnValue<string>(Columns.Xtscrh); }
			set { SetColumnValue(Columns.Xtscrh, value); }
		}
		  
		[XmlAttribute("Xtscfk")]
		[Bindable(true)]
		public string Xtscfk 
		{
			get { return GetColumnValue<string>(Columns.Xtscfk); }
			set { SetColumnValue(Columns.Xtscfk, value); }
		}
		  
		[XmlAttribute("Xtpkcz")]
		[Bindable(true)]
		public string Xtpkcz 
		{
			get { return GetColumnValue<string>(Columns.Xtpkcz); }
			set { SetColumnValue(Columns.Xtpkcz, value); }
		}
		  
		[XmlAttribute("Xtlogo")]
		[Bindable(true)]
		public string Xtlogo 
		{
			get { return GetColumnValue<string>(Columns.Xtlogo); }
			set { SetColumnValue(Columns.Xtlogo, value); }
		}
		  
		[XmlAttribute("Clhsff")]
		[Bindable(true)]
		public string Clhsff 
		{
			get { return GetColumnValue<string>(Columns.Clhsff); }
			set { SetColumnValue(Columns.Clhsff, value); }
		}
		  
		[XmlAttribute("Clwpje")]
		[Bindable(true)]
		public string Clwpje 
		{
			get { return GetColumnValue<string>(Columns.Clwpje); }
			set { SetColumnValue(Columns.Clwpje, value); }
		}
		  
		[XmlAttribute("Clcsbz")]
		[Bindable(true)]
		public string Clcsbz 
		{
			get { return GetColumnValue<string>(Columns.Clcsbz); }
			set { SetColumnValue(Columns.Clcsbz, value); }
		}
		  
		[XmlAttribute("Xtlsbh")]
		[Bindable(true)]
		public decimal? Xtlsbh 
		{
			get { return GetColumnValue<decimal?>(Columns.Xtlsbh); }
			set { SetColumnValue(Columns.Xtlsbh, value); }
		}
		  
		[XmlAttribute("Xtdwmc")]
		[Bindable(true)]
		public string Xtdwmc 
		{
			get { return GetColumnValue<string>(Columns.Xtdwmc); }
			set { SetColumnValue(Columns.Xtdwmc, value); }
		}
		  
		[XmlAttribute("Xtdwdz")]
		[Bindable(true)]
		public string Xtdwdz 
		{
			get { return GetColumnValue<string>(Columns.Xtdwdz); }
			set { SetColumnValue(Columns.Xtdwdz, value); }
		}
		  
		[XmlAttribute("Xtyzbm")]
		[Bindable(true)]
		public string Xtyzbm 
		{
			get { return GetColumnValue<string>(Columns.Xtyzbm); }
			set { SetColumnValue(Columns.Xtyzbm, value); }
		}
		  
		[XmlAttribute("Xtdhhm")]
		[Bindable(true)]
		public string Xtdhhm 
		{
			get { return GetColumnValue<string>(Columns.Xtdhhm); }
			set { SetColumnValue(Columns.Xtdhhm, value); }
		}
		  
		[XmlAttribute("Xtczhm")]
		[Bindable(true)]
		public string Xtczhm 
		{
			get { return GetColumnValue<string>(Columns.Xtczhm); }
			set { SetColumnValue(Columns.Xtczhm, value); }
		}
		  
		[XmlAttribute("Xtdzyj")]
		[Bindable(true)]
		public string Xtdzyj 
		{
			get { return GetColumnValue<string>(Columns.Xtdzyj); }
			set { SetColumnValue(Columns.Xtdzyj, value); }
		}
		  
		[XmlAttribute("Xtfrdb")]
		[Bindable(true)]
		public string Xtfrdb 
		{
			get { return GetColumnValue<string>(Columns.Xtfrdb); }
			set { SetColumnValue(Columns.Xtfrdb, value); }
		}
		  
		[XmlAttribute("Xtkhyh")]
		[Bindable(true)]
		public string Xtkhyh 
		{
			get { return GetColumnValue<string>(Columns.Xtkhyh); }
			set { SetColumnValue(Columns.Xtkhyh, value); }
		}
		  
		[XmlAttribute("Xtkhzh")]
		[Bindable(true)]
		public string Xtkhzh 
		{
			get { return GetColumnValue<string>(Columns.Xtkhzh); }
			set { SetColumnValue(Columns.Xtkhzh, value); }
		}
		  
		[XmlAttribute("Xtdwfz")]
		[Bindable(true)]
		public string Xtdwfz 
		{
			get { return GetColumnValue<string>(Columns.Xtdwfz); }
			set { SetColumnValue(Columns.Xtdwfz, value); }
		}
		  
		[XmlAttribute("Xtbwbi")]
		[Bindable(true)]
		public string Xtbwbi 
		{
			get { return GetColumnValue<string>(Columns.Xtbwbi); }
			set { SetColumnValue(Columns.Xtbwbi, value); }
		}
		  
		[XmlAttribute("Xtdwxz")]
		[Bindable(true)]
		public string Xtdwxz 
		{
			get { return GetColumnValue<string>(Columns.Xtdwxz); }
			set { SetColumnValue(Columns.Xtdwxz, value); }
		}
		  
		[XmlAttribute("Xtyfkc")]
		[Bindable(true)]
		public string Xtyfkc 
		{
			get { return GetColumnValue<string>(Columns.Xtyfkc); }
			set { SetColumnValue(Columns.Xtyfkc, value); }
		}
		  
		[XmlAttribute("Xtyxbz")]
		[Bindable(true)]
		public string Xtyxbz 
		{
			get { return GetColumnValue<string>(Columns.Xtyxbz); }
			set { SetColumnValue(Columns.Xtyxbz, value); }
		}
		  
		[XmlAttribute("Cbhsff")]
		[Bindable(true)]
		public string Cbhsff 
		{
			get { return GetColumnValue<string>(Columns.Cbhsff); }
			set { SetColumnValue(Columns.Cbhsff, value); }
		}
		  
		[XmlAttribute("Xtdjsz")]
		[Bindable(true)]
		public string Xtdjsz 
		{
			get { return GetColumnValue<string>(Columns.Xtdjsz); }
			set { SetColumnValue(Columns.Xtdjsz, value); }
		}
		  
		[XmlAttribute("Xtwpje")]
		[Bindable(true)]
		public string Xtwpje 
		{
			get { return GetColumnValue<string>(Columns.Xtwpje); }
			set { SetColumnValue(Columns.Xtwpje, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varXtscrk,string varXtcgrk,string varXtjxck,string varXtjxfk,string varXtrbck,string varXtbmth,string varXtbmsh,string varXtbmrh,string varXtbmfk,string varXtscth,string varXtscsh,string varXtscrh,string varXtscfk,string varXtpkcz,string varXtlogo,string varClhsff,string varClwpje,string varClcsbz,decimal? varXtlsbh,string varXtdwmc,string varXtdwdz,string varXtyzbm,string varXtdhhm,string varXtczhm,string varXtdzyj,string varXtfrdb,string varXtkhyh,string varXtkhzh,string varXtdwfz,string varXtbwbi,string varXtdwxz,string varXtyfkc,string varXtyxbz,string varCbhsff,string varXtdjsz,string varXtwpje)
		{
			XTM05 item = new XTM05();
			
			item.Xtscrk = varXtscrk;
			
			item.Xtcgrk = varXtcgrk;
			
			item.Xtjxck = varXtjxck;
			
			item.Xtjxfk = varXtjxfk;
			
			item.Xtrbck = varXtrbck;
			
			item.Xtbmth = varXtbmth;
			
			item.Xtbmsh = varXtbmsh;
			
			item.Xtbmrh = varXtbmrh;
			
			item.Xtbmfk = varXtbmfk;
			
			item.Xtscth = varXtscth;
			
			item.Xtscsh = varXtscsh;
			
			item.Xtscrh = varXtscrh;
			
			item.Xtscfk = varXtscfk;
			
			item.Xtpkcz = varXtpkcz;
			
			item.Xtlogo = varXtlogo;
			
			item.Clhsff = varClhsff;
			
			item.Clwpje = varClwpje;
			
			item.Clcsbz = varClcsbz;
			
			item.Xtlsbh = varXtlsbh;
			
			item.Xtdwmc = varXtdwmc;
			
			item.Xtdwdz = varXtdwdz;
			
			item.Xtyzbm = varXtyzbm;
			
			item.Xtdhhm = varXtdhhm;
			
			item.Xtczhm = varXtczhm;
			
			item.Xtdzyj = varXtdzyj;
			
			item.Xtfrdb = varXtfrdb;
			
			item.Xtkhyh = varXtkhyh;
			
			item.Xtkhzh = varXtkhzh;
			
			item.Xtdwfz = varXtdwfz;
			
			item.Xtbwbi = varXtbwbi;
			
			item.Xtdwxz = varXtdwxz;
			
			item.Xtyfkc = varXtyfkc;
			
			item.Xtyxbz = varXtyxbz;
			
			item.Cbhsff = varCbhsff;
			
			item.Xtdjsz = varXtdjsz;
			
			item.Xtwpje = varXtwpje;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varXtscrk,string varXtcgrk,string varXtjxck,string varXtjxfk,string varXtrbck,string varXtbmth,string varXtbmsh,string varXtbmrh,string varXtbmfk,string varXtscth,string varXtscsh,string varXtscrh,string varXtscfk,string varXtpkcz,string varXtlogo,string varClhsff,string varClwpje,string varClcsbz,decimal? varXtlsbh,string varXtdwmc,string varXtdwdz,string varXtyzbm,string varXtdhhm,string varXtczhm,string varXtdzyj,string varXtfrdb,string varXtkhyh,string varXtkhzh,string varXtdwfz,string varXtbwbi,string varXtdwxz,string varXtyfkc,string varXtyxbz,string varCbhsff,string varXtdjsz,string varXtwpje)
		{
			XTM05 item = new XTM05();
			
				item.Xtscrk = varXtscrk;
			
				item.Xtcgrk = varXtcgrk;
			
				item.Xtjxck = varXtjxck;
			
				item.Xtjxfk = varXtjxfk;
			
				item.Xtrbck = varXtrbck;
			
				item.Xtbmth = varXtbmth;
			
				item.Xtbmsh = varXtbmsh;
			
				item.Xtbmrh = varXtbmrh;
			
				item.Xtbmfk = varXtbmfk;
			
				item.Xtscth = varXtscth;
			
				item.Xtscsh = varXtscsh;
			
				item.Xtscrh = varXtscrh;
			
				item.Xtscfk = varXtscfk;
			
				item.Xtpkcz = varXtpkcz;
			
				item.Xtlogo = varXtlogo;
			
				item.Clhsff = varClhsff;
			
				item.Clwpje = varClwpje;
			
				item.Clcsbz = varClcsbz;
			
				item.Xtlsbh = varXtlsbh;
			
				item.Xtdwmc = varXtdwmc;
			
				item.Xtdwdz = varXtdwdz;
			
				item.Xtyzbm = varXtyzbm;
			
				item.Xtdhhm = varXtdhhm;
			
				item.Xtczhm = varXtczhm;
			
				item.Xtdzyj = varXtdzyj;
			
				item.Xtfrdb = varXtfrdb;
			
				item.Xtkhyh = varXtkhyh;
			
				item.Xtkhzh = varXtkhzh;
			
				item.Xtdwfz = varXtdwfz;
			
				item.Xtbwbi = varXtbwbi;
			
				item.Xtdwxz = varXtdwxz;
			
				item.Xtyfkc = varXtyfkc;
			
				item.Xtyxbz = varXtyxbz;
			
				item.Cbhsff = varCbhsff;
			
				item.Xtdjsz = varXtdjsz;
			
				item.Xtwpje = varXtwpje;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn XtscrkColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn XtcgrkColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn XtjxckColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn XtjxfkColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn XtrbckColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbmthColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbmshColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbmrhColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbmfkColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn XtscthColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn XtscshColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn XtscrhColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn XtscfkColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn XtpkczColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn XtlogoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn ClhsffColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn ClwpjeColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn ClcsbzColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn XtlsbhColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdwmcColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdwdzColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn XtyzbmColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdhhmColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn XtczhmColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdzyjColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn XtfrdbColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkhyhColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn XtkhzhColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdwfzColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn XtbwbiColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdwxzColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn XtyfkcColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn XtyxbzColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn CbhsffColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn XtdjszColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn XtwpjeColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Xtscrk = @"XTSCRK";
			 public static string Xtcgrk = @"XTCGRK";
			 public static string Xtjxck = @"XTJXCK";
			 public static string Xtjxfk = @"XTJXFK";
			 public static string Xtrbck = @"XTRBCK";
			 public static string Xtbmth = @"XTBMTH";
			 public static string Xtbmsh = @"XTBMSH";
			 public static string Xtbmrh = @"XTBMRH";
			 public static string Xtbmfk = @"XTBMFK";
			 public static string Xtscth = @"XTSCTH";
			 public static string Xtscsh = @"XTSCSH";
			 public static string Xtscrh = @"XTSCRH";
			 public static string Xtscfk = @"XTSCFK";
			 public static string Xtpkcz = @"XTPKCZ";
			 public static string Xtlogo = @"XTLOGO";
			 public static string Clhsff = @"CLHSFF";
			 public static string Clwpje = @"CLWPJE";
			 public static string Clcsbz = @"CLCSBZ";
			 public static string Xtlsbh = @"XTLSBH";
			 public static string Xtdwmc = @"XTDWMC";
			 public static string Xtdwdz = @"XTDWDZ";
			 public static string Xtyzbm = @"XTYZBM";
			 public static string Xtdhhm = @"XTDHHM";
			 public static string Xtczhm = @"XTCZHM";
			 public static string Xtdzyj = @"XTDZYJ";
			 public static string Xtfrdb = @"XTFRDB";
			 public static string Xtkhyh = @"XTKHYH";
			 public static string Xtkhzh = @"XTKHZH";
			 public static string Xtdwfz = @"XTDWFZ";
			 public static string Xtbwbi = @"XTBWBI";
			 public static string Xtdwxz = @"XTDWXZ";
			 public static string Xtyfkc = @"XTYFKC";
			 public static string Xtyxbz = @"XTYXBZ";
			 public static string Cbhsff = @"CBHSFF";
			 public static string Xtdjsz = @"XTDJSZ";
			 public static string Xtwpje = @"XTWPJE";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
