using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace OracleDataDomain{
    /// <summary>
    /// Strongly-typed collection for the VYLT0601 class.
    /// </summary>
    [Serializable]
    public partial class VYLT0601Collection : ReadOnlyList<VYLT0601, VYLT0601Collection>
    {        
        public VYLT0601Collection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the V_YLT06_01 view.
    /// </summary>
    [Serializable]
    public partial class VYLT0601 : ReadOnlyRecord<VYLT0601>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("V_YLT06_01", TableType.View, DataService.GetInstance("ErpNowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"FYERP";
                //columns
                
                TableSchema.TableColumn colvarKckjnd = new TableSchema.TableColumn(schema);
                colvarKckjnd.ColumnName = "KCKJND";
                colvarKckjnd.DataType = DbType.Decimal;
                colvarKckjnd.MaxLength = 0;
                colvarKckjnd.AutoIncrement = false;
                colvarKckjnd.IsNullable = false;
                colvarKckjnd.IsPrimaryKey = false;
                colvarKckjnd.IsForeignKey = false;
                colvarKckjnd.IsReadOnly = false;
                
                schema.Columns.Add(colvarKckjnd);
                
                TableSchema.TableColumn colvarKckjyf = new TableSchema.TableColumn(schema);
                colvarKckjyf.ColumnName = "KCKJYF";
                colvarKckjyf.DataType = DbType.Decimal;
                colvarKckjyf.MaxLength = 0;
                colvarKckjyf.AutoIncrement = false;
                colvarKckjyf.IsNullable = false;
                colvarKckjyf.IsPrimaryKey = false;
                colvarKckjyf.IsForeignKey = false;
                colvarKckjyf.IsReadOnly = false;
                
                schema.Columns.Add(colvarKckjyf);
                
                TableSchema.TableColumn colvarKcckdm = new TableSchema.TableColumn(schema);
                colvarKcckdm.ColumnName = "KCCKDM";
                colvarKcckdm.DataType = DbType.String;
                colvarKcckdm.MaxLength = 8;
                colvarKcckdm.AutoIncrement = false;
                colvarKcckdm.IsNullable = false;
                colvarKcckdm.IsPrimaryKey = false;
                colvarKcckdm.IsForeignKey = false;
                colvarKcckdm.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcckdm);
                
                TableSchema.TableColumn colvarXtwpdm = new TableSchema.TableColumn(schema);
                colvarXtwpdm.ColumnName = "XTWPDM";
                colvarXtwpdm.DataType = DbType.String;
                colvarXtwpdm.MaxLength = 20;
                colvarXtwpdm.AutoIncrement = false;
                colvarXtwpdm.IsNullable = false;
                colvarXtwpdm.IsPrimaryKey = false;
                colvarXtwpdm.IsForeignKey = false;
                colvarXtwpdm.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpdm);
                
                TableSchema.TableColumn colvarKcqcsl = new TableSchema.TableColumn(schema);
                colvarKcqcsl.ColumnName = "KCQCSL";
                colvarKcqcsl.DataType = DbType.Decimal;
                colvarKcqcsl.MaxLength = 0;
                colvarKcqcsl.AutoIncrement = false;
                colvarKcqcsl.IsNullable = true;
                colvarKcqcsl.IsPrimaryKey = false;
                colvarKcqcsl.IsForeignKey = false;
                colvarKcqcsl.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcqcsl);
                
                TableSchema.TableColumn colvarKcrksl = new TableSchema.TableColumn(schema);
                colvarKcrksl.ColumnName = "KCRKSL";
                colvarKcrksl.DataType = DbType.Decimal;
                colvarKcrksl.MaxLength = 0;
                colvarKcrksl.AutoIncrement = false;
                colvarKcrksl.IsNullable = true;
                colvarKcrksl.IsPrimaryKey = false;
                colvarKcrksl.IsForeignKey = false;
                colvarKcrksl.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcrksl);
                
                TableSchema.TableColumn colvarKccksl = new TableSchema.TableColumn(schema);
                colvarKccksl.ColumnName = "KCCKSL";
                colvarKccksl.DataType = DbType.Decimal;
                colvarKccksl.MaxLength = 0;
                colvarKccksl.AutoIncrement = false;
                colvarKccksl.IsNullable = true;
                colvarKccksl.IsPrimaryKey = false;
                colvarKccksl.IsForeignKey = false;
                colvarKccksl.IsReadOnly = false;
                
                schema.Columns.Add(colvarKccksl);
                
                TableSchema.TableColumn colvarKcyksl = new TableSchema.TableColumn(schema);
                colvarKcyksl.ColumnName = "KCYKSL";
                colvarKcyksl.DataType = DbType.Decimal;
                colvarKcyksl.MaxLength = 0;
                colvarKcyksl.AutoIncrement = false;
                colvarKcyksl.IsNullable = true;
                colvarKcyksl.IsPrimaryKey = false;
                colvarKcyksl.IsForeignKey = false;
                colvarKcyksl.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcyksl);
                
                TableSchema.TableColumn colvarKcqcje = new TableSchema.TableColumn(schema);
                colvarKcqcje.ColumnName = "KCQCJE";
                colvarKcqcje.DataType = DbType.Decimal;
                colvarKcqcje.MaxLength = 0;
                colvarKcqcje.AutoIncrement = false;
                colvarKcqcje.IsNullable = true;
                colvarKcqcje.IsPrimaryKey = false;
                colvarKcqcje.IsForeignKey = false;
                colvarKcqcje.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcqcje);
                
                TableSchema.TableColumn colvarKcrkje = new TableSchema.TableColumn(schema);
                colvarKcrkje.ColumnName = "KCRKJE";
                colvarKcrkje.DataType = DbType.Decimal;
                colvarKcrkje.MaxLength = 0;
                colvarKcrkje.AutoIncrement = false;
                colvarKcrkje.IsNullable = true;
                colvarKcrkje.IsPrimaryKey = false;
                colvarKcrkje.IsForeignKey = false;
                colvarKcrkje.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcrkje);
                
                TableSchema.TableColumn colvarKcckje = new TableSchema.TableColumn(schema);
                colvarKcckje.ColumnName = "KCCKJE";
                colvarKcckje.DataType = DbType.Decimal;
                colvarKcckje.MaxLength = 0;
                colvarKcckje.AutoIncrement = false;
                colvarKcckje.IsNullable = true;
                colvarKcckje.IsPrimaryKey = false;
                colvarKcckje.IsForeignKey = false;
                colvarKcckje.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcckje);
                
                TableSchema.TableColumn colvarKcykje = new TableSchema.TableColumn(schema);
                colvarKcykje.ColumnName = "KCYKJE";
                colvarKcykje.DataType = DbType.Decimal;
                colvarKcykje.MaxLength = 0;
                colvarKcykje.AutoIncrement = false;
                colvarKcykje.IsNullable = true;
                colvarKcykje.IsPrimaryKey = false;
                colvarKcykje.IsForeignKey = false;
                colvarKcykje.IsReadOnly = false;
                
                schema.Columns.Add(colvarKcykje);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ErpNowthwin"].AddSchema("V_YLT06_01",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VYLT0601()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VYLT0601(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VYLT0601(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VYLT0601(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Kckjnd")]
        [Bindable(true)]
        public decimal Kckjnd 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("KCKJND");
		    }
            set 
		    {
			    SetColumnValue("KCKJND", value);
            }
        }
	      
        [XmlAttribute("Kckjyf")]
        [Bindable(true)]
        public decimal Kckjyf 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("KCKJYF");
		    }
            set 
		    {
			    SetColumnValue("KCKJYF", value);
            }
        }
	      
        [XmlAttribute("Kcckdm")]
        [Bindable(true)]
        public string Kcckdm 
	    {
		    get
		    {
			    return GetColumnValue<string>("KCCKDM");
		    }
            set 
		    {
			    SetColumnValue("KCCKDM", value);
            }
        }
	      
        [XmlAttribute("Xtwpdm")]
        [Bindable(true)]
        public string Xtwpdm 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPDM");
		    }
            set 
		    {
			    SetColumnValue("XTWPDM", value);
            }
        }
	      
        [XmlAttribute("Kcqcsl")]
        [Bindable(true)]
        public decimal? Kcqcsl 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCQCSL");
		    }
            set 
		    {
			    SetColumnValue("KCQCSL", value);
            }
        }
	      
        [XmlAttribute("Kcrksl")]
        [Bindable(true)]
        public decimal? Kcrksl 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCRKSL");
		    }
            set 
		    {
			    SetColumnValue("KCRKSL", value);
            }
        }
	      
        [XmlAttribute("Kccksl")]
        [Bindable(true)]
        public decimal? Kccksl 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCCKSL");
		    }
            set 
		    {
			    SetColumnValue("KCCKSL", value);
            }
        }
	      
        [XmlAttribute("Kcyksl")]
        [Bindable(true)]
        public decimal? Kcyksl 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCYKSL");
		    }
            set 
		    {
			    SetColumnValue("KCYKSL", value);
            }
        }
	      
        [XmlAttribute("Kcqcje")]
        [Bindable(true)]
        public decimal? Kcqcje 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCQCJE");
		    }
            set 
		    {
			    SetColumnValue("KCQCJE", value);
            }
        }
	      
        [XmlAttribute("Kcrkje")]
        [Bindable(true)]
        public decimal? Kcrkje 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCRKJE");
		    }
            set 
		    {
			    SetColumnValue("KCRKJE", value);
            }
        }
	      
        [XmlAttribute("Kcckje")]
        [Bindable(true)]
        public decimal? Kcckje 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCCKJE");
		    }
            set 
		    {
			    SetColumnValue("KCCKJE", value);
            }
        }
	      
        [XmlAttribute("Kcykje")]
        [Bindable(true)]
        public decimal? Kcykje 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("KCYKJE");
		    }
            set 
		    {
			    SetColumnValue("KCYKJE", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Kckjnd = @"KCKJND";
            
            public static string Kckjyf = @"KCKJYF";
            
            public static string Kcckdm = @"KCCKDM";
            
            public static string Xtwpdm = @"XTWPDM";
            
            public static string Kcqcsl = @"KCQCSL";
            
            public static string Kcrksl = @"KCRKSL";
            
            public static string Kccksl = @"KCCKSL";
            
            public static string Kcyksl = @"KCYKSL";
            
            public static string Kcqcje = @"KCQCJE";
            
            public static string Kcrkje = @"KCRKJE";
            
            public static string Kcckje = @"KCCKJE";
            
            public static string Kcykje = @"KCYKJE";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
