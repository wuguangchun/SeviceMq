using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData
{
    /// <summary>
    /// Controller class for SCT26_test
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class SCT26TestController
    {
        // Preload our schema..
        SCT26Test thisSchemaLoad = new SCT26Test();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public SCT26TestCollection FetchAll()
        {
            SCT26TestCollection coll = new SCT26TestCollection();
            Query qry = new Query(SCT26Test.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT26TestCollection FetchByID(object Sczsbh)
        {
            SCT26TestCollection coll = new SCT26TestCollection().Where("SCZSBH", Sczsbh).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public SCT26TestCollection FetchByQuery(Query qry)
        {
            SCT26TestCollection coll = new SCT26TestCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Sczsbh)
        {
            return (SCT26Test.Delete(Sczsbh) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Sczsbh)
        {
            return (SCT26Test.Destroy(Sczsbh) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Sczsbh,string Scgcdm,DateTime? Scxdrq,DateTime? Sccjjq,DateTime? Scfzjq,DateTime? Scjhrq,string Scjhry,string Sczsbz,string Sczszt,string Scjqsm,DateTime? Scjqrq,DateTime? Sclrrq,string Sclrry,DateTime? Scshrq,string Scshry,DateTime? Scztjq,DateTime? Scbzjq,string Schtbh,DateTime? Sctcrq)
	    {
		    SCT26Test item = new SCT26Test();
		    
            item.Sczsbh = Sczsbh;
            
            item.Scgcdm = Scgcdm;
            
            item.Scxdrq = Scxdrq;
            
            item.Sccjjq = Sccjjq;
            
            item.Scfzjq = Scfzjq;
            
            item.Scjhrq = Scjhrq;
            
            item.Scjhry = Scjhry;
            
            item.Sczsbz = Sczsbz;
            
            item.Sczszt = Sczszt;
            
            item.Scjqsm = Scjqsm;
            
            item.Scjqrq = Scjqrq;
            
            item.Sclrrq = Sclrrq;
            
            item.Sclrry = Sclrry;
            
            item.Scshrq = Scshrq;
            
            item.Scshry = Scshry;
            
            item.Scztjq = Scztjq;
            
            item.Scbzjq = Scbzjq;
            
            item.Schtbh = Schtbh;
            
            item.Sctcrq = Sctcrq;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string Sczsbh,string Scgcdm,DateTime? Scxdrq,DateTime? Sccjjq,DateTime? Scfzjq,DateTime? Scjhrq,string Scjhry,string Sczsbz,string Sczszt,string Scjqsm,DateTime? Scjqrq,DateTime? Sclrrq,string Sclrry,DateTime? Scshrq,string Scshry,DateTime? Scztjq,DateTime? Scbzjq,string Schtbh,DateTime? Sctcrq)
	    {
		    SCT26Test item = new SCT26Test();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Sczsbh = Sczsbh;
				
			item.Scgcdm = Scgcdm;
				
			item.Scxdrq = Scxdrq;
				
			item.Sccjjq = Sccjjq;
				
			item.Scfzjq = Scfzjq;
				
			item.Scjhrq = Scjhrq;
				
			item.Scjhry = Scjhry;
				
			item.Sczsbz = Sczsbz;
				
			item.Sczszt = Sczszt;
				
			item.Scjqsm = Scjqsm;
				
			item.Scjqrq = Scjqrq;
				
			item.Sclrrq = Sclrrq;
				
			item.Sclrry = Sclrry;
				
			item.Scshrq = Scshrq;
				
			item.Scshry = Scshry;
				
			item.Scztjq = Scztjq;
				
			item.Scbzjq = Scbzjq;
				
			item.Schtbh = Schtbh;
				
			item.Sctcrq = Sctcrq;
				
	        item.Save(UserName);
	    }
    }
}
