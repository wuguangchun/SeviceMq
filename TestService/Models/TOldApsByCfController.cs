using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData
{
    /// <summary>
    /// Controller class for T_OldApsByCf
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TOldApsByCfController
    {
        // Preload our schema..
        TOldApsByCf thisSchemaLoad = new TOldApsByCf();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TOldApsByCfCollection FetchAll()
        {
            TOldApsByCfCollection coll = new TOldApsByCfCollection();
            Query qry = new Query(TOldApsByCf.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TOldApsByCfCollection FetchByID(object Id)
        {
            TOldApsByCfCollection coll = new TOldApsByCfCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TOldApsByCfCollection FetchByQuery(Query qry)
        {
            TOldApsByCfCollection coll = new TOldApsByCfCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (TOldApsByCf.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (TOldApsByCf.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string OrderID,DateTime? BeginTime,DateTime? EndTime,string CutDate,string CutTime,int? CutNo,DateTime? CreateTime,string Scggdh,string OrderType,string CoatType,string StylesResult)
	    {
		    TOldApsByCf item = new TOldApsByCf();
		    
            item.OrderID = OrderID;
            
            item.BeginTime = BeginTime;
            
            item.EndTime = EndTime;
            
            item.CutDate = CutDate;
            
            item.CutTime = CutTime;
            
            item.CutNo = CutNo;
            
            item.CreateTime = CreateTime;
            
            item.Scggdh = Scggdh;
            
            item.OrderType = OrderType;
            
            item.CoatType = CoatType;
            
            item.StylesResult = StylesResult;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,string OrderID,DateTime? BeginTime,DateTime? EndTime,string CutDate,string CutTime,int? CutNo,DateTime? CreateTime,string Scggdh,string OrderType,string CoatType,string StylesResult)
	    {
		    TOldApsByCf item = new TOldApsByCf();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.OrderID = OrderID;
				
			item.BeginTime = BeginTime;
				
			item.EndTime = EndTime;
				
			item.CutDate = CutDate;
				
			item.CutTime = CutTime;
				
			item.CutNo = CutNo;
				
			item.CreateTime = CreateTime;
				
			item.Scggdh = Scggdh;
				
			item.OrderType = OrderType;
				
			item.CoatType = CoatType;
				
			item.StylesResult = StylesResult;
				
	        item.Save(UserName);
	    }
    }
}
