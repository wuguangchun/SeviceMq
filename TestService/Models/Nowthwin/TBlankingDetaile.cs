using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData
{
	/// <summary>
	/// Strongly-typed collection for the TBlankingDetaile class.
	/// </summary>
    [Serializable]
	public partial class TBlankingDetaileCollection : ActiveList<TBlankingDetaile, TBlankingDetaileCollection>
	{	   
		public TBlankingDetaileCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TBlankingDetaileCollection</returns>
		public TBlankingDetaileCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TBlankingDetaile o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_BlankingDetailes table.
	/// </summary>
	[Serializable]
	public partial class TBlankingDetaile : ActiveRecord<TBlankingDetaile>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TBlankingDetaile()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TBlankingDetaile(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TBlankingDetaile(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TBlankingDetaile(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_BlankingDetailes", TableType.Table, DataService.GetInstance("Nowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "id";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarCreateTime = new TableSchema.TableColumn(schema);
				colvarCreateTime.ColumnName = "create_time";
				colvarCreateTime.DataType = DbType.DateTime;
				colvarCreateTime.MaxLength = 0;
				colvarCreateTime.AutoIncrement = false;
				colvarCreateTime.IsNullable = true;
				colvarCreateTime.IsPrimaryKey = false;
				colvarCreateTime.IsForeignKey = false;
				colvarCreateTime.IsReadOnly = false;
				colvarCreateTime.DefaultSetting = @"";
				colvarCreateTime.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreateTime);
				
				TableSchema.TableColumn colvarWmsStatus = new TableSchema.TableColumn(schema);
				colvarWmsStatus.ColumnName = "WMS_Status";
				colvarWmsStatus.DataType = DbType.Int32;
				colvarWmsStatus.MaxLength = 0;
				colvarWmsStatus.AutoIncrement = false;
				colvarWmsStatus.IsNullable = true;
				colvarWmsStatus.IsPrimaryKey = false;
				colvarWmsStatus.IsForeignKey = false;
				colvarWmsStatus.IsReadOnly = false;
				colvarWmsStatus.DefaultSetting = @"";
				colvarWmsStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWmsStatus);
				
				TableSchema.TableColumn colvarPrintStatus = new TableSchema.TableColumn(schema);
				colvarPrintStatus.ColumnName = "print_status";
				colvarPrintStatus.DataType = DbType.Int32;
				colvarPrintStatus.MaxLength = 0;
				colvarPrintStatus.AutoIncrement = false;
				colvarPrintStatus.IsNullable = true;
				colvarPrintStatus.IsPrimaryKey = false;
				colvarPrintStatus.IsForeignKey = false;
				colvarPrintStatus.IsReadOnly = false;
				colvarPrintStatus.DefaultSetting = @"";
				colvarPrintStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrintStatus);
				
				TableSchema.TableColumn colvarPrintNum = new TableSchema.TableColumn(schema);
				colvarPrintNum.ColumnName = "print_num";
				colvarPrintNum.DataType = DbType.Int32;
				colvarPrintNum.MaxLength = 0;
				colvarPrintNum.AutoIncrement = false;
				colvarPrintNum.IsNullable = true;
				colvarPrintNum.IsPrimaryKey = false;
				colvarPrintNum.IsForeignKey = false;
				colvarPrintNum.IsReadOnly = false;
				colvarPrintNum.DefaultSetting = @"";
				colvarPrintNum.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrintNum);
				
				TableSchema.TableColumn colvarCustumerId = new TableSchema.TableColumn(schema);
				colvarCustumerId.ColumnName = "custumerId";
				colvarCustumerId.DataType = DbType.String;
				colvarCustumerId.MaxLength = 255;
				colvarCustumerId.AutoIncrement = false;
				colvarCustumerId.IsNullable = true;
				colvarCustumerId.IsPrimaryKey = false;
				colvarCustumerId.IsForeignKey = false;
				colvarCustumerId.IsReadOnly = false;
				colvarCustumerId.DefaultSetting = @"";
				colvarCustumerId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCustumerId);
				
				TableSchema.TableColumn colvarIsOk = new TableSchema.TableColumn(schema);
				colvarIsOk.ColumnName = "isOk";
				colvarIsOk.DataType = DbType.String;
				colvarIsOk.MaxLength = 255;
				colvarIsOk.AutoIncrement = false;
				colvarIsOk.IsNullable = true;
				colvarIsOk.IsPrimaryKey = false;
				colvarIsOk.IsForeignKey = false;
				colvarIsOk.IsReadOnly = false;
				colvarIsOk.DefaultSetting = @"";
				colvarIsOk.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIsOk);
				
				TableSchema.TableColumn colvarTechnology = new TableSchema.TableColumn(schema);
				colvarTechnology.ColumnName = "technology";
				colvarTechnology.DataType = DbType.String;
				colvarTechnology.MaxLength = 255;
				colvarTechnology.AutoIncrement = false;
				colvarTechnology.IsNullable = true;
				colvarTechnology.IsPrimaryKey = false;
				colvarTechnology.IsForeignKey = false;
				colvarTechnology.IsReadOnly = false;
				colvarTechnology.DefaultSetting = @"";
				colvarTechnology.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTechnology);
				
				TableSchema.TableColumn colvarCount = new TableSchema.TableColumn(schema);
				colvarCount.ColumnName = "count";
				colvarCount.DataType = DbType.String;
				colvarCount.MaxLength = 255;
				colvarCount.AutoIncrement = false;
				colvarCount.IsNullable = true;
				colvarCount.IsPrimaryKey = false;
				colvarCount.IsForeignKey = false;
				colvarCount.IsReadOnly = false;
				colvarCount.DefaultSetting = @"";
				colvarCount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCount);
				
				TableSchema.TableColumn colvarPrintNo = new TableSchema.TableColumn(schema);
				colvarPrintNo.ColumnName = "print_No";
				colvarPrintNo.DataType = DbType.Int32;
				colvarPrintNo.MaxLength = 0;
				colvarPrintNo.AutoIncrement = false;
				colvarPrintNo.IsNullable = true;
				colvarPrintNo.IsPrimaryKey = false;
				colvarPrintNo.IsForeignKey = false;
				colvarPrintNo.IsReadOnly = false;
				colvarPrintNo.DefaultSetting = @"";
				colvarPrintNo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrintNo);
				
				TableSchema.TableColumn colvarMaterialCode = new TableSchema.TableColumn(schema);
				colvarMaterialCode.ColumnName = "materialCode";
				colvarMaterialCode.DataType = DbType.String;
				colvarMaterialCode.MaxLength = 255;
				colvarMaterialCode.AutoIncrement = false;
				colvarMaterialCode.IsNullable = true;
				colvarMaterialCode.IsPrimaryKey = false;
				colvarMaterialCode.IsForeignKey = false;
				colvarMaterialCode.IsReadOnly = false;
				colvarMaterialCode.DefaultSetting = @"";
				colvarMaterialCode.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaterialCode);
				
				TableSchema.TableColumn colvarLength = new TableSchema.TableColumn(schema);
				colvarLength.ColumnName = "length";
				colvarLength.DataType = DbType.Double;
				colvarLength.MaxLength = 0;
				colvarLength.AutoIncrement = false;
				colvarLength.IsNullable = true;
				colvarLength.IsPrimaryKey = false;
				colvarLength.IsForeignKey = false;
				colvarLength.IsReadOnly = false;
				colvarLength.DefaultSetting = @"";
				colvarLength.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLength);
				
				TableSchema.TableColumn colvarWidth = new TableSchema.TableColumn(schema);
				colvarWidth.ColumnName = "width";
				colvarWidth.DataType = DbType.Double;
				colvarWidth.MaxLength = 0;
				colvarWidth.AutoIncrement = false;
				colvarWidth.IsNullable = true;
				colvarWidth.IsPrimaryKey = false;
				colvarWidth.IsForeignKey = false;
				colvarWidth.IsReadOnly = false;
				colvarWidth.DefaultSetting = @"";
				colvarWidth.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWidth);
				
				TableSchema.TableColumn colvarGridAttribute = new TableSchema.TableColumn(schema);
				colvarGridAttribute.ColumnName = "gridAttribute";
				colvarGridAttribute.DataType = DbType.String;
				colvarGridAttribute.MaxLength = 255;
				colvarGridAttribute.AutoIncrement = false;
				colvarGridAttribute.IsNullable = true;
				colvarGridAttribute.IsPrimaryKey = false;
				colvarGridAttribute.IsForeignKey = false;
				colvarGridAttribute.IsReadOnly = false;
				colvarGridAttribute.DefaultSetting = @"";
				colvarGridAttribute.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGridAttribute);
				
				TableSchema.TableColumn colvarGrid = new TableSchema.TableColumn(schema);
				colvarGrid.ColumnName = "grid";
				colvarGrid.DataType = DbType.Double;
				colvarGrid.MaxLength = 0;
				colvarGrid.AutoIncrement = false;
				colvarGrid.IsNullable = true;
				colvarGrid.IsPrimaryKey = false;
				colvarGrid.IsForeignKey = false;
				colvarGrid.IsReadOnly = false;
				colvarGrid.DefaultSetting = @"";
				colvarGrid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGrid);
				
				TableSchema.TableColumn colvarMaterialParts = new TableSchema.TableColumn(schema);
				colvarMaterialParts.ColumnName = "materialParts";
				colvarMaterialParts.DataType = DbType.String;
				colvarMaterialParts.MaxLength = 255;
				colvarMaterialParts.AutoIncrement = false;
				colvarMaterialParts.IsNullable = true;
				colvarMaterialParts.IsPrimaryKey = false;
				colvarMaterialParts.IsForeignKey = false;
				colvarMaterialParts.IsReadOnly = false;
				colvarMaterialParts.DefaultSetting = @"";
				colvarMaterialParts.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaterialParts);
				
				TableSchema.TableColumn colvarLineNum = new TableSchema.TableColumn(schema);
				colvarLineNum.ColumnName = "lineNum";
				colvarLineNum.DataType = DbType.String;
				colvarLineNum.MaxLength = 255;
				colvarLineNum.AutoIncrement = false;
				colvarLineNum.IsNullable = true;
				colvarLineNum.IsPrimaryKey = false;
				colvarLineNum.IsForeignKey = false;
				colvarLineNum.IsReadOnly = false;
				colvarLineNum.DefaultSetting = @"";
				colvarLineNum.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLineNum);
				
				TableSchema.TableColumn colvarLreceiveTime = new TableSchema.TableColumn(schema);
				colvarLreceiveTime.ColumnName = "lreceiveTime";
				colvarLreceiveTime.DataType = DbType.String;
				colvarLreceiveTime.MaxLength = 255;
				colvarLreceiveTime.AutoIncrement = false;
				colvarLreceiveTime.IsNullable = true;
				colvarLreceiveTime.IsPrimaryKey = false;
				colvarLreceiveTime.IsForeignKey = false;
				colvarLreceiveTime.IsReadOnly = false;
				colvarLreceiveTime.DefaultSetting = @"";
				colvarLreceiveTime.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLreceiveTime);
				
				TableSchema.TableColumn colvarNote = new TableSchema.TableColumn(schema);
				colvarNote.ColumnName = "note";
				colvarNote.DataType = DbType.String;
				colvarNote.MaxLength = 255;
				colvarNote.AutoIncrement = false;
				colvarNote.IsNullable = true;
				colvarNote.IsPrimaryKey = false;
				colvarNote.IsForeignKey = false;
				colvarNote.IsReadOnly = false;
				colvarNote.DefaultSetting = @"";
				colvarNote.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNote);
				
				TableSchema.TableColumn colvarTailoringDeliveryDate = new TableSchema.TableColumn(schema);
				colvarTailoringDeliveryDate.ColumnName = "tailoring_delivery_date";
				colvarTailoringDeliveryDate.DataType = DbType.DateTime;
				colvarTailoringDeliveryDate.MaxLength = 0;
				colvarTailoringDeliveryDate.AutoIncrement = false;
				colvarTailoringDeliveryDate.IsNullable = true;
				colvarTailoringDeliveryDate.IsPrimaryKey = false;
				colvarTailoringDeliveryDate.IsForeignKey = false;
				colvarTailoringDeliveryDate.IsReadOnly = false;
				colvarTailoringDeliveryDate.DefaultSetting = @"";
				colvarTailoringDeliveryDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTailoringDeliveryDate);
				
				TableSchema.TableColumn colvarProjectNumber = new TableSchema.TableColumn(schema);
				colvarProjectNumber.ColumnName = "ProjectNumber";
				colvarProjectNumber.DataType = DbType.String;
				colvarProjectNumber.MaxLength = 255;
				colvarProjectNumber.AutoIncrement = false;
				colvarProjectNumber.IsNullable = true;
				colvarProjectNumber.IsPrimaryKey = false;
				colvarProjectNumber.IsForeignKey = false;
				colvarProjectNumber.IsReadOnly = false;
				colvarProjectNumber.DefaultSetting = @"";
				colvarProjectNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectNumber);
				
				TableSchema.TableColumn colvarCutTime = new TableSchema.TableColumn(schema);
				colvarCutTime.ColumnName = "cutTime";
				colvarCutTime.DataType = DbType.String;
				colvarCutTime.MaxLength = 255;
				colvarCutTime.AutoIncrement = false;
				colvarCutTime.IsNullable = true;
				colvarCutTime.IsPrimaryKey = false;
				colvarCutTime.IsForeignKey = false;
				colvarCutTime.IsReadOnly = false;
				colvarCutTime.DefaultSetting = @"";
				colvarCutTime.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCutTime);
				
				TableSchema.TableColumn colvarResourceNum = new TableSchema.TableColumn(schema);
				colvarResourceNum.ColumnName = "ResourceNum";
				colvarResourceNum.DataType = DbType.Int32;
				colvarResourceNum.MaxLength = 0;
				colvarResourceNum.AutoIncrement = false;
				colvarResourceNum.IsNullable = true;
				colvarResourceNum.IsPrimaryKey = false;
				colvarResourceNum.IsForeignKey = false;
				colvarResourceNum.IsReadOnly = false;
				colvarResourceNum.DefaultSetting = @"";
				colvarResourceNum.ForeignKeyTableName = "";
				schema.Columns.Add(colvarResourceNum);
				
				TableSchema.TableColumn colvarScgcdm = new TableSchema.TableColumn(schema);
				colvarScgcdm.ColumnName = "scgcdm";
				colvarScgcdm.DataType = DbType.String;
				colvarScgcdm.MaxLength = 255;
				colvarScgcdm.AutoIncrement = false;
				colvarScgcdm.IsNullable = true;
				colvarScgcdm.IsPrimaryKey = false;
				colvarScgcdm.IsForeignKey = false;
				colvarScgcdm.IsReadOnly = false;
				colvarScgcdm.DefaultSetting = @"";
				colvarScgcdm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarScgcdm);
				
				TableSchema.TableColumn colvarCjdate = new TableSchema.TableColumn(schema);
				colvarCjdate.ColumnName = "cjdate";
				colvarCjdate.DataType = DbType.AnsiString;
				colvarCjdate.MaxLength = 0;
				colvarCjdate.AutoIncrement = false;
				colvarCjdate.IsNullable = true;
				colvarCjdate.IsPrimaryKey = false;
				colvarCjdate.IsForeignKey = false;
				colvarCjdate.IsReadOnly = false;
				colvarCjdate.DefaultSetting = @"";
				colvarCjdate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCjdate);
				
				TableSchema.TableColumn colvarCjtime = new TableSchema.TableColumn(schema);
				colvarCjtime.ColumnName = "cjtime";
				colvarCjtime.DataType = DbType.String;
				colvarCjtime.MaxLength = 50;
				colvarCjtime.AutoIncrement = false;
				colvarCjtime.IsNullable = true;
				colvarCjtime.IsPrimaryKey = false;
				colvarCjtime.IsForeignKey = false;
				colvarCjtime.IsReadOnly = false;
				colvarCjtime.DefaultSetting = @"";
				colvarCjtime.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCjtime);
				
				TableSchema.TableColumn colvarOrderType = new TableSchema.TableColumn(schema);
				colvarOrderType.ColumnName = "OrderType";
				colvarOrderType.DataType = DbType.String;
				colvarOrderType.MaxLength = 255;
				colvarOrderType.AutoIncrement = false;
				colvarOrderType.IsNullable = true;
				colvarOrderType.IsPrimaryKey = false;
				colvarOrderType.IsForeignKey = false;
				colvarOrderType.IsReadOnly = false;
				colvarOrderType.DefaultSetting = @"";
				colvarOrderType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOrderType);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["Nowthwin"].AddSchema("T_BlankingDetailes",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("CreateTime")]
		[Bindable(true)]
		public DateTime? CreateTime 
		{
			get { return GetColumnValue<DateTime?>(Columns.CreateTime); }
			set { SetColumnValue(Columns.CreateTime, value); }
		}
		  
		[XmlAttribute("WmsStatus")]
		[Bindable(true)]
		public int? WmsStatus 
		{
			get { return GetColumnValue<int?>(Columns.WmsStatus); }
			set { SetColumnValue(Columns.WmsStatus, value); }
		}
		  
		[XmlAttribute("PrintStatus")]
		[Bindable(true)]
		public int? PrintStatus 
		{
			get { return GetColumnValue<int?>(Columns.PrintStatus); }
			set { SetColumnValue(Columns.PrintStatus, value); }
		}
		  
		[XmlAttribute("PrintNum")]
		[Bindable(true)]
		public int? PrintNum 
		{
			get { return GetColumnValue<int?>(Columns.PrintNum); }
			set { SetColumnValue(Columns.PrintNum, value); }
		}
		  
		[XmlAttribute("CustumerId")]
		[Bindable(true)]
		public string CustumerId 
		{
			get { return GetColumnValue<string>(Columns.CustumerId); }
			set { SetColumnValue(Columns.CustumerId, value); }
		}
		  
		[XmlAttribute("IsOk")]
		[Bindable(true)]
		public string IsOk 
		{
			get { return GetColumnValue<string>(Columns.IsOk); }
			set { SetColumnValue(Columns.IsOk, value); }
		}
		  
		[XmlAttribute("Technology")]
		[Bindable(true)]
		public string Technology 
		{
			get { return GetColumnValue<string>(Columns.Technology); }
			set { SetColumnValue(Columns.Technology, value); }
		}
		  
		[XmlAttribute("Count")]
		[Bindable(true)]
		public string Count 
		{
			get { return GetColumnValue<string>(Columns.Count); }
			set { SetColumnValue(Columns.Count, value); }
		}
		  
		[XmlAttribute("PrintNo")]
		[Bindable(true)]
		public int? PrintNo 
		{
			get { return GetColumnValue<int?>(Columns.PrintNo); }
			set { SetColumnValue(Columns.PrintNo, value); }
		}
		  
		[XmlAttribute("MaterialCode")]
		[Bindable(true)]
		public string MaterialCode 
		{
			get { return GetColumnValue<string>(Columns.MaterialCode); }
			set { SetColumnValue(Columns.MaterialCode, value); }
		}
		  
		[XmlAttribute("Length")]
		[Bindable(true)]
		public double? Length 
		{
			get { return GetColumnValue<double?>(Columns.Length); }
			set { SetColumnValue(Columns.Length, value); }
		}
		  
		[XmlAttribute("Width")]
		[Bindable(true)]
		public double? Width 
		{
			get { return GetColumnValue<double?>(Columns.Width); }
			set { SetColumnValue(Columns.Width, value); }
		}
		  
		[XmlAttribute("GridAttribute")]
		[Bindable(true)]
		public string GridAttribute 
		{
			get { return GetColumnValue<string>(Columns.GridAttribute); }
			set { SetColumnValue(Columns.GridAttribute, value); }
		}
		  
		[XmlAttribute("Grid")]
		[Bindable(true)]
		public double? Grid 
		{
			get { return GetColumnValue<double?>(Columns.Grid); }
			set { SetColumnValue(Columns.Grid, value); }
		}
		  
		[XmlAttribute("MaterialParts")]
		[Bindable(true)]
		public string MaterialParts 
		{
			get { return GetColumnValue<string>(Columns.MaterialParts); }
			set { SetColumnValue(Columns.MaterialParts, value); }
		}
		  
		[XmlAttribute("LineNum")]
		[Bindable(true)]
		public string LineNum 
		{
			get { return GetColumnValue<string>(Columns.LineNum); }
			set { SetColumnValue(Columns.LineNum, value); }
		}
		  
		[XmlAttribute("LreceiveTime")]
		[Bindable(true)]
		public string LreceiveTime 
		{
			get { return GetColumnValue<string>(Columns.LreceiveTime); }
			set { SetColumnValue(Columns.LreceiveTime, value); }
		}
		  
		[XmlAttribute("Note")]
		[Bindable(true)]
		public string Note 
		{
			get { return GetColumnValue<string>(Columns.Note); }
			set { SetColumnValue(Columns.Note, value); }
		}
		  
		[XmlAttribute("TailoringDeliveryDate")]
		[Bindable(true)]
		public DateTime? TailoringDeliveryDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.TailoringDeliveryDate); }
			set { SetColumnValue(Columns.TailoringDeliveryDate, value); }
		}
		  
		[XmlAttribute("ProjectNumber")]
		[Bindable(true)]
		public string ProjectNumber 
		{
			get { return GetColumnValue<string>(Columns.ProjectNumber); }
			set { SetColumnValue(Columns.ProjectNumber, value); }
		}
		  
		[XmlAttribute("CutTime")]
		[Bindable(true)]
		public string CutTime 
		{
			get { return GetColumnValue<string>(Columns.CutTime); }
			set { SetColumnValue(Columns.CutTime, value); }
		}
		  
		[XmlAttribute("ResourceNum")]
		[Bindable(true)]
		public int? ResourceNum 
		{
			get { return GetColumnValue<int?>(Columns.ResourceNum); }
			set { SetColumnValue(Columns.ResourceNum, value); }
		}
		  
		[XmlAttribute("Scgcdm")]
		[Bindable(true)]
		public string Scgcdm 
		{
			get { return GetColumnValue<string>(Columns.Scgcdm); }
			set { SetColumnValue(Columns.Scgcdm, value); }
		}
		  
		[XmlAttribute("Cjdate")]
		[Bindable(true)]
		public string Cjdate 
		{
			get { return GetColumnValue<string>(Columns.Cjdate); }
			set { SetColumnValue(Columns.Cjdate, value); }
		}
		  
		[XmlAttribute("Cjtime")]
		[Bindable(true)]
		public string Cjtime 
		{
			get { return GetColumnValue<string>(Columns.Cjtime); }
			set { SetColumnValue(Columns.Cjtime, value); }
		}
		  
		[XmlAttribute("OrderType")]
		[Bindable(true)]
		public string OrderType 
		{
			get { return GetColumnValue<string>(Columns.OrderType); }
			set { SetColumnValue(Columns.OrderType, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(DateTime? varCreateTime,int? varWmsStatus,int? varPrintStatus,int? varPrintNum,string varCustumerId,string varIsOk,string varTechnology,string varCount,int? varPrintNo,string varMaterialCode,double? varLength,double? varWidth,string varGridAttribute,double? varGrid,string varMaterialParts,string varLineNum,string varLreceiveTime,string varNote,DateTime? varTailoringDeliveryDate,string varProjectNumber,string varCutTime,int? varResourceNum,string varScgcdm,string varCjdate,string varCjtime,string varOrderType)
		{
			TBlankingDetaile item = new TBlankingDetaile();
			
			item.CreateTime = varCreateTime;
			
			item.WmsStatus = varWmsStatus;
			
			item.PrintStatus = varPrintStatus;
			
			item.PrintNum = varPrintNum;
			
			item.CustumerId = varCustumerId;
			
			item.IsOk = varIsOk;
			
			item.Technology = varTechnology;
			
			item.Count = varCount;
			
			item.PrintNo = varPrintNo;
			
			item.MaterialCode = varMaterialCode;
			
			item.Length = varLength;
			
			item.Width = varWidth;
			
			item.GridAttribute = varGridAttribute;
			
			item.Grid = varGrid;
			
			item.MaterialParts = varMaterialParts;
			
			item.LineNum = varLineNum;
			
			item.LreceiveTime = varLreceiveTime;
			
			item.Note = varNote;
			
			item.TailoringDeliveryDate = varTailoringDeliveryDate;
			
			item.ProjectNumber = varProjectNumber;
			
			item.CutTime = varCutTime;
			
			item.ResourceNum = varResourceNum;
			
			item.Scgcdm = varScgcdm;
			
			item.Cjdate = varCjdate;
			
			item.Cjtime = varCjtime;
			
			item.OrderType = varOrderType;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,DateTime? varCreateTime,int? varWmsStatus,int? varPrintStatus,int? varPrintNum,string varCustumerId,string varIsOk,string varTechnology,string varCount,int? varPrintNo,string varMaterialCode,double? varLength,double? varWidth,string varGridAttribute,double? varGrid,string varMaterialParts,string varLineNum,string varLreceiveTime,string varNote,DateTime? varTailoringDeliveryDate,string varProjectNumber,string varCutTime,int? varResourceNum,string varScgcdm,string varCjdate,string varCjtime,string varOrderType)
		{
			TBlankingDetaile item = new TBlankingDetaile();
			
				item.Id = varId;
			
				item.CreateTime = varCreateTime;
			
				item.WmsStatus = varWmsStatus;
			
				item.PrintStatus = varPrintStatus;
			
				item.PrintNum = varPrintNum;
			
				item.CustumerId = varCustumerId;
			
				item.IsOk = varIsOk;
			
				item.Technology = varTechnology;
			
				item.Count = varCount;
			
				item.PrintNo = varPrintNo;
			
				item.MaterialCode = varMaterialCode;
			
				item.Length = varLength;
			
				item.Width = varWidth;
			
				item.GridAttribute = varGridAttribute;
			
				item.Grid = varGrid;
			
				item.MaterialParts = varMaterialParts;
			
				item.LineNum = varLineNum;
			
				item.LreceiveTime = varLreceiveTime;
			
				item.Note = varNote;
			
				item.TailoringDeliveryDate = varTailoringDeliveryDate;
			
				item.ProjectNumber = varProjectNumber;
			
				item.CutTime = varCutTime;
			
				item.ResourceNum = varResourceNum;
			
				item.Scgcdm = varScgcdm;
			
				item.Cjdate = varCjdate;
			
				item.Cjtime = varCjtime;
			
				item.OrderType = varOrderType;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CreateTimeColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn WmsStatusColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn PrintStatusColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PrintNumColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn CustumerIdColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IsOkColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn TechnologyColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CountColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn PrintNoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn MaterialCodeColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn LengthColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn WidthColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn GridAttributeColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn GridColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn MaterialPartsColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn LineNumColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn LreceiveTimeColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn NoteColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn TailoringDeliveryDateColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectNumberColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn CutTimeColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn ResourceNumColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn ScgcdmColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn CjdateColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn CjtimeColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn OrderTypeColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"id";
			 public static string CreateTime = @"create_time";
			 public static string WmsStatus = @"WMS_Status";
			 public static string PrintStatus = @"print_status";
			 public static string PrintNum = @"print_num";
			 public static string CustumerId = @"custumerId";
			 public static string IsOk = @"isOk";
			 public static string Technology = @"technology";
			 public static string Count = @"count";
			 public static string PrintNo = @"print_No";
			 public static string MaterialCode = @"materialCode";
			 public static string Length = @"length";
			 public static string Width = @"width";
			 public static string GridAttribute = @"gridAttribute";
			 public static string Grid = @"grid";
			 public static string MaterialParts = @"materialParts";
			 public static string LineNum = @"lineNum";
			 public static string LreceiveTime = @"lreceiveTime";
			 public static string Note = @"note";
			 public static string TailoringDeliveryDate = @"tailoring_delivery_date";
			 public static string ProjectNumber = @"ProjectNumber";
			 public static string CutTime = @"cutTime";
			 public static string ResourceNum = @"ResourceNum";
			 public static string Scgcdm = @"scgcdm";
			 public static string Cjdate = @"cjdate";
			 public static string Cjtime = @"cjtime";
			 public static string OrderType = @"OrderType";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
