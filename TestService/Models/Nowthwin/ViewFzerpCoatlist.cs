using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData{
    /// <summary>
    /// Strongly-typed collection for the ViewFzerpCoatlist class.
    /// </summary>
    [Serializable]
    public partial class ViewFzerpCoatlistCollection : ReadOnlyList<ViewFzerpCoatlist, ViewFzerpCoatlistCollection>
    {        
        public ViewFzerpCoatlistCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the View_FZERP_Coatlist view.
    /// </summary>
    [Serializable]
    public partial class ViewFzerpCoatlist : ReadOnlyRecord<ViewFzerpCoatlist>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("View_FZERP_Coatlist", TableType.View, DataService.GetInstance("Nowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "id";
                colvarId.DataType = DbType.Int32;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarSchtbh = new TableSchema.TableColumn(schema);
                colvarSchtbh.ColumnName = "SCHTBH";
                colvarSchtbh.DataType = DbType.String;
                colvarSchtbh.MaxLength = 20;
                colvarSchtbh.AutoIncrement = false;
                colvarSchtbh.IsNullable = true;
                colvarSchtbh.IsPrimaryKey = false;
                colvarSchtbh.IsForeignKey = false;
                colvarSchtbh.IsReadOnly = false;
                
                schema.Columns.Add(colvarSchtbh);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 50;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = true;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarScggxh = new TableSchema.TableColumn(schema);
                colvarScggxh.ColumnName = "SCGGXH";
                colvarScggxh.DataType = DbType.String;
                colvarScggxh.MaxLength = 50;
                colvarScggxh.AutoIncrement = false;
                colvarScggxh.IsNullable = true;
                colvarScggxh.IsPrimaryKey = false;
                colvarScggxh.IsForeignKey = false;
                colvarScggxh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggxh);
                
                TableSchema.TableColumn colvarDtxtwpmc = new TableSchema.TableColumn(schema);
                colvarDtxtwpmc.ColumnName = "DTXTWPMC";
                colvarDtxtwpmc.DataType = DbType.String;
                colvarDtxtwpmc.MaxLength = 20;
                colvarDtxtwpmc.AutoIncrement = false;
                colvarDtxtwpmc.IsNullable = true;
                colvarDtxtwpmc.IsPrimaryKey = false;
                colvarDtxtwpmc.IsForeignKey = false;
                colvarDtxtwpmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarDtxtwpmc);
                
                TableSchema.TableColumn colvarWPSXLB19 = new TableSchema.TableColumn(schema);
                colvarWPSXLB19.ColumnName = "WPSXLB19";
                colvarWPSXLB19.DataType = DbType.String;
                colvarWPSXLB19.MaxLength = 20;
                colvarWPSXLB19.AutoIncrement = false;
                colvarWPSXLB19.IsNullable = true;
                colvarWPSXLB19.IsPrimaryKey = false;
                colvarWPSXLB19.IsForeignKey = false;
                colvarWPSXLB19.IsReadOnly = false;
                
                schema.Columns.Add(colvarWPSXLB19);
                
                TableSchema.TableColumn colvarXtwpys = new TableSchema.TableColumn(schema);
                colvarXtwpys.ColumnName = "XTWPYS";
                colvarXtwpys.DataType = DbType.String;
                colvarXtwpys.MaxLength = 20;
                colvarXtwpys.AutoIncrement = false;
                colvarXtwpys.IsNullable = true;
                colvarXtwpys.IsPrimaryKey = false;
                colvarXtwpys.IsForeignKey = false;
                colvarXtwpys.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpys);
                
                TableSchema.TableColumn colvarScqdrq = new TableSchema.TableColumn(schema);
                colvarScqdrq.ColumnName = "SCQDRQ";
                colvarScqdrq.DataType = DbType.DateTime;
                colvarScqdrq.MaxLength = 0;
                colvarScqdrq.AutoIncrement = false;
                colvarScqdrq.IsNullable = true;
                colvarScqdrq.IsPrimaryKey = false;
                colvarScqdrq.IsForeignKey = false;
                colvarScqdrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScqdrq);
                
                TableSchema.TableColumn colvarScjhrq = new TableSchema.TableColumn(schema);
                colvarScjhrq.ColumnName = "SCJHRQ";
                colvarScjhrq.DataType = DbType.DateTime;
                colvarScjhrq.MaxLength = 0;
                colvarScjhrq.AutoIncrement = false;
                colvarScjhrq.IsNullable = true;
                colvarScjhrq.IsPrimaryKey = false;
                colvarScjhrq.IsForeignKey = false;
                colvarScjhrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhrq);
                
                TableSchema.TableColumn colvarXttxhm = new TableSchema.TableColumn(schema);
                colvarXttxhm.ColumnName = "XTTXHM";
                colvarXttxhm.DataType = DbType.String;
                colvarXttxhm.MaxLength = 20;
                colvarXttxhm.AutoIncrement = false;
                colvarXttxhm.IsNullable = true;
                colvarXttxhm.IsPrimaryKey = false;
                colvarXttxhm.IsForeignKey = false;
                colvarXttxhm.IsReadOnly = false;
                
                schema.Columns.Add(colvarXttxhm);
                
                TableSchema.TableColumn colvarSchtsl = new TableSchema.TableColumn(schema);
                colvarSchtsl.ColumnName = "SCHTSL";
                colvarSchtsl.DataType = DbType.String;
                colvarSchtsl.MaxLength = 20;
                colvarSchtsl.AutoIncrement = false;
                colvarSchtsl.IsNullable = true;
                colvarSchtsl.IsPrimaryKey = false;
                colvarSchtsl.IsForeignKey = false;
                colvarSchtsl.IsReadOnly = false;
                
                schema.Columns.Add(colvarSchtsl);
                
                TableSchema.TableColumn colvarScggbz = new TableSchema.TableColumn(schema);
                colvarScggbz.ColumnName = "SCGGBZ";
                colvarScggbz.DataType = DbType.String;
                colvarScggbz.MaxLength = 50;
                colvarScggbz.AutoIncrement = false;
                colvarScggbz.IsNullable = true;
                colvarScggbz.IsPrimaryKey = false;
                colvarScggbz.IsForeignKey = false;
                colvarScggbz.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggbz);
                
                TableSchema.TableColumn colvarSckhxm = new TableSchema.TableColumn(schema);
                colvarSckhxm.ColumnName = "SCKHXM";
                colvarSckhxm.DataType = DbType.String;
                colvarSckhxm.MaxLength = 50;
                colvarSckhxm.AutoIncrement = false;
                colvarSckhxm.IsNullable = true;
                colvarSckhxm.IsPrimaryKey = false;
                colvarSckhxm.IsForeignKey = false;
                colvarSckhxm.IsReadOnly = false;
                
                schema.Columns.Add(colvarSckhxm);
                
                TableSchema.TableColumn colvarSjbh = new TableSchema.TableColumn(schema);
                colvarSjbh.ColumnName = "SJBH";
                colvarSjbh.DataType = DbType.String;
                colvarSjbh.MaxLength = 50;
                colvarSjbh.AutoIncrement = false;
                colvarSjbh.IsNullable = true;
                colvarSjbh.IsPrimaryKey = false;
                colvarSjbh.IsForeignKey = false;
                colvarSjbh.IsReadOnly = false;
                
                schema.Columns.Add(colvarSjbh);
                
                TableSchema.TableColumn colvarXtxmdm = new TableSchema.TableColumn(schema);
                colvarXtxmdm.ColumnName = "XTXMDM";
                colvarXtxmdm.DataType = DbType.String;
                colvarXtxmdm.MaxLength = 20;
                colvarXtxmdm.AutoIncrement = false;
                colvarXtxmdm.IsNullable = true;
                colvarXtxmdm.IsPrimaryKey = false;
                colvarXtxmdm.IsForeignKey = false;
                colvarXtxmdm.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtxmdm);
                
                TableSchema.TableColumn colvarScytdm = new TableSchema.TableColumn(schema);
                colvarScytdm.ColumnName = "SCYTDM";
                colvarScytdm.DataType = DbType.String;
                colvarScytdm.MaxLength = 500;
                colvarScytdm.AutoIncrement = false;
                colvarScytdm.IsNullable = true;
                colvarScytdm.IsPrimaryKey = false;
                colvarScytdm.IsForeignKey = false;
                colvarScytdm.IsReadOnly = false;
                
                schema.Columns.Add(colvarScytdm);
                
                TableSchema.TableColumn colvarScytmc = new TableSchema.TableColumn(schema);
                colvarScytmc.ColumnName = "SCYTMC";
                colvarScytmc.DataType = DbType.String;
                colvarScytmc.MaxLength = 500;
                colvarScytmc.AutoIncrement = false;
                colvarScytmc.IsNullable = true;
                colvarScytmc.IsPrimaryKey = false;
                colvarScytmc.IsForeignKey = false;
                colvarScytmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarScytmc);
                
                TableSchema.TableColumn colvarFlnm = new TableSchema.TableColumn(schema);
                colvarFlnm.ColumnName = "FLNM";
                colvarFlnm.DataType = DbType.String;
                colvarFlnm.MaxLength = 500;
                colvarFlnm.AutoIncrement = false;
                colvarFlnm.IsNullable = true;
                colvarFlnm.IsPrimaryKey = false;
                colvarFlnm.IsForeignKey = false;
                colvarFlnm.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlnm);
                
                TableSchema.TableColumn colvarXtwpmc = new TableSchema.TableColumn(schema);
                colvarXtwpmc.ColumnName = "XTWPMC";
                colvarXtwpmc.DataType = DbType.String;
                colvarXtwpmc.MaxLength = 500;
                colvarXtwpmc.AutoIncrement = false;
                colvarXtwpmc.IsNullable = true;
                colvarXtwpmc.IsPrimaryKey = false;
                colvarXtwpmc.IsForeignKey = false;
                colvarXtwpmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpmc);
                
                TableSchema.TableColumn colvarXtwpxh = new TableSchema.TableColumn(schema);
                colvarXtwpxh.ColumnName = "XTWPXH";
                colvarXtwpxh.DataType = DbType.String;
                colvarXtwpxh.MaxLength = 500;
                colvarXtwpxh.AutoIncrement = false;
                colvarXtwpxh.IsNullable = true;
                colvarXtwpxh.IsPrimaryKey = false;
                colvarXtwpxh.IsForeignKey = false;
                colvarXtwpxh.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpxh);
                
                TableSchema.TableColumn colvarErptype = new TableSchema.TableColumn(schema);
                colvarErptype.ColumnName = "ERPTYPE";
                colvarErptype.DataType = DbType.String;
                colvarErptype.MaxLength = 50;
                colvarErptype.AutoIncrement = false;
                colvarErptype.IsNullable = true;
                colvarErptype.IsPrimaryKey = false;
                colvarErptype.IsForeignKey = false;
                colvarErptype.IsReadOnly = false;
                
                schema.Columns.Add(colvarErptype);
                
                TableSchema.TableColumn colvarScjhdd = new TableSchema.TableColumn(schema);
                colvarScjhdd.ColumnName = "scjhdd";
                colvarScjhdd.DataType = DbType.String;
                colvarScjhdd.MaxLength = 50;
                colvarScjhdd.AutoIncrement = false;
                colvarScjhdd.IsNullable = true;
                colvarScjhdd.IsPrimaryKey = false;
                colvarScjhdd.IsForeignKey = false;
                colvarScjhdd.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhdd);
                
                TableSchema.TableColumn colvarC = new TableSchema.TableColumn(schema);
                colvarC.ColumnName = "c";
                colvarC.DataType = DbType.String;
                colvarC.MaxLength = 41;
                colvarC.AutoIncrement = false;
                colvarC.IsNullable = true;
                colvarC.IsPrimaryKey = false;
                colvarC.IsForeignKey = false;
                colvarC.IsReadOnly = false;
                
                schema.Columns.Add(colvarC);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Nowthwin"].AddSchema("View_FZERP_Coatlist",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewFzerpCoatlist()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewFzerpCoatlist(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewFzerpCoatlist(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewFzerpCoatlist(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Id")]
        [Bindable(true)]
        public int Id 
	    {
		    get
		    {
			    return GetColumnValue<int>("id");
		    }
            set 
		    {
			    SetColumnValue("id", value);
            }
        }
	      
        [XmlAttribute("Schtbh")]
        [Bindable(true)]
        public string Schtbh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCHTBH");
		    }
            set 
		    {
			    SetColumnValue("SCHTBH", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("Scggxh")]
        [Bindable(true)]
        public string Scggxh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGXH");
		    }
            set 
		    {
			    SetColumnValue("SCGGXH", value);
            }
        }
	      
        [XmlAttribute("Dtxtwpmc")]
        [Bindable(true)]
        public string Dtxtwpmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("DTXTWPMC");
		    }
            set 
		    {
			    SetColumnValue("DTXTWPMC", value);
            }
        }
	      
        [XmlAttribute("WPSXLB19")]
        [Bindable(true)]
        public string WPSXLB19 
	    {
		    get
		    {
			    return GetColumnValue<string>("WPSXLB19");
		    }
            set 
		    {
			    SetColumnValue("WPSXLB19", value);
            }
        }
	      
        [XmlAttribute("Xtwpys")]
        [Bindable(true)]
        public string Xtwpys 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPYS");
		    }
            set 
		    {
			    SetColumnValue("XTWPYS", value);
            }
        }
	      
        [XmlAttribute("Scqdrq")]
        [Bindable(true)]
        public DateTime? Scqdrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCQDRQ");
		    }
            set 
		    {
			    SetColumnValue("SCQDRQ", value);
            }
        }
	      
        [XmlAttribute("Scjhrq")]
        [Bindable(true)]
        public DateTime? Scjhrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCJHRQ");
		    }
            set 
		    {
			    SetColumnValue("SCJHRQ", value);
            }
        }
	      
        [XmlAttribute("Xttxhm")]
        [Bindable(true)]
        public string Xttxhm 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTTXHM");
		    }
            set 
		    {
			    SetColumnValue("XTTXHM", value);
            }
        }
	      
        [XmlAttribute("Schtsl")]
        [Bindable(true)]
        public string Schtsl 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCHTSL");
		    }
            set 
		    {
			    SetColumnValue("SCHTSL", value);
            }
        }
	      
        [XmlAttribute("Scggbz")]
        [Bindable(true)]
        public string Scggbz 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGBZ");
		    }
            set 
		    {
			    SetColumnValue("SCGGBZ", value);
            }
        }
	      
        [XmlAttribute("Sckhxm")]
        [Bindable(true)]
        public string Sckhxm 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCKHXM");
		    }
            set 
		    {
			    SetColumnValue("SCKHXM", value);
            }
        }
	      
        [XmlAttribute("Sjbh")]
        [Bindable(true)]
        public string Sjbh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SJBH");
		    }
            set 
		    {
			    SetColumnValue("SJBH", value);
            }
        }
	      
        [XmlAttribute("Xtxmdm")]
        [Bindable(true)]
        public string Xtxmdm 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTXMDM");
		    }
            set 
		    {
			    SetColumnValue("XTXMDM", value);
            }
        }
	      
        [XmlAttribute("Scytdm")]
        [Bindable(true)]
        public string Scytdm 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCYTDM");
		    }
            set 
		    {
			    SetColumnValue("SCYTDM", value);
            }
        }
	      
        [XmlAttribute("Scytmc")]
        [Bindable(true)]
        public string Scytmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCYTMC");
		    }
            set 
		    {
			    SetColumnValue("SCYTMC", value);
            }
        }
	      
        [XmlAttribute("Flnm")]
        [Bindable(true)]
        public string Flnm 
	    {
		    get
		    {
			    return GetColumnValue<string>("FLNM");
		    }
            set 
		    {
			    SetColumnValue("FLNM", value);
            }
        }
	      
        [XmlAttribute("Xtwpmc")]
        [Bindable(true)]
        public string Xtwpmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPMC");
		    }
            set 
		    {
			    SetColumnValue("XTWPMC", value);
            }
        }
	      
        [XmlAttribute("Xtwpxh")]
        [Bindable(true)]
        public string Xtwpxh 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPXH");
		    }
            set 
		    {
			    SetColumnValue("XTWPXH", value);
            }
        }
	      
        [XmlAttribute("Erptype")]
        [Bindable(true)]
        public string Erptype 
	    {
		    get
		    {
			    return GetColumnValue<string>("ERPTYPE");
		    }
            set 
		    {
			    SetColumnValue("ERPTYPE", value);
            }
        }
	      
        [XmlAttribute("Scjhdd")]
        [Bindable(true)]
        public string Scjhdd 
	    {
		    get
		    {
			    return GetColumnValue<string>("scjhdd");
		    }
            set 
		    {
			    SetColumnValue("scjhdd", value);
            }
        }
	      
        [XmlAttribute("C")]
        [Bindable(true)]
        public string C 
	    {
		    get
		    {
			    return GetColumnValue<string>("c");
		    }
            set 
		    {
			    SetColumnValue("c", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Id = @"id";
            
            public static string Schtbh = @"SCHTBH";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string Scggxh = @"SCGGXH";
            
            public static string Dtxtwpmc = @"DTXTWPMC";
            
            public static string WPSXLB19 = @"WPSXLB19";
            
            public static string Xtwpys = @"XTWPYS";
            
            public static string Scqdrq = @"SCQDRQ";
            
            public static string Scjhrq = @"SCJHRQ";
            
            public static string Xttxhm = @"XTTXHM";
            
            public static string Schtsl = @"SCHTSL";
            
            public static string Scggbz = @"SCGGBZ";
            
            public static string Sckhxm = @"SCKHXM";
            
            public static string Sjbh = @"SJBH";
            
            public static string Xtxmdm = @"XTXMDM";
            
            public static string Scytdm = @"SCYTDM";
            
            public static string Scytmc = @"SCYTMC";
            
            public static string Flnm = @"FLNM";
            
            public static string Xtwpmc = @"XTWPMC";
            
            public static string Xtwpxh = @"XTWPXH";
            
            public static string Erptype = @"ERPTYPE";
            
            public static string Scjhdd = @"scjhdd";
            
            public static string C = @"c";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
