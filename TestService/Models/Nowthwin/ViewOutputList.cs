using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Model{
    /// <summary>
    /// Strongly-typed collection for the ViewOutputList class.
    /// </summary>
    [Serializable]
    public partial class ViewOutputListCollection : ReadOnlyList<ViewOutputList, ViewOutputListCollection>
    {        
        public ViewOutputListCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the View_OutputList view.
    /// </summary>
    [Serializable]
    public partial class ViewOutputList : ReadOnlyRecord<ViewOutputList>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("View_OutputList", TableType.View, DataService.GetInstance("Nowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarResources = new TableSchema.TableColumn(schema);
                colvarResources.ColumnName = "Resources";
                colvarResources.DataType = DbType.AnsiString;
                colvarResources.MaxLength = 50;
                colvarResources.AutoIncrement = false;
                colvarResources.IsNullable = true;
                colvarResources.IsPrimaryKey = false;
                colvarResources.IsForeignKey = false;
                colvarResources.IsReadOnly = false;
                
                schema.Columns.Add(colvarResources);
                
                TableSchema.TableColumn colvarOrderId = new TableSchema.TableColumn(schema);
                colvarOrderId.ColumnName = "orderId";
                colvarOrderId.DataType = DbType.String;
                colvarOrderId.MaxLength = 100;
                colvarOrderId.AutoIncrement = false;
                colvarOrderId.IsNullable = false;
                colvarOrderId.IsPrimaryKey = false;
                colvarOrderId.IsForeignKey = false;
                colvarOrderId.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderId);
                
                TableSchema.TableColumn colvarJobCode = new TableSchema.TableColumn(schema);
                colvarJobCode.ColumnName = "jobCode";
                colvarJobCode.DataType = DbType.String;
                colvarJobCode.MaxLength = 100;
                colvarJobCode.AutoIncrement = false;
                colvarJobCode.IsNullable = false;
                colvarJobCode.IsPrimaryKey = false;
                colvarJobCode.IsForeignKey = false;
                colvarJobCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobCode);
                
                TableSchema.TableColumn colvarProject = new TableSchema.TableColumn(schema);
                colvarProject.ColumnName = "project";
                colvarProject.DataType = DbType.String;
                colvarProject.MaxLength = 20;
                colvarProject.AutoIncrement = false;
                colvarProject.IsNullable = true;
                colvarProject.IsPrimaryKey = false;
                colvarProject.IsForeignKey = false;
                colvarProject.IsReadOnly = false;
                
                schema.Columns.Add(colvarProject);
                
                TableSchema.TableColumn colvarOrderType = new TableSchema.TableColumn(schema);
                colvarOrderType.ColumnName = "orderType";
                colvarOrderType.DataType = DbType.String;
                colvarOrderType.MaxLength = 20;
                colvarOrderType.AutoIncrement = false;
                colvarOrderType.IsNullable = true;
                colvarOrderType.IsPrimaryKey = false;
                colvarOrderType.IsForeignKey = false;
                colvarOrderType.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderType);
                
                TableSchema.TableColumn colvarCoatType = new TableSchema.TableColumn(schema);
                colvarCoatType.ColumnName = "coatType";
                colvarCoatType.DataType = DbType.String;
                colvarCoatType.MaxLength = 100;
                colvarCoatType.AutoIncrement = false;
                colvarCoatType.IsNullable = true;
                colvarCoatType.IsPrimaryKey = false;
                colvarCoatType.IsForeignKey = false;
                colvarCoatType.IsReadOnly = false;
                
                schema.Columns.Add(colvarCoatType);
                
                TableSchema.TableColumn colvarBodyType = new TableSchema.TableColumn(schema);
                colvarBodyType.ColumnName = "bodyType";
                colvarBodyType.DataType = DbType.String;
                colvarBodyType.MaxLength = 100;
                colvarBodyType.AutoIncrement = false;
                colvarBodyType.IsNullable = true;
                colvarBodyType.IsPrimaryKey = false;
                colvarBodyType.IsForeignKey = false;
                colvarBodyType.IsReadOnly = false;
                
                schema.Columns.Add(colvarBodyType);
                
                TableSchema.TableColumn colvarFabric = new TableSchema.TableColumn(schema);
                colvarFabric.ColumnName = "fabric";
                colvarFabric.DataType = DbType.String;
                colvarFabric.MaxLength = 100;
                colvarFabric.AutoIncrement = false;
                colvarFabric.IsNullable = true;
                colvarFabric.IsPrimaryKey = false;
                colvarFabric.IsForeignKey = false;
                colvarFabric.IsReadOnly = false;
                
                schema.Columns.Add(colvarFabric);
                
                TableSchema.TableColumn colvarOrderTime = new TableSchema.TableColumn(schema);
                colvarOrderTime.ColumnName = "orderTime";
                colvarOrderTime.DataType = DbType.DateTime;
                colvarOrderTime.MaxLength = 0;
                colvarOrderTime.AutoIncrement = false;
                colvarOrderTime.IsNullable = true;
                colvarOrderTime.IsPrimaryKey = false;
                colvarOrderTime.IsForeignKey = false;
                colvarOrderTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderTime);
                
                TableSchema.TableColumn colvarDeliveryTime = new TableSchema.TableColumn(schema);
                colvarDeliveryTime.ColumnName = "deliveryTime";
                colvarDeliveryTime.DataType = DbType.DateTime;
                colvarDeliveryTime.MaxLength = 0;
                colvarDeliveryTime.AutoIncrement = false;
                colvarDeliveryTime.IsNullable = true;
                colvarDeliveryTime.IsPrimaryKey = false;
                colvarDeliveryTime.IsForeignKey = false;
                colvarDeliveryTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryTime);
                
                TableSchema.TableColumn colvarSpecialTime = new TableSchema.TableColumn(schema);
                colvarSpecialTime.ColumnName = "specialTime";
                colvarSpecialTime.DataType = DbType.Int32;
                colvarSpecialTime.MaxLength = 0;
                colvarSpecialTime.AutoIncrement = false;
                colvarSpecialTime.IsNullable = true;
                colvarSpecialTime.IsPrimaryKey = false;
                colvarSpecialTime.IsForeignKey = false;
                colvarSpecialTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarSpecialTime);
                
                TableSchema.TableColumn colvarSpecialCode = new TableSchema.TableColumn(schema);
                colvarSpecialCode.ColumnName = "specialCode";
                colvarSpecialCode.DataType = DbType.String;
                colvarSpecialCode.MaxLength = 100;
                colvarSpecialCode.AutoIncrement = false;
                colvarSpecialCode.IsNullable = true;
                colvarSpecialCode.IsPrimaryKey = false;
                colvarSpecialCode.IsForeignKey = false;
                colvarSpecialCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarSpecialCode);
                
                TableSchema.TableColumn colvarStyles = new TableSchema.TableColumn(schema);
                colvarStyles.ColumnName = "styles";
                colvarStyles.DataType = DbType.String;
                colvarStyles.MaxLength = 100;
                colvarStyles.AutoIncrement = false;
                colvarStyles.IsNullable = true;
                colvarStyles.IsPrimaryKey = false;
                colvarStyles.IsForeignKey = false;
                colvarStyles.IsReadOnly = false;
                
                schema.Columns.Add(colvarStyles);
                
                TableSchema.TableColumn colvarStylesResult = new TableSchema.TableColumn(schema);
                colvarStylesResult.ColumnName = "stylesResult";
                colvarStylesResult.DataType = DbType.String;
                colvarStylesResult.MaxLength = 200;
                colvarStylesResult.AutoIncrement = false;
                colvarStylesResult.IsNullable = true;
                colvarStylesResult.IsPrimaryKey = false;
                colvarStylesResult.IsForeignKey = false;
                colvarStylesResult.IsReadOnly = false;
                
                schema.Columns.Add(colvarStylesResult);
                
                TableSchema.TableColumn colvarNumbers = new TableSchema.TableColumn(schema);
                colvarNumbers.ColumnName = "numbers";
                colvarNumbers.DataType = DbType.Int32;
                colvarNumbers.MaxLength = 0;
                colvarNumbers.AutoIncrement = false;
                colvarNumbers.IsNullable = true;
                colvarNumbers.IsPrimaryKey = false;
                colvarNumbers.IsForeignKey = false;
                colvarNumbers.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumbers);
                
                TableSchema.TableColumn colvarPlanNum = new TableSchema.TableColumn(schema);
                colvarPlanNum.ColumnName = "planNum";
                colvarPlanNum.DataType = DbType.Int32;
                colvarPlanNum.MaxLength = 0;
                colvarPlanNum.AutoIncrement = false;
                colvarPlanNum.IsNullable = true;
                colvarPlanNum.IsPrimaryKey = false;
                colvarPlanNum.IsForeignKey = false;
                colvarPlanNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarPlanNum);
                
                TableSchema.TableColumn colvarSupportingWay = new TableSchema.TableColumn(schema);
                colvarSupportingWay.ColumnName = "supportingWay";
                colvarSupportingWay.DataType = DbType.String;
                colvarSupportingWay.MaxLength = 100;
                colvarSupportingWay.AutoIncrement = false;
                colvarSupportingWay.IsNullable = true;
                colvarSupportingWay.IsPrimaryKey = false;
                colvarSupportingWay.IsForeignKey = false;
                colvarSupportingWay.IsReadOnly = false;
                
                schema.Columns.Add(colvarSupportingWay);
                
                TableSchema.TableColumn colvarWorkinfo = new TableSchema.TableColumn(schema);
                colvarWorkinfo.ColumnName = "workinfo";
                colvarWorkinfo.DataType = DbType.Int32;
                colvarWorkinfo.MaxLength = 0;
                colvarWorkinfo.AutoIncrement = false;
                colvarWorkinfo.IsNullable = true;
                colvarWorkinfo.IsPrimaryKey = false;
                colvarWorkinfo.IsForeignKey = false;
                colvarWorkinfo.IsReadOnly = false;
                
                schema.Columns.Add(colvarWorkinfo);
                
                TableSchema.TableColumn colvarOrderNo = new TableSchema.TableColumn(schema);
                colvarOrderNo.ColumnName = "orderNo";
                colvarOrderNo.DataType = DbType.String;
                colvarOrderNo.MaxLength = 100;
                colvarOrderNo.AutoIncrement = false;
                colvarOrderNo.IsNullable = true;
                colvarOrderNo.IsPrimaryKey = false;
                colvarOrderNo.IsForeignKey = false;
                colvarOrderNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNo);
                
                TableSchema.TableColumn colvarCustomer = new TableSchema.TableColumn(schema);
                colvarCustomer.ColumnName = "customer";
                colvarCustomer.DataType = DbType.String;
                colvarCustomer.MaxLength = 200;
                colvarCustomer.AutoIncrement = false;
                colvarCustomer.IsNullable = true;
                colvarCustomer.IsPrimaryKey = false;
                colvarCustomer.IsForeignKey = false;
                colvarCustomer.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomer);
                
                TableSchema.TableColumn colvarOriginalCode = new TableSchema.TableColumn(schema);
                colvarOriginalCode.ColumnName = "originalCode";
                colvarOriginalCode.DataType = DbType.String;
                colvarOriginalCode.MaxLength = 100;
                colvarOriginalCode.AutoIncrement = false;
                colvarOriginalCode.IsNullable = true;
                colvarOriginalCode.IsPrimaryKey = false;
                colvarOriginalCode.IsForeignKey = false;
                colvarOriginalCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginalCode);
                
                TableSchema.TableColumn colvarAbnormal = new TableSchema.TableColumn(schema);
                colvarAbnormal.ColumnName = "abnormal";
                colvarAbnormal.DataType = DbType.String;
                colvarAbnormal.MaxLength = 100;
                colvarAbnormal.AutoIncrement = false;
                colvarAbnormal.IsNullable = true;
                colvarAbnormal.IsPrimaryKey = false;
                colvarAbnormal.IsForeignKey = false;
                colvarAbnormal.IsReadOnly = false;
                
                schema.Columns.Add(colvarAbnormal);
                
                TableSchema.TableColumn colvarNote = new TableSchema.TableColumn(schema);
                colvarNote.ColumnName = "note";
                colvarNote.DataType = DbType.String;
                colvarNote.MaxLength = 200;
                colvarNote.AutoIncrement = false;
                colvarNote.IsNullable = true;
                colvarNote.IsPrimaryKey = false;
                colvarNote.IsForeignKey = false;
                colvarNote.IsReadOnly = false;
                
                schema.Columns.Add(colvarNote);
                
                TableSchema.TableColumn colvarExpr1 = new TableSchema.TableColumn(schema);
                colvarExpr1.ColumnName = "Expr1";
                colvarExpr1.DataType = DbType.String;
                colvarExpr1.MaxLength = 1000;
                colvarExpr1.AutoIncrement = false;
                colvarExpr1.IsNullable = true;
                colvarExpr1.IsPrimaryKey = false;
                colvarExpr1.IsForeignKey = false;
                colvarExpr1.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpr1);
                
                TableSchema.TableColumn colvarBeginTime = new TableSchema.TableColumn(schema);
                colvarBeginTime.ColumnName = "beginTime";
                colvarBeginTime.DataType = DbType.DateTime;
                colvarBeginTime.MaxLength = 0;
                colvarBeginTime.AutoIncrement = false;
                colvarBeginTime.IsNullable = true;
                colvarBeginTime.IsPrimaryKey = false;
                colvarBeginTime.IsForeignKey = false;
                colvarBeginTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarBeginTime);
                
                TableSchema.TableColumn colvarEndTime = new TableSchema.TableColumn(schema);
                colvarEndTime.ColumnName = "endTime";
                colvarEndTime.DataType = DbType.DateTime;
                colvarEndTime.MaxLength = 0;
                colvarEndTime.AutoIncrement = false;
                colvarEndTime.IsNullable = true;
                colvarEndTime.IsPrimaryKey = false;
                colvarEndTime.IsForeignKey = false;
                colvarEndTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarEndTime);
                
                TableSchema.TableColumn colvarMakeTime = new TableSchema.TableColumn(schema);
                colvarMakeTime.ColumnName = "makeTime";
                colvarMakeTime.DataType = DbType.String;
                colvarMakeTime.MaxLength = 100;
                colvarMakeTime.AutoIncrement = false;
                colvarMakeTime.IsNullable = true;
                colvarMakeTime.IsPrimaryKey = false;
                colvarMakeTime.IsForeignKey = false;
                colvarMakeTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarMakeTime);
                
                TableSchema.TableColumn colvarCreateDate = new TableSchema.TableColumn(schema);
                colvarCreateDate.ColumnName = "createDate";
                colvarCreateDate.DataType = DbType.DateTime;
                colvarCreateDate.MaxLength = 0;
                colvarCreateDate.AutoIncrement = false;
                colvarCreateDate.IsNullable = true;
                colvarCreateDate.IsPrimaryKey = false;
                colvarCreateDate.IsForeignKey = false;
                colvarCreateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateDate);
                
                TableSchema.TableColumn colvarPbcd = new TableSchema.TableColumn(schema);
                colvarPbcd.ColumnName = "pbcd";
                colvarPbcd.DataType = DbType.String;
                colvarPbcd.MaxLength = 100;
                colvarPbcd.AutoIncrement = false;
                colvarPbcd.IsNullable = true;
                colvarPbcd.IsPrimaryKey = false;
                colvarPbcd.IsForeignKey = false;
                colvarPbcd.IsReadOnly = false;
                
                schema.Columns.Add(colvarPbcd);
                
                TableSchema.TableColumn colvarGydm = new TableSchema.TableColumn(schema);
                colvarGydm.ColumnName = "gydm";
                colvarGydm.DataType = DbType.String;
                colvarGydm.MaxLength = 200;
                colvarGydm.AutoIncrement = false;
                colvarGydm.IsNullable = true;
                colvarGydm.IsPrimaryKey = false;
                colvarGydm.IsForeignKey = false;
                colvarGydm.IsReadOnly = false;
                
                schema.Columns.Add(colvarGydm);
                
                TableSchema.TableColumn colvarScjhdd = new TableSchema.TableColumn(schema);
                colvarScjhdd.ColumnName = "scjhdd";
                colvarScjhdd.DataType = DbType.String;
                colvarScjhdd.MaxLength = 100;
                colvarScjhdd.AutoIncrement = false;
                colvarScjhdd.IsNullable = true;
                colvarScjhdd.IsPrimaryKey = false;
                colvarScjhdd.IsForeignKey = false;
                colvarScjhdd.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhdd);
                
                TableSchema.TableColumn colvarFlagStatus = new TableSchema.TableColumn(schema);
                colvarFlagStatus.ColumnName = "flagStatus";
                colvarFlagStatus.DataType = DbType.Int32;
                colvarFlagStatus.MaxLength = 0;
                colvarFlagStatus.AutoIncrement = false;
                colvarFlagStatus.IsNullable = true;
                colvarFlagStatus.IsPrimaryKey = false;
                colvarFlagStatus.IsForeignKey = false;
                colvarFlagStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlagStatus);
                
                TableSchema.TableColumn colvarSfyp = new TableSchema.TableColumn(schema);
                colvarSfyp.ColumnName = "sfyp";
                colvarSfyp.DataType = DbType.String;
                colvarSfyp.MaxLength = 100;
                colvarSfyp.AutoIncrement = false;
                colvarSfyp.IsNullable = true;
                colvarSfyp.IsPrimaryKey = false;
                colvarSfyp.IsForeignKey = false;
                colvarSfyp.IsReadOnly = false;
                
                schema.Columns.Add(colvarSfyp);
                
                TableSchema.TableColumn colvarSfjj = new TableSchema.TableColumn(schema);
                colvarSfjj.ColumnName = "sfjj";
                colvarSfjj.DataType = DbType.String;
                colvarSfjj.MaxLength = 100;
                colvarSfjj.AutoIncrement = false;
                colvarSfjj.IsNullable = true;
                colvarSfjj.IsPrimaryKey = false;
                colvarSfjj.IsForeignKey = false;
                colvarSfjj.IsReadOnly = false;
                
                schema.Columns.Add(colvarSfjj);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 100;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = true;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarClothType = new TableSchema.TableColumn(schema);
                colvarClothType.ColumnName = "ClothType";
                colvarClothType.DataType = DbType.String;
                colvarClothType.MaxLength = 100;
                colvarClothType.AutoIncrement = false;
                colvarClothType.IsNullable = true;
                colvarClothType.IsPrimaryKey = false;
                colvarClothType.IsForeignKey = false;
                colvarClothType.IsReadOnly = false;
                
                schema.Columns.Add(colvarClothType);
                
                TableSchema.TableColumn colvarTzecode = new TableSchema.TableColumn(schema);
                colvarTzecode.ColumnName = "tzecode";
                colvarTzecode.DataType = DbType.String;
                colvarTzecode.MaxLength = 100;
                colvarTzecode.AutoIncrement = false;
                colvarTzecode.IsNullable = true;
                colvarTzecode.IsPrimaryKey = false;
                colvarTzecode.IsForeignKey = false;
                colvarTzecode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTzecode);
                
                TableSchema.TableColumn colvarExpr2 = new TableSchema.TableColumn(schema);
                colvarExpr2.ColumnName = "Expr2";
                colvarExpr2.DataType = DbType.AnsiString;
                colvarExpr2.MaxLength = 10;
                colvarExpr2.AutoIncrement = false;
                colvarExpr2.IsNullable = false;
                colvarExpr2.IsPrimaryKey = false;
                colvarExpr2.IsForeignKey = false;
                colvarExpr2.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpr2);
                
                TableSchema.TableColumn colvarResourcesCode = new TableSchema.TableColumn(schema);
                colvarResourcesCode.ColumnName = "resourcesCode";
                colvarResourcesCode.DataType = DbType.AnsiString;
                colvarResourcesCode.MaxLength = 50;
                colvarResourcesCode.AutoIncrement = false;
                colvarResourcesCode.IsNullable = false;
                colvarResourcesCode.IsPrimaryKey = false;
                colvarResourcesCode.IsForeignKey = false;
                colvarResourcesCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarResourcesCode);
                
                TableSchema.TableColumn colvarResourcesName = new TableSchema.TableColumn(schema);
                colvarResourcesName.ColumnName = "resourcesName";
                colvarResourcesName.DataType = DbType.AnsiString;
                colvarResourcesName.MaxLength = 50;
                colvarResourcesName.AutoIncrement = false;
                colvarResourcesName.IsNullable = true;
                colvarResourcesName.IsPrimaryKey = false;
                colvarResourcesName.IsForeignKey = false;
                colvarResourcesName.IsReadOnly = false;
                
                schema.Columns.Add(colvarResourcesName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Nowthwin"].AddSchema("View_OutputList",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewOutputList()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewOutputList(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewOutputList(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewOutputList(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Resources")]
        [Bindable(true)]
        public string Resources 
	    {
		    get
		    {
			    return GetColumnValue<string>("Resources");
		    }
            set 
		    {
			    SetColumnValue("Resources", value);
            }
        }
	      
        [XmlAttribute("OrderId")]
        [Bindable(true)]
        public string OrderId 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderId");
		    }
            set 
		    {
			    SetColumnValue("orderId", value);
            }
        }
	      
        [XmlAttribute("JobCode")]
        [Bindable(true)]
        public string JobCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("jobCode");
		    }
            set 
		    {
			    SetColumnValue("jobCode", value);
            }
        }
	      
        [XmlAttribute("Project")]
        [Bindable(true)]
        public string Project 
	    {
		    get
		    {
			    return GetColumnValue<string>("project");
		    }
            set 
		    {
			    SetColumnValue("project", value);
            }
        }
	      
        [XmlAttribute("OrderType")]
        [Bindable(true)]
        public string OrderType 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderType");
		    }
            set 
		    {
			    SetColumnValue("orderType", value);
            }
        }
	      
        [XmlAttribute("CoatType")]
        [Bindable(true)]
        public string CoatType 
	    {
		    get
		    {
			    return GetColumnValue<string>("coatType");
		    }
            set 
		    {
			    SetColumnValue("coatType", value);
            }
        }
	      
        [XmlAttribute("BodyType")]
        [Bindable(true)]
        public string BodyType 
	    {
		    get
		    {
			    return GetColumnValue<string>("bodyType");
		    }
            set 
		    {
			    SetColumnValue("bodyType", value);
            }
        }
	      
        [XmlAttribute("Fabric")]
        [Bindable(true)]
        public string Fabric 
	    {
		    get
		    {
			    return GetColumnValue<string>("fabric");
		    }
            set 
		    {
			    SetColumnValue("fabric", value);
            }
        }
	      
        [XmlAttribute("OrderTime")]
        [Bindable(true)]
        public DateTime? OrderTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("orderTime");
		    }
            set 
		    {
			    SetColumnValue("orderTime", value);
            }
        }
	      
        [XmlAttribute("DeliveryTime")]
        [Bindable(true)]
        public DateTime? DeliveryTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("deliveryTime");
		    }
            set 
		    {
			    SetColumnValue("deliveryTime", value);
            }
        }
	      
        [XmlAttribute("SpecialTime")]
        [Bindable(true)]
        public int? SpecialTime 
	    {
		    get
		    {
			    return GetColumnValue<int?>("specialTime");
		    }
            set 
		    {
			    SetColumnValue("specialTime", value);
            }
        }
	      
        [XmlAttribute("SpecialCode")]
        [Bindable(true)]
        public string SpecialCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("specialCode");
		    }
            set 
		    {
			    SetColumnValue("specialCode", value);
            }
        }
	      
        [XmlAttribute("Styles")]
        [Bindable(true)]
        public string Styles 
	    {
		    get
		    {
			    return GetColumnValue<string>("styles");
		    }
            set 
		    {
			    SetColumnValue("styles", value);
            }
        }
	      
        [XmlAttribute("StylesResult")]
        [Bindable(true)]
        public string StylesResult 
	    {
		    get
		    {
			    return GetColumnValue<string>("stylesResult");
		    }
            set 
		    {
			    SetColumnValue("stylesResult", value);
            }
        }
	      
        [XmlAttribute("Numbers")]
        [Bindable(true)]
        public int? Numbers 
	    {
		    get
		    {
			    return GetColumnValue<int?>("numbers");
		    }
            set 
		    {
			    SetColumnValue("numbers", value);
            }
        }
	      
        [XmlAttribute("PlanNum")]
        [Bindable(true)]
        public int? PlanNum 
	    {
		    get
		    {
			    return GetColumnValue<int?>("planNum");
		    }
            set 
		    {
			    SetColumnValue("planNum", value);
            }
        }
	      
        [XmlAttribute("SupportingWay")]
        [Bindable(true)]
        public string SupportingWay 
	    {
		    get
		    {
			    return GetColumnValue<string>("supportingWay");
		    }
            set 
		    {
			    SetColumnValue("supportingWay", value);
            }
        }
	      
        [XmlAttribute("Workinfo")]
        [Bindable(true)]
        public int? Workinfo 
	    {
		    get
		    {
			    return GetColumnValue<int?>("workinfo");
		    }
            set 
		    {
			    SetColumnValue("workinfo", value);
            }
        }
	      
        [XmlAttribute("OrderNo")]
        [Bindable(true)]
        public string OrderNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderNo");
		    }
            set 
		    {
			    SetColumnValue("orderNo", value);
            }
        }
	      
        [XmlAttribute("Customer")]
        [Bindable(true)]
        public string Customer 
	    {
		    get
		    {
			    return GetColumnValue<string>("customer");
		    }
            set 
		    {
			    SetColumnValue("customer", value);
            }
        }
	      
        [XmlAttribute("OriginalCode")]
        [Bindable(true)]
        public string OriginalCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("originalCode");
		    }
            set 
		    {
			    SetColumnValue("originalCode", value);
            }
        }
	      
        [XmlAttribute("Abnormal")]
        [Bindable(true)]
        public string Abnormal 
	    {
		    get
		    {
			    return GetColumnValue<string>("abnormal");
		    }
            set 
		    {
			    SetColumnValue("abnormal", value);
            }
        }
	      
        [XmlAttribute("Note")]
        [Bindable(true)]
        public string Note 
	    {
		    get
		    {
			    return GetColumnValue<string>("note");
		    }
            set 
		    {
			    SetColumnValue("note", value);
            }
        }
	      
        [XmlAttribute("Expr1")]
        [Bindable(true)]
        public string Expr1 
	    {
		    get
		    {
			    return GetColumnValue<string>("Expr1");
		    }
            set 
		    {
			    SetColumnValue("Expr1", value);
            }
        }
	      
        [XmlAttribute("BeginTime")]
        [Bindable(true)]
        public DateTime? BeginTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("beginTime");
		    }
            set 
		    {
			    SetColumnValue("beginTime", value);
            }
        }
	      
        [XmlAttribute("EndTime")]
        [Bindable(true)]
        public DateTime? EndTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("endTime");
		    }
            set 
		    {
			    SetColumnValue("endTime", value);
            }
        }
	      
        [XmlAttribute("MakeTime")]
        [Bindable(true)]
        public string MakeTime 
	    {
		    get
		    {
			    return GetColumnValue<string>("makeTime");
		    }
            set 
		    {
			    SetColumnValue("makeTime", value);
            }
        }
	      
        [XmlAttribute("CreateDate")]
        [Bindable(true)]
        public DateTime? CreateDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("createDate");
		    }
            set 
		    {
			    SetColumnValue("createDate", value);
            }
        }
	      
        [XmlAttribute("Pbcd")]
        [Bindable(true)]
        public string Pbcd 
	    {
		    get
		    {
			    return GetColumnValue<string>("pbcd");
		    }
            set 
		    {
			    SetColumnValue("pbcd", value);
            }
        }
	      
        [XmlAttribute("Gydm")]
        [Bindable(true)]
        public string Gydm 
	    {
		    get
		    {
			    return GetColumnValue<string>("gydm");
		    }
            set 
		    {
			    SetColumnValue("gydm", value);
            }
        }
	      
        [XmlAttribute("Scjhdd")]
        [Bindable(true)]
        public string Scjhdd 
	    {
		    get
		    {
			    return GetColumnValue<string>("scjhdd");
		    }
            set 
		    {
			    SetColumnValue("scjhdd", value);
            }
        }
	      
        [XmlAttribute("FlagStatus")]
        [Bindable(true)]
        public int? FlagStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("flagStatus");
		    }
            set 
		    {
			    SetColumnValue("flagStatus", value);
            }
        }
	      
        [XmlAttribute("Sfyp")]
        [Bindable(true)]
        public string Sfyp 
	    {
		    get
		    {
			    return GetColumnValue<string>("sfyp");
		    }
            set 
		    {
			    SetColumnValue("sfyp", value);
            }
        }
	      
        [XmlAttribute("Sfjj")]
        [Bindable(true)]
        public string Sfjj 
	    {
		    get
		    {
			    return GetColumnValue<string>("sfjj");
		    }
            set 
		    {
			    SetColumnValue("sfjj", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("ClothType")]
        [Bindable(true)]
        public string ClothType 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClothType");
		    }
            set 
		    {
			    SetColumnValue("ClothType", value);
            }
        }
	      
        [XmlAttribute("Tzecode")]
        [Bindable(true)]
        public string Tzecode 
	    {
		    get
		    {
			    return GetColumnValue<string>("tzecode");
		    }
            set 
		    {
			    SetColumnValue("tzecode", value);
            }
        }
	      
        [XmlAttribute("Expr2")]
        [Bindable(true)]
        public string Expr2 
	    {
		    get
		    {
			    return GetColumnValue<string>("Expr2");
		    }
            set 
		    {
			    SetColumnValue("Expr2", value);
            }
        }
	      
        [XmlAttribute("ResourcesCode")]
        [Bindable(true)]
        public string ResourcesCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("resourcesCode");
		    }
            set 
		    {
			    SetColumnValue("resourcesCode", value);
            }
        }
	      
        [XmlAttribute("ResourcesName")]
        [Bindable(true)]
        public string ResourcesName 
	    {
		    get
		    {
			    return GetColumnValue<string>("resourcesName");
		    }
            set 
		    {
			    SetColumnValue("resourcesName", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Resources = @"Resources";
            
            public static string OrderId = @"orderId";
            
            public static string JobCode = @"jobCode";
            
            public static string Project = @"project";
            
            public static string OrderType = @"orderType";
            
            public static string CoatType = @"coatType";
            
            public static string BodyType = @"bodyType";
            
            public static string Fabric = @"fabric";
            
            public static string OrderTime = @"orderTime";
            
            public static string DeliveryTime = @"deliveryTime";
            
            public static string SpecialTime = @"specialTime";
            
            public static string SpecialCode = @"specialCode";
            
            public static string Styles = @"styles";
            
            public static string StylesResult = @"stylesResult";
            
            public static string Numbers = @"numbers";
            
            public static string PlanNum = @"planNum";
            
            public static string SupportingWay = @"supportingWay";
            
            public static string Workinfo = @"workinfo";
            
            public static string OrderNo = @"orderNo";
            
            public static string Customer = @"customer";
            
            public static string OriginalCode = @"originalCode";
            
            public static string Abnormal = @"abnormal";
            
            public static string Note = @"note";
            
            public static string Expr1 = @"Expr1";
            
            public static string BeginTime = @"beginTime";
            
            public static string EndTime = @"endTime";
            
            public static string MakeTime = @"makeTime";
            
            public static string CreateDate = @"createDate";
            
            public static string Pbcd = @"pbcd";
            
            public static string Gydm = @"gydm";
            
            public static string Scjhdd = @"scjhdd";
            
            public static string FlagStatus = @"flagStatus";
            
            public static string Sfyp = @"sfyp";
            
            public static string Sfjj = @"sfjj";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string ClothType = @"ClothType";
            
            public static string Tzecode = @"tzecode";
            
            public static string Expr2 = @"Expr2";
            
            public static string ResourcesCode = @"resourcesCode";
            
            public static string ResourcesName = @"resourcesName";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
