using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData{
    /// <summary>
    /// Strongly-typed collection for the ViewOderArtHour class.
    /// </summary>
    [Serializable]
    public partial class ViewOderArtHourCollection : ReadOnlyList<ViewOderArtHour, ViewOderArtHourCollection>
    {        
        public ViewOderArtHourCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the View_OderArtHour view.
    /// </summary>
    [Serializable]
    public partial class ViewOderArtHour : ReadOnlyRecord<ViewOderArtHour>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("View_OderArtHour", TableType.View, DataService.GetInstance("Nowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarMxid = new TableSchema.TableColumn(schema);
                colvarMxid.ColumnName = "mxid";
                colvarMxid.DataType = DbType.Int32;
                colvarMxid.MaxLength = 0;
                colvarMxid.AutoIncrement = false;
                colvarMxid.IsNullable = false;
                colvarMxid.IsPrimaryKey = false;
                colvarMxid.IsForeignKey = false;
                colvarMxid.IsReadOnly = false;
                
                schema.Columns.Add(colvarMxid);
                
                TableSchema.TableColumn colvarOrderid = new TableSchema.TableColumn(schema);
                colvarOrderid.ColumnName = "orderid";
                colvarOrderid.DataType = DbType.Int32;
                colvarOrderid.MaxLength = 0;
                colvarOrderid.AutoIncrement = false;
                colvarOrderid.IsNullable = true;
                colvarOrderid.IsPrimaryKey = false;
                colvarOrderid.IsForeignKey = false;
                colvarOrderid.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderid);
                
                TableSchema.TableColumn colvarKhdh = new TableSchema.TableColumn(schema);
                colvarKhdh.ColumnName = "khdh";
                colvarKhdh.DataType = DbType.String;
                colvarKhdh.MaxLength = 250;
                colvarKhdh.AutoIncrement = false;
                colvarKhdh.IsNullable = true;
                colvarKhdh.IsPrimaryKey = false;
                colvarKhdh.IsForeignKey = false;
                colvarKhdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarKhdh);
                
                TableSchema.TableColumn colvarKsh = new TableSchema.TableColumn(schema);
                colvarKsh.ColumnName = "ksh";
                colvarKsh.DataType = DbType.String;
                colvarKsh.MaxLength = 250;
                colvarKsh.AutoIncrement = false;
                colvarKsh.IsNullable = true;
                colvarKsh.IsPrimaryKey = false;
                colvarKsh.IsForeignKey = false;
                colvarKsh.IsReadOnly = false;
                
                schema.Columns.Add(colvarKsh);
                
                TableSchema.TableColumn colvarFzfl = new TableSchema.TableColumn(schema);
                colvarFzfl.ColumnName = "fzfl";
                colvarFzfl.DataType = DbType.String;
                colvarFzfl.MaxLength = 250;
                colvarFzfl.AutoIncrement = false;
                colvarFzfl.IsNullable = true;
                colvarFzfl.IsPrimaryKey = false;
                colvarFzfl.IsForeignKey = false;
                colvarFzfl.IsReadOnly = false;
                
                schema.Columns.Add(colvarFzfl);
                
                TableSchema.TableColumn colvarMlbm = new TableSchema.TableColumn(schema);
                colvarMlbm.ColumnName = "mlbm";
                colvarMlbm.DataType = DbType.String;
                colvarMlbm.MaxLength = 250;
                colvarMlbm.AutoIncrement = false;
                colvarMlbm.IsNullable = true;
                colvarMlbm.IsPrimaryKey = false;
                colvarMlbm.IsForeignKey = false;
                colvarMlbm.IsReadOnly = false;
                
                schema.Columns.Add(colvarMlbm);
                
                TableSchema.TableColumn colvarDdsl = new TableSchema.TableColumn(schema);
                colvarDdsl.ColumnName = "ddsl";
                colvarDdsl.DataType = DbType.Int32;
                colvarDdsl.MaxLength = 0;
                colvarDdsl.AutoIncrement = false;
                colvarDdsl.IsNullable = true;
                colvarDdsl.IsPrimaryKey = false;
                colvarDdsl.IsForeignKey = false;
                colvarDdsl.IsReadOnly = false;
                
                schema.Columns.Add(colvarDdsl);
                
                TableSchema.TableColumn colvarHxjg = new TableSchema.TableColumn(schema);
                colvarHxjg.ColumnName = "hxjg";
                colvarHxjg.DataType = DbType.String;
                colvarHxjg.MaxLength = 250;
                colvarHxjg.AutoIncrement = false;
                colvarHxjg.IsNullable = true;
                colvarHxjg.IsPrimaryKey = false;
                colvarHxjg.IsForeignKey = false;
                colvarHxjg.IsReadOnly = false;
                
                schema.Columns.Add(colvarHxjg);
                
                TableSchema.TableColumn colvarKsjg = new TableSchema.TableColumn(schema);
                colvarKsjg.ColumnName = "ksjg";
                colvarKsjg.DataType = DbType.String;
                colvarKsjg.MaxLength = 250;
                colvarKsjg.AutoIncrement = false;
                colvarKsjg.IsNullable = true;
                colvarKsjg.IsPrimaryKey = false;
                colvarKsjg.IsForeignKey = false;
                colvarKsjg.IsReadOnly = false;
                
                schema.Columns.Add(colvarKsjg);
                
                TableSchema.TableColumn colvarGylx = new TableSchema.TableColumn(schema);
                colvarGylx.ColumnName = "gylx";
                colvarGylx.DataType = DbType.String;
                colvarGylx.MaxLength = 250;
                colvarGylx.AutoIncrement = false;
                colvarGylx.IsNullable = true;
                colvarGylx.IsPrimaryKey = false;
                colvarGylx.IsForeignKey = false;
                colvarGylx.IsReadOnly = false;
                
                schema.Columns.Add(colvarGylx);
                
                TableSchema.TableColumn colvarSfbcpsy = new TableSchema.TableColumn(schema);
                colvarSfbcpsy.ColumnName = "sfbcpsy";
                colvarSfbcpsy.DataType = DbType.String;
                colvarSfbcpsy.MaxLength = 250;
                colvarSfbcpsy.AutoIncrement = false;
                colvarSfbcpsy.IsNullable = true;
                colvarSfbcpsy.IsPrimaryKey = false;
                colvarSfbcpsy.IsForeignKey = false;
                colvarSfbcpsy.IsReadOnly = false;
                
                schema.Columns.Add(colvarSfbcpsy);
                
                TableSchema.TableColumn colvarGyxx = new TableSchema.TableColumn(schema);
                colvarGyxx.ColumnName = "gyxx";
                colvarGyxx.DataType = DbType.AnsiString;
                colvarGyxx.MaxLength = 2147483647;
                colvarGyxx.AutoIncrement = false;
                colvarGyxx.IsNullable = true;
                colvarGyxx.IsPrimaryKey = false;
                colvarGyxx.IsForeignKey = false;
                colvarGyxx.IsReadOnly = false;
                
                schema.Columns.Add(colvarGyxx);
                
                TableSchema.TableColumn colvarXh = new TableSchema.TableColumn(schema);
                colvarXh.ColumnName = "xh";
                colvarXh.DataType = DbType.String;
                colvarXh.MaxLength = 250;
                colvarXh.AutoIncrement = false;
                colvarXh.IsNullable = true;
                colvarXh.IsPrimaryKey = false;
                colvarXh.IsForeignKey = false;
                colvarXh.IsReadOnly = false;
                
                schema.Columns.Add(colvarXh);
                
                TableSchema.TableColumn colvarXhsy = new TableSchema.TableColumn(schema);
                colvarXhsy.ColumnName = "xhsy";
                colvarXhsy.DataType = DbType.String;
                colvarXhsy.MaxLength = 250;
                colvarXhsy.AutoIncrement = false;
                colvarXhsy.IsNullable = true;
                colvarXhsy.IsPrimaryKey = false;
                colvarXhsy.IsForeignKey = false;
                colvarXhsy.IsReadOnly = false;
                
                schema.Columns.Add(colvarXhsy);
                
                TableSchema.TableColumn colvarXhnz = new TableSchema.TableColumn(schema);
                colvarXhnz.ColumnName = "xhnz";
                colvarXhnz.DataType = DbType.String;
                colvarXhnz.MaxLength = 250;
                colvarXhnz.AutoIncrement = false;
                colvarXhnz.IsNullable = true;
                colvarXhnz.IsPrimaryKey = false;
                colvarXhnz.IsForeignKey = false;
                colvarXhnz.IsReadOnly = false;
                
                schema.Columns.Add(colvarXhnz);
                
                TableSchema.TableColumn colvarXhwz = new TableSchema.TableColumn(schema);
                colvarXhwz.ColumnName = "xhwz";
                colvarXhwz.DataType = DbType.String;
                colvarXhwz.MaxLength = 250;
                colvarXhwz.AutoIncrement = false;
                colvarXhwz.IsNullable = true;
                colvarXhwz.IsPrimaryKey = false;
                colvarXhwz.IsForeignKey = false;
                colvarXhwz.IsReadOnly = false;
                
                schema.Columns.Add(colvarXhwz);
                
                TableSchema.TableColumn colvarMlsx = new TableSchema.TableColumn(schema);
                colvarMlsx.ColumnName = "mlsx";
                colvarMlsx.DataType = DbType.String;
                colvarMlsx.MaxLength = 250;
                colvarMlsx.AutoIncrement = false;
                colvarMlsx.IsNullable = true;
                colvarMlsx.IsPrimaryKey = false;
                colvarMlsx.IsForeignKey = false;
                colvarMlsx.IsReadOnly = false;
                
                schema.Columns.Add(colvarMlsx);
                
                TableSchema.TableColumn colvarFlagDelete = new TableSchema.TableColumn(schema);
                colvarFlagDelete.ColumnName = "flagDelete";
                colvarFlagDelete.DataType = DbType.Int32;
                colvarFlagDelete.MaxLength = 0;
                colvarFlagDelete.AutoIncrement = false;
                colvarFlagDelete.IsNullable = true;
                colvarFlagDelete.IsPrimaryKey = false;
                colvarFlagDelete.IsForeignKey = false;
                colvarFlagDelete.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlagDelete);
                
                TableSchema.TableColumn colvarNum = new TableSchema.TableColumn(schema);
                colvarNum.ColumnName = "num";
                colvarNum.DataType = DbType.Int32;
                colvarNum.MaxLength = 0;
                colvarNum.AutoIncrement = false;
                colvarNum.IsNullable = true;
                colvarNum.IsPrimaryKey = false;
                colvarNum.IsForeignKey = false;
                colvarNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarNum);
                
                TableSchema.TableColumn colvarFlagStatus = new TableSchema.TableColumn(schema);
                colvarFlagStatus.ColumnName = "flagStatus";
                colvarFlagStatus.DataType = DbType.Int32;
                colvarFlagStatus.MaxLength = 0;
                colvarFlagStatus.AutoIncrement = false;
                colvarFlagStatus.IsNullable = true;
                colvarFlagStatus.IsPrimaryKey = false;
                colvarFlagStatus.IsForeignKey = false;
                colvarFlagStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlagStatus);
                
                TableSchema.TableColumn colvarCode = new TableSchema.TableColumn(schema);
                colvarCode.ColumnName = "Code";
                colvarCode.DataType = DbType.String;
                colvarCode.MaxLength = 32;
                colvarCode.AutoIncrement = false;
                colvarCode.IsNullable = true;
                colvarCode.IsPrimaryKey = false;
                colvarCode.IsForeignKey = false;
                colvarCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarCode);
                
                TableSchema.TableColumn colvarHour = new TableSchema.TableColumn(schema);
                colvarHour.ColumnName = "Hour";
                colvarHour.DataType = DbType.Int32;
                colvarHour.MaxLength = 0;
                colvarHour.AutoIncrement = false;
                colvarHour.IsNullable = true;
                colvarHour.IsPrimaryKey = false;
                colvarHour.IsForeignKey = false;
                colvarHour.IsReadOnly = false;
                
                schema.Columns.Add(colvarHour);
                
                TableSchema.TableColumn colvarOrderArtslist = new TableSchema.TableColumn(schema);
                colvarOrderArtslist.ColumnName = "OrderArtslist";
                colvarOrderArtslist.DataType = DbType.String;
                colvarOrderArtslist.MaxLength = 1024;
                colvarOrderArtslist.AutoIncrement = false;
                colvarOrderArtslist.IsNullable = true;
                colvarOrderArtslist.IsPrimaryKey = false;
                colvarOrderArtslist.IsForeignKey = false;
                colvarOrderArtslist.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderArtslist);
                
                TableSchema.TableColumn colvarShortX = new TableSchema.TableColumn(schema);
                colvarShortX.ColumnName = "Short";
                colvarShortX.DataType = DbType.Int32;
                colvarShortX.MaxLength = 0;
                colvarShortX.AutoIncrement = false;
                colvarShortX.IsNullable = true;
                colvarShortX.IsPrimaryKey = false;
                colvarShortX.IsForeignKey = false;
                colvarShortX.IsReadOnly = false;
                
                schema.Columns.Add(colvarShortX);
                
                TableSchema.TableColumn colvarIsCrux = new TableSchema.TableColumn(schema);
                colvarIsCrux.ColumnName = "IsCrux";
                colvarIsCrux.DataType = DbType.Int32;
                colvarIsCrux.MaxLength = 0;
                colvarIsCrux.AutoIncrement = false;
                colvarIsCrux.IsNullable = true;
                colvarIsCrux.IsPrimaryKey = false;
                colvarIsCrux.IsForeignKey = false;
                colvarIsCrux.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsCrux);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Nowthwin"].AddSchema("View_OderArtHour",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewOderArtHour()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewOderArtHour(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewOderArtHour(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewOderArtHour(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Mxid")]
        [Bindable(true)]
        public int Mxid 
	    {
		    get
		    {
			    return GetColumnValue<int>("mxid");
		    }
            set 
		    {
			    SetColumnValue("mxid", value);
            }
        }
	      
        [XmlAttribute("Orderid")]
        [Bindable(true)]
        public int? Orderid 
	    {
		    get
		    {
			    return GetColumnValue<int?>("orderid");
		    }
            set 
		    {
			    SetColumnValue("orderid", value);
            }
        }
	      
        [XmlAttribute("Khdh")]
        [Bindable(true)]
        public string Khdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("khdh");
		    }
            set 
		    {
			    SetColumnValue("khdh", value);
            }
        }
	      
        [XmlAttribute("Ksh")]
        [Bindable(true)]
        public string Ksh 
	    {
		    get
		    {
			    return GetColumnValue<string>("ksh");
		    }
            set 
		    {
			    SetColumnValue("ksh", value);
            }
        }
	      
        [XmlAttribute("Fzfl")]
        [Bindable(true)]
        public string Fzfl 
	    {
		    get
		    {
			    return GetColumnValue<string>("fzfl");
		    }
            set 
		    {
			    SetColumnValue("fzfl", value);
            }
        }
	      
        [XmlAttribute("Mlbm")]
        [Bindable(true)]
        public string Mlbm 
	    {
		    get
		    {
			    return GetColumnValue<string>("mlbm");
		    }
            set 
		    {
			    SetColumnValue("mlbm", value);
            }
        }
	      
        [XmlAttribute("Ddsl")]
        [Bindable(true)]
        public int? Ddsl 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ddsl");
		    }
            set 
		    {
			    SetColumnValue("ddsl", value);
            }
        }
	      
        [XmlAttribute("Hxjg")]
        [Bindable(true)]
        public string Hxjg 
	    {
		    get
		    {
			    return GetColumnValue<string>("hxjg");
		    }
            set 
		    {
			    SetColumnValue("hxjg", value);
            }
        }
	      
        [XmlAttribute("Ksjg")]
        [Bindable(true)]
        public string Ksjg 
	    {
		    get
		    {
			    return GetColumnValue<string>("ksjg");
		    }
            set 
		    {
			    SetColumnValue("ksjg", value);
            }
        }
	      
        [XmlAttribute("Gylx")]
        [Bindable(true)]
        public string Gylx 
	    {
		    get
		    {
			    return GetColumnValue<string>("gylx");
		    }
            set 
		    {
			    SetColumnValue("gylx", value);
            }
        }
	      
        [XmlAttribute("Sfbcpsy")]
        [Bindable(true)]
        public string Sfbcpsy 
	    {
		    get
		    {
			    return GetColumnValue<string>("sfbcpsy");
		    }
            set 
		    {
			    SetColumnValue("sfbcpsy", value);
            }
        }
	      
        [XmlAttribute("Gyxx")]
        [Bindable(true)]
        public string Gyxx 
	    {
		    get
		    {
			    return GetColumnValue<string>("gyxx");
		    }
            set 
		    {
			    SetColumnValue("gyxx", value);
            }
        }
	      
        [XmlAttribute("Xh")]
        [Bindable(true)]
        public string Xh 
	    {
		    get
		    {
			    return GetColumnValue<string>("xh");
		    }
            set 
		    {
			    SetColumnValue("xh", value);
            }
        }
	      
        [XmlAttribute("Xhsy")]
        [Bindable(true)]
        public string Xhsy 
	    {
		    get
		    {
			    return GetColumnValue<string>("xhsy");
		    }
            set 
		    {
			    SetColumnValue("xhsy", value);
            }
        }
	      
        [XmlAttribute("Xhnz")]
        [Bindable(true)]
        public string Xhnz 
	    {
		    get
		    {
			    return GetColumnValue<string>("xhnz");
		    }
            set 
		    {
			    SetColumnValue("xhnz", value);
            }
        }
	      
        [XmlAttribute("Xhwz")]
        [Bindable(true)]
        public string Xhwz 
	    {
		    get
		    {
			    return GetColumnValue<string>("xhwz");
		    }
            set 
		    {
			    SetColumnValue("xhwz", value);
            }
        }
	      
        [XmlAttribute("Mlsx")]
        [Bindable(true)]
        public string Mlsx 
	    {
		    get
		    {
			    return GetColumnValue<string>("mlsx");
		    }
            set 
		    {
			    SetColumnValue("mlsx", value);
            }
        }
	      
        [XmlAttribute("FlagDelete")]
        [Bindable(true)]
        public int? FlagDelete 
	    {
		    get
		    {
			    return GetColumnValue<int?>("flagDelete");
		    }
            set 
		    {
			    SetColumnValue("flagDelete", value);
            }
        }
	      
        [XmlAttribute("Num")]
        [Bindable(true)]
        public int? Num 
	    {
		    get
		    {
			    return GetColumnValue<int?>("num");
		    }
            set 
		    {
			    SetColumnValue("num", value);
            }
        }
	      
        [XmlAttribute("FlagStatus")]
        [Bindable(true)]
        public int? FlagStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("flagStatus");
		    }
            set 
		    {
			    SetColumnValue("flagStatus", value);
            }
        }
	      
        [XmlAttribute("Code")]
        [Bindable(true)]
        public string Code 
	    {
		    get
		    {
			    return GetColumnValue<string>("Code");
		    }
            set 
		    {
			    SetColumnValue("Code", value);
            }
        }
	      
        [XmlAttribute("Hour")]
        [Bindable(true)]
        public int? Hour 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Hour");
		    }
            set 
		    {
			    SetColumnValue("Hour", value);
            }
        }
	      
        [XmlAttribute("OrderArtslist")]
        [Bindable(true)]
        public string OrderArtslist 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrderArtslist");
		    }
            set 
		    {
			    SetColumnValue("OrderArtslist", value);
            }
        }
	      
        [XmlAttribute("ShortX")]
        [Bindable(true)]
        public int? ShortX 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Short");
		    }
            set 
		    {
			    SetColumnValue("Short", value);
            }
        }
	      
        [XmlAttribute("IsCrux")]
        [Bindable(true)]
        public int? IsCrux 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IsCrux");
		    }
            set 
		    {
			    SetColumnValue("IsCrux", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Mxid = @"mxid";
            
            public static string Orderid = @"orderid";
            
            public static string Khdh = @"khdh";
            
            public static string Ksh = @"ksh";
            
            public static string Fzfl = @"fzfl";
            
            public static string Mlbm = @"mlbm";
            
            public static string Ddsl = @"ddsl";
            
            public static string Hxjg = @"hxjg";
            
            public static string Ksjg = @"ksjg";
            
            public static string Gylx = @"gylx";
            
            public static string Sfbcpsy = @"sfbcpsy";
            
            public static string Gyxx = @"gyxx";
            
            public static string Xh = @"xh";
            
            public static string Xhsy = @"xhsy";
            
            public static string Xhnz = @"xhnz";
            
            public static string Xhwz = @"xhwz";
            
            public static string Mlsx = @"mlsx";
            
            public static string FlagDelete = @"flagDelete";
            
            public static string Num = @"num";
            
            public static string FlagStatus = @"flagStatus";
            
            public static string Code = @"Code";
            
            public static string Hour = @"Hour";
            
            public static string OrderArtslist = @"OrderArtslist";
            
            public static string ShortX = @"Short";
            
            public static string IsCrux = @"IsCrux";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
