using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData{
    /// <summary>
    /// Strongly-typed collection for the ViewCFByMTM class.
    /// </summary>
    [Serializable]
    public partial class ViewCFByMTMCollection : ReadOnlyList<ViewCFByMTM, ViewCFByMTMCollection>
    {        
        public ViewCFByMTMCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the View_CFByMTM view.
    /// </summary>
    [Serializable]
    public partial class ViewCFByMTM : ReadOnlyRecord<ViewCFByMTM>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("View_CFByMTM", TableType.View, DataService.GetInstance("Nowthwin"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderId = new TableSchema.TableColumn(schema);
                colvarOrderId.ColumnName = "orderId";
                colvarOrderId.DataType = DbType.String;
                colvarOrderId.MaxLength = 50;
                colvarOrderId.AutoIncrement = false;
                colvarOrderId.IsNullable = false;
                colvarOrderId.IsPrimaryKey = false;
                colvarOrderId.IsForeignKey = false;
                colvarOrderId.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderId);
                
                TableSchema.TableColumn colvarCustomerId = new TableSchema.TableColumn(schema);
                colvarCustomerId.ColumnName = "customerId";
                colvarCustomerId.DataType = DbType.String;
                colvarCustomerId.MaxLength = 50;
                colvarCustomerId.AutoIncrement = false;
                colvarCustomerId.IsNullable = true;
                colvarCustomerId.IsPrimaryKey = false;
                colvarCustomerId.IsForeignKey = false;
                colvarCustomerId.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomerId);
                
                TableSchema.TableColumn colvarProject = new TableSchema.TableColumn(schema);
                colvarProject.ColumnName = "project";
                colvarProject.DataType = DbType.String;
                colvarProject.MaxLength = 20;
                colvarProject.AutoIncrement = false;
                colvarProject.IsNullable = true;
                colvarProject.IsPrimaryKey = false;
                colvarProject.IsForeignKey = false;
                colvarProject.IsReadOnly = false;
                
                schema.Columns.Add(colvarProject);
                
                TableSchema.TableColumn colvarOrderType = new TableSchema.TableColumn(schema);
                colvarOrderType.ColumnName = "orderType";
                colvarOrderType.DataType = DbType.String;
                colvarOrderType.MaxLength = 20;
                colvarOrderType.AutoIncrement = false;
                colvarOrderType.IsNullable = true;
                colvarOrderType.IsPrimaryKey = false;
                colvarOrderType.IsForeignKey = false;
                colvarOrderType.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderType);
                
                TableSchema.TableColumn colvarCoatType = new TableSchema.TableColumn(schema);
                colvarCoatType.ColumnName = "coatType";
                colvarCoatType.DataType = DbType.String;
                colvarCoatType.MaxLength = 50;
                colvarCoatType.AutoIncrement = false;
                colvarCoatType.IsNullable = true;
                colvarCoatType.IsPrimaryKey = false;
                colvarCoatType.IsForeignKey = false;
                colvarCoatType.IsReadOnly = false;
                
                schema.Columns.Add(colvarCoatType);
                
                TableSchema.TableColumn colvarBodyType = new TableSchema.TableColumn(schema);
                colvarBodyType.ColumnName = "bodyType";
                colvarBodyType.DataType = DbType.String;
                colvarBodyType.MaxLength = 50;
                colvarBodyType.AutoIncrement = false;
                colvarBodyType.IsNullable = true;
                colvarBodyType.IsPrimaryKey = false;
                colvarBodyType.IsForeignKey = false;
                colvarBodyType.IsReadOnly = false;
                
                schema.Columns.Add(colvarBodyType);
                
                TableSchema.TableColumn colvarFabric = new TableSchema.TableColumn(schema);
                colvarFabric.ColumnName = "fabric";
                colvarFabric.DataType = DbType.String;
                colvarFabric.MaxLength = 20;
                colvarFabric.AutoIncrement = false;
                colvarFabric.IsNullable = true;
                colvarFabric.IsPrimaryKey = false;
                colvarFabric.IsForeignKey = false;
                colvarFabric.IsReadOnly = false;
                
                schema.Columns.Add(colvarFabric);
                
                TableSchema.TableColumn colvarMflxx = new TableSchema.TableColumn(schema);
                colvarMflxx.ColumnName = "mflxx";
                colvarMflxx.DataType = DbType.String;
                colvarMflxx.MaxLength = -1;
                colvarMflxx.AutoIncrement = false;
                colvarMflxx.IsNullable = true;
                colvarMflxx.IsPrimaryKey = false;
                colvarMflxx.IsForeignKey = false;
                colvarMflxx.IsReadOnly = false;
                
                schema.Columns.Add(colvarMflxx);
                
                TableSchema.TableColumn colvarOrderTime = new TableSchema.TableColumn(schema);
                colvarOrderTime.ColumnName = "orderTime";
                colvarOrderTime.DataType = DbType.DateTime;
                colvarOrderTime.MaxLength = 0;
                colvarOrderTime.AutoIncrement = false;
                colvarOrderTime.IsNullable = true;
                colvarOrderTime.IsPrimaryKey = false;
                colvarOrderTime.IsForeignKey = false;
                colvarOrderTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderTime);
                
                TableSchema.TableColumn colvarDeliveryTime = new TableSchema.TableColumn(schema);
                colvarDeliveryTime.ColumnName = "deliveryTime";
                colvarDeliveryTime.DataType = DbType.DateTime;
                colvarDeliveryTime.MaxLength = 0;
                colvarDeliveryTime.AutoIncrement = false;
                colvarDeliveryTime.IsNullable = true;
                colvarDeliveryTime.IsPrimaryKey = false;
                colvarDeliveryTime.IsForeignKey = false;
                colvarDeliveryTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryTime);
                
                TableSchema.TableColumn colvarSpecialTime = new TableSchema.TableColumn(schema);
                colvarSpecialTime.ColumnName = "specialTime";
                colvarSpecialTime.DataType = DbType.Int32;
                colvarSpecialTime.MaxLength = 0;
                colvarSpecialTime.AutoIncrement = false;
                colvarSpecialTime.IsNullable = true;
                colvarSpecialTime.IsPrimaryKey = false;
                colvarSpecialTime.IsForeignKey = false;
                colvarSpecialTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarSpecialTime);
                
                TableSchema.TableColumn colvarSpecialCode = new TableSchema.TableColumn(schema);
                colvarSpecialCode.ColumnName = "specialCode";
                colvarSpecialCode.DataType = DbType.String;
                colvarSpecialCode.MaxLength = 100;
                colvarSpecialCode.AutoIncrement = false;
                colvarSpecialCode.IsNullable = true;
                colvarSpecialCode.IsPrimaryKey = false;
                colvarSpecialCode.IsForeignKey = false;
                colvarSpecialCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarSpecialCode);
                
                TableSchema.TableColumn colvarStyles = new TableSchema.TableColumn(schema);
                colvarStyles.ColumnName = "styles";
                colvarStyles.DataType = DbType.String;
                colvarStyles.MaxLength = 100;
                colvarStyles.AutoIncrement = false;
                colvarStyles.IsNullable = true;
                colvarStyles.IsPrimaryKey = false;
                colvarStyles.IsForeignKey = false;
                colvarStyles.IsReadOnly = false;
                
                schema.Columns.Add(colvarStyles);
                
                TableSchema.TableColumn colvarStylesResult = new TableSchema.TableColumn(schema);
                colvarStylesResult.ColumnName = "stylesResult";
                colvarStylesResult.DataType = DbType.String;
                colvarStylesResult.MaxLength = 100;
                colvarStylesResult.AutoIncrement = false;
                colvarStylesResult.IsNullable = true;
                colvarStylesResult.IsPrimaryKey = false;
                colvarStylesResult.IsForeignKey = false;
                colvarStylesResult.IsReadOnly = false;
                
                schema.Columns.Add(colvarStylesResult);
                
                TableSchema.TableColumn colvarNumbers = new TableSchema.TableColumn(schema);
                colvarNumbers.ColumnName = "numbers";
                colvarNumbers.DataType = DbType.Int32;
                colvarNumbers.MaxLength = 0;
                colvarNumbers.AutoIncrement = false;
                colvarNumbers.IsNullable = true;
                colvarNumbers.IsPrimaryKey = false;
                colvarNumbers.IsForeignKey = false;
                colvarNumbers.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumbers);
                
                TableSchema.TableColumn colvarSupportingWay = new TableSchema.TableColumn(schema);
                colvarSupportingWay.ColumnName = "supportingWay";
                colvarSupportingWay.DataType = DbType.String;
                colvarSupportingWay.MaxLength = 50;
                colvarSupportingWay.AutoIncrement = false;
                colvarSupportingWay.IsNullable = true;
                colvarSupportingWay.IsPrimaryKey = false;
                colvarSupportingWay.IsForeignKey = false;
                colvarSupportingWay.IsReadOnly = false;
                
                schema.Columns.Add(colvarSupportingWay);
                
                TableSchema.TableColumn colvarSizes = new TableSchema.TableColumn(schema);
                colvarSizes.ColumnName = "sizes";
                colvarSizes.DataType = DbType.String;
                colvarSizes.MaxLength = 50;
                colvarSizes.AutoIncrement = false;
                colvarSizes.IsNullable = true;
                colvarSizes.IsPrimaryKey = false;
                colvarSizes.IsForeignKey = false;
                colvarSizes.IsReadOnly = false;
                
                schema.Columns.Add(colvarSizes);
                
                TableSchema.TableColumn colvarCustomer = new TableSchema.TableColumn(schema);
                colvarCustomer.ColumnName = "customer";
                colvarCustomer.DataType = DbType.String;
                colvarCustomer.MaxLength = 100;
                colvarCustomer.AutoIncrement = false;
                colvarCustomer.IsNullable = true;
                colvarCustomer.IsPrimaryKey = false;
                colvarCustomer.IsForeignKey = false;
                colvarCustomer.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomer);
                
                TableSchema.TableColumn colvarCreateTime = new TableSchema.TableColumn(schema);
                colvarCreateTime.ColumnName = "createTime";
                colvarCreateTime.DataType = DbType.DateTime;
                colvarCreateTime.MaxLength = 0;
                colvarCreateTime.AutoIncrement = false;
                colvarCreateTime.IsNullable = true;
                colvarCreateTime.IsPrimaryKey = false;
                colvarCreateTime.IsForeignKey = false;
                colvarCreateTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateTime);
                
                TableSchema.TableColumn colvarOrderStatus = new TableSchema.TableColumn(schema);
                colvarOrderStatus.ColumnName = "orderStatus";
                colvarOrderStatus.DataType = DbType.String;
                colvarOrderStatus.MaxLength = 50;
                colvarOrderStatus.AutoIncrement = false;
                colvarOrderStatus.IsNullable = true;
                colvarOrderStatus.IsPrimaryKey = false;
                colvarOrderStatus.IsForeignKey = false;
                colvarOrderStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderStatus);
                
                TableSchema.TableColumn colvarCreateDate = new TableSchema.TableColumn(schema);
                colvarCreateDate.ColumnName = "createDate";
                colvarCreateDate.DataType = DbType.DateTime;
                colvarCreateDate.MaxLength = 0;
                colvarCreateDate.AutoIncrement = false;
                colvarCreateDate.IsNullable = true;
                colvarCreateDate.IsPrimaryKey = false;
                colvarCreateDate.IsForeignKey = false;
                colvarCreateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreateDate);
                
                TableSchema.TableColumn colvarPbcd = new TableSchema.TableColumn(schema);
                colvarPbcd.ColumnName = "pbcd";
                colvarPbcd.DataType = DbType.String;
                colvarPbcd.MaxLength = 50;
                colvarPbcd.AutoIncrement = false;
                colvarPbcd.IsNullable = true;
                colvarPbcd.IsPrimaryKey = false;
                colvarPbcd.IsForeignKey = false;
                colvarPbcd.IsReadOnly = false;
                
                schema.Columns.Add(colvarPbcd);
                
                TableSchema.TableColumn colvarGydm = new TableSchema.TableColumn(schema);
                colvarGydm.ColumnName = "gydm";
                colvarGydm.DataType = DbType.String;
                colvarGydm.MaxLength = 100;
                colvarGydm.AutoIncrement = false;
                colvarGydm.IsNullable = true;
                colvarGydm.IsPrimaryKey = false;
                colvarGydm.IsForeignKey = false;
                colvarGydm.IsReadOnly = false;
                
                schema.Columns.Add(colvarGydm);
                
                TableSchema.TableColumn colvarAudittime = new TableSchema.TableColumn(schema);
                colvarAudittime.ColumnName = "audittime";
                colvarAudittime.DataType = DbType.DateTime;
                colvarAudittime.MaxLength = 0;
                colvarAudittime.AutoIncrement = false;
                colvarAudittime.IsNullable = true;
                colvarAudittime.IsPrimaryKey = false;
                colvarAudittime.IsForeignKey = false;
                colvarAudittime.IsReadOnly = false;
                
                schema.Columns.Add(colvarAudittime);
                
                TableSchema.TableColumn colvarSfbcpsy = new TableSchema.TableColumn(schema);
                colvarSfbcpsy.ColumnName = "sfbcpsy";
                colvarSfbcpsy.DataType = DbType.String;
                colvarSfbcpsy.MaxLength = 50;
                colvarSfbcpsy.AutoIncrement = false;
                colvarSfbcpsy.IsNullable = true;
                colvarSfbcpsy.IsPrimaryKey = false;
                colvarSfbcpsy.IsForeignKey = false;
                colvarSfbcpsy.IsReadOnly = false;
                
                schema.Columns.Add(colvarSfbcpsy);
                
                TableSchema.TableColumn colvarTzecode = new TableSchema.TableColumn(schema);
                colvarTzecode.ColumnName = "tzecode";
                colvarTzecode.DataType = DbType.String;
                colvarTzecode.MaxLength = 50;
                colvarTzecode.AutoIncrement = false;
                colvarTzecode.IsNullable = true;
                colvarTzecode.IsPrimaryKey = false;
                colvarTzecode.IsForeignKey = false;
                colvarTzecode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTzecode);
                
                TableSchema.TableColumn colvarScggdh = new TableSchema.TableColumn(schema);
                colvarScggdh.ColumnName = "SCGGDH";
                colvarScggdh.DataType = DbType.String;
                colvarScggdh.MaxLength = 50;
                colvarScggdh.AutoIncrement = false;
                colvarScggdh.IsNullable = true;
                colvarScggdh.IsPrimaryKey = false;
                colvarScggdh.IsForeignKey = false;
                colvarScggdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarScggdh);
                
                TableSchema.TableColumn colvarModifyTime = new TableSchema.TableColumn(schema);
                colvarModifyTime.ColumnName = "modifyTime";
                colvarModifyTime.DataType = DbType.DateTime;
                colvarModifyTime.MaxLength = 0;
                colvarModifyTime.AutoIncrement = false;
                colvarModifyTime.IsNullable = true;
                colvarModifyTime.IsPrimaryKey = false;
                colvarModifyTime.IsForeignKey = false;
                colvarModifyTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifyTime);
                
                TableSchema.TableColumn colvarPbcdName = new TableSchema.TableColumn(schema);
                colvarPbcdName.ColumnName = "pbcdName";
                colvarPbcdName.DataType = DbType.String;
                colvarPbcdName.MaxLength = 50;
                colvarPbcdName.AutoIncrement = false;
                colvarPbcdName.IsNullable = true;
                colvarPbcdName.IsPrimaryKey = false;
                colvarPbcdName.IsForeignKey = false;
                colvarPbcdName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPbcdName);
                
                TableSchema.TableColumn colvarEndTime = new TableSchema.TableColumn(schema);
                colvarEndTime.ColumnName = "endTime";
                colvarEndTime.DataType = DbType.DateTime;
                colvarEndTime.MaxLength = 0;
                colvarEndTime.AutoIncrement = false;
                colvarEndTime.IsNullable = true;
                colvarEndTime.IsPrimaryKey = false;
                colvarEndTime.IsForeignKey = false;
                colvarEndTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarEndTime);
                
                TableSchema.TableColumn colvarFlagStatus = new TableSchema.TableColumn(schema);
                colvarFlagStatus.ColumnName = "flagStatus";
                colvarFlagStatus.DataType = DbType.Int32;
                colvarFlagStatus.MaxLength = 0;
                colvarFlagStatus.AutoIncrement = false;
                colvarFlagStatus.IsNullable = true;
                colvarFlagStatus.IsPrimaryKey = false;
                colvarFlagStatus.IsForeignKey = false;
                colvarFlagStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarFlagStatus);
                
                TableSchema.TableColumn colvarResources = new TableSchema.TableColumn(schema);
                colvarResources.ColumnName = "resources";
                colvarResources.DataType = DbType.String;
                colvarResources.MaxLength = 1000;
                colvarResources.AutoIncrement = false;
                colvarResources.IsNullable = true;
                colvarResources.IsPrimaryKey = false;
                colvarResources.IsForeignKey = false;
                colvarResources.IsReadOnly = false;
                
                schema.Columns.Add(colvarResources);
                
                TableSchema.TableColumn colvarCuttime = new TableSchema.TableColumn(schema);
                colvarCuttime.ColumnName = "CUTTIME";
                colvarCuttime.DataType = DbType.DateTime;
                colvarCuttime.MaxLength = 0;
                colvarCuttime.AutoIncrement = false;
                colvarCuttime.IsNullable = true;
                colvarCuttime.IsPrimaryKey = false;
                colvarCuttime.IsForeignKey = false;
                colvarCuttime.IsReadOnly = false;
                
                schema.Columns.Add(colvarCuttime);
                
                TableSchema.TableColumn colvarResourcesnum = new TableSchema.TableColumn(schema);
                colvarResourcesnum.ColumnName = "resourcesnum";
                colvarResourcesnum.DataType = DbType.String;
                colvarResourcesnum.MaxLength = 100;
                colvarResourcesnum.AutoIncrement = false;
                colvarResourcesnum.IsNullable = true;
                colvarResourcesnum.IsPrimaryKey = false;
                colvarResourcesnum.IsForeignKey = false;
                colvarResourcesnum.IsReadOnly = false;
                
                schema.Columns.Add(colvarResourcesnum);
                
                TableSchema.TableColumn colvarJobId = new TableSchema.TableColumn(schema);
                colvarJobId.ColumnName = "jobId";
                colvarJobId.DataType = DbType.String;
                colvarJobId.MaxLength = 50;
                colvarJobId.AutoIncrement = false;
                colvarJobId.IsNullable = true;
                colvarJobId.IsPrimaryKey = false;
                colvarJobId.IsForeignKey = false;
                colvarJobId.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobId);
                
                TableSchema.TableColumn colvarRes = new TableSchema.TableColumn(schema);
                colvarRes.ColumnName = "res";
                colvarRes.DataType = DbType.String;
                colvarRes.MaxLength = 50;
                colvarRes.AutoIncrement = false;
                colvarRes.IsNullable = true;
                colvarRes.IsPrimaryKey = false;
                colvarRes.IsForeignKey = false;
                colvarRes.IsReadOnly = false;
                
                schema.Columns.Add(colvarRes);
                
                TableSchema.TableColumn colvarClothType = new TableSchema.TableColumn(schema);
                colvarClothType.ColumnName = "ClothType";
                colvarClothType.DataType = DbType.String;
                colvarClothType.MaxLength = 50;
                colvarClothType.AutoIncrement = false;
                colvarClothType.IsNullable = true;
                colvarClothType.IsPrimaryKey = false;
                colvarClothType.IsForeignKey = false;
                colvarClothType.IsReadOnly = false;
                
                schema.Columns.Add(colvarClothType);
                
                TableSchema.TableColumn colvarScjhrq = new TableSchema.TableColumn(schema);
                colvarScjhrq.ColumnName = "SCJHRQ";
                colvarScjhrq.DataType = DbType.DateTime;
                colvarScjhrq.MaxLength = 0;
                colvarScjhrq.AutoIncrement = false;
                colvarScjhrq.IsNullable = true;
                colvarScjhrq.IsPrimaryKey = false;
                colvarScjhrq.IsForeignKey = false;
                colvarScjhrq.IsReadOnly = false;
                
                schema.Columns.Add(colvarScjhrq);
                
                TableSchema.TableColumn colvarKhdh = new TableSchema.TableColumn(schema);
                colvarKhdh.ColumnName = "KHDH";
                colvarKhdh.DataType = DbType.String;
                colvarKhdh.MaxLength = 12;
                colvarKhdh.AutoIncrement = false;
                colvarKhdh.IsNullable = true;
                colvarKhdh.IsPrimaryKey = false;
                colvarKhdh.IsForeignKey = false;
                colvarKhdh.IsReadOnly = false;
                
                schema.Columns.Add(colvarKhdh);
                
                TableSchema.TableColumn colvarXtwpmc = new TableSchema.TableColumn(schema);
                colvarXtwpmc.ColumnName = "XTWPMC";
                colvarXtwpmc.DataType = DbType.String;
                colvarXtwpmc.MaxLength = 4000;
                colvarXtwpmc.AutoIncrement = false;
                colvarXtwpmc.IsNullable = true;
                colvarXtwpmc.IsPrimaryKey = false;
                colvarXtwpmc.IsForeignKey = false;
                colvarXtwpmc.IsReadOnly = false;
                
                schema.Columns.Add(colvarXtwpmc);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Nowthwin"].AddSchema("View_CFByMTM",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewCFByMTM()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewCFByMTM(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewCFByMTM(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewCFByMTM(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderId")]
        [Bindable(true)]
        public string OrderId 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderId");
		    }
            set 
		    {
			    SetColumnValue("orderId", value);
            }
        }
	      
        [XmlAttribute("CustomerId")]
        [Bindable(true)]
        public string CustomerId 
	    {
		    get
		    {
			    return GetColumnValue<string>("customerId");
		    }
            set 
		    {
			    SetColumnValue("customerId", value);
            }
        }
	      
        [XmlAttribute("Project")]
        [Bindable(true)]
        public string Project 
	    {
		    get
		    {
			    return GetColumnValue<string>("project");
		    }
            set 
		    {
			    SetColumnValue("project", value);
            }
        }
	      
        [XmlAttribute("OrderType")]
        [Bindable(true)]
        public string OrderType 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderType");
		    }
            set 
		    {
			    SetColumnValue("orderType", value);
            }
        }
	      
        [XmlAttribute("CoatType")]
        [Bindable(true)]
        public string CoatType 
	    {
		    get
		    {
			    return GetColumnValue<string>("coatType");
		    }
            set 
		    {
			    SetColumnValue("coatType", value);
            }
        }
	      
        [XmlAttribute("BodyType")]
        [Bindable(true)]
        public string BodyType 
	    {
		    get
		    {
			    return GetColumnValue<string>("bodyType");
		    }
            set 
		    {
			    SetColumnValue("bodyType", value);
            }
        }
	      
        [XmlAttribute("Fabric")]
        [Bindable(true)]
        public string Fabric 
	    {
		    get
		    {
			    return GetColumnValue<string>("fabric");
		    }
            set 
		    {
			    SetColumnValue("fabric", value);
            }
        }
	      
        [XmlAttribute("Mflxx")]
        [Bindable(true)]
        public string Mflxx 
	    {
		    get
		    {
			    return GetColumnValue<string>("mflxx");
		    }
            set 
		    {
			    SetColumnValue("mflxx", value);
            }
        }
	      
        [XmlAttribute("OrderTime")]
        [Bindable(true)]
        public DateTime? OrderTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("orderTime");
		    }
            set 
		    {
			    SetColumnValue("orderTime", value);
            }
        }
	      
        [XmlAttribute("DeliveryTime")]
        [Bindable(true)]
        public DateTime? DeliveryTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("deliveryTime");
		    }
            set 
		    {
			    SetColumnValue("deliveryTime", value);
            }
        }
	      
        [XmlAttribute("SpecialTime")]
        [Bindable(true)]
        public int? SpecialTime 
	    {
		    get
		    {
			    return GetColumnValue<int?>("specialTime");
		    }
            set 
		    {
			    SetColumnValue("specialTime", value);
            }
        }
	      
        [XmlAttribute("SpecialCode")]
        [Bindable(true)]
        public string SpecialCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("specialCode");
		    }
            set 
		    {
			    SetColumnValue("specialCode", value);
            }
        }
	      
        [XmlAttribute("Styles")]
        [Bindable(true)]
        public string Styles 
	    {
		    get
		    {
			    return GetColumnValue<string>("styles");
		    }
            set 
		    {
			    SetColumnValue("styles", value);
            }
        }
	      
        [XmlAttribute("StylesResult")]
        [Bindable(true)]
        public string StylesResult 
	    {
		    get
		    {
			    return GetColumnValue<string>("stylesResult");
		    }
            set 
		    {
			    SetColumnValue("stylesResult", value);
            }
        }
	      
        [XmlAttribute("Numbers")]
        [Bindable(true)]
        public int? Numbers 
	    {
		    get
		    {
			    return GetColumnValue<int?>("numbers");
		    }
            set 
		    {
			    SetColumnValue("numbers", value);
            }
        }
	      
        [XmlAttribute("SupportingWay")]
        [Bindable(true)]
        public string SupportingWay 
	    {
		    get
		    {
			    return GetColumnValue<string>("supportingWay");
		    }
            set 
		    {
			    SetColumnValue("supportingWay", value);
            }
        }
	      
        [XmlAttribute("Sizes")]
        [Bindable(true)]
        public string Sizes 
	    {
		    get
		    {
			    return GetColumnValue<string>("sizes");
		    }
            set 
		    {
			    SetColumnValue("sizes", value);
            }
        }
	      
        [XmlAttribute("Customer")]
        [Bindable(true)]
        public string Customer 
	    {
		    get
		    {
			    return GetColumnValue<string>("customer");
		    }
            set 
		    {
			    SetColumnValue("customer", value);
            }
        }
	      
        [XmlAttribute("CreateTime")]
        [Bindable(true)]
        public DateTime? CreateTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("createTime");
		    }
            set 
		    {
			    SetColumnValue("createTime", value);
            }
        }
	      
        [XmlAttribute("OrderStatus")]
        [Bindable(true)]
        public string OrderStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("orderStatus");
		    }
            set 
		    {
			    SetColumnValue("orderStatus", value);
            }
        }
	      
        [XmlAttribute("CreateDate")]
        [Bindable(true)]
        public DateTime? CreateDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("createDate");
		    }
            set 
		    {
			    SetColumnValue("createDate", value);
            }
        }
	      
        [XmlAttribute("Pbcd")]
        [Bindable(true)]
        public string Pbcd 
	    {
		    get
		    {
			    return GetColumnValue<string>("pbcd");
		    }
            set 
		    {
			    SetColumnValue("pbcd", value);
            }
        }
	      
        [XmlAttribute("Gydm")]
        [Bindable(true)]
        public string Gydm 
	    {
		    get
		    {
			    return GetColumnValue<string>("gydm");
		    }
            set 
		    {
			    SetColumnValue("gydm", value);
            }
        }
	      
        [XmlAttribute("Audittime")]
        [Bindable(true)]
        public DateTime? Audittime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("audittime");
		    }
            set 
		    {
			    SetColumnValue("audittime", value);
            }
        }
	      
        [XmlAttribute("Sfbcpsy")]
        [Bindable(true)]
        public string Sfbcpsy 
	    {
		    get
		    {
			    return GetColumnValue<string>("sfbcpsy");
		    }
            set 
		    {
			    SetColumnValue("sfbcpsy", value);
            }
        }
	      
        [XmlAttribute("Tzecode")]
        [Bindable(true)]
        public string Tzecode 
	    {
		    get
		    {
			    return GetColumnValue<string>("tzecode");
		    }
            set 
		    {
			    SetColumnValue("tzecode", value);
            }
        }
	      
        [XmlAttribute("Scggdh")]
        [Bindable(true)]
        public string Scggdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("SCGGDH");
		    }
            set 
		    {
			    SetColumnValue("SCGGDH", value);
            }
        }
	      
        [XmlAttribute("ModifyTime")]
        [Bindable(true)]
        public DateTime? ModifyTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("modifyTime");
		    }
            set 
		    {
			    SetColumnValue("modifyTime", value);
            }
        }
	      
        [XmlAttribute("PbcdName")]
        [Bindable(true)]
        public string PbcdName 
	    {
		    get
		    {
			    return GetColumnValue<string>("pbcdName");
		    }
            set 
		    {
			    SetColumnValue("pbcdName", value);
            }
        }
	      
        [XmlAttribute("EndTime")]
        [Bindable(true)]
        public DateTime? EndTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("endTime");
		    }
            set 
		    {
			    SetColumnValue("endTime", value);
            }
        }
	      
        [XmlAttribute("FlagStatus")]
        [Bindable(true)]
        public int? FlagStatus 
	    {
		    get
		    {
			    return GetColumnValue<int?>("flagStatus");
		    }
            set 
		    {
			    SetColumnValue("flagStatus", value);
            }
        }
	      
        [XmlAttribute("Resources")]
        [Bindable(true)]
        public string Resources 
	    {
		    get
		    {
			    return GetColumnValue<string>("resources");
		    }
            set 
		    {
			    SetColumnValue("resources", value);
            }
        }
	      
        [XmlAttribute("Cuttime")]
        [Bindable(true)]
        public DateTime? Cuttime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CUTTIME");
		    }
            set 
		    {
			    SetColumnValue("CUTTIME", value);
            }
        }
	      
        [XmlAttribute("Resourcesnum")]
        [Bindable(true)]
        public string Resourcesnum 
	    {
		    get
		    {
			    return GetColumnValue<string>("resourcesnum");
		    }
            set 
		    {
			    SetColumnValue("resourcesnum", value);
            }
        }
	      
        [XmlAttribute("JobId")]
        [Bindable(true)]
        public string JobId 
	    {
		    get
		    {
			    return GetColumnValue<string>("jobId");
		    }
            set 
		    {
			    SetColumnValue("jobId", value);
            }
        }
	      
        [XmlAttribute("Res")]
        [Bindable(true)]
        public string Res 
	    {
		    get
		    {
			    return GetColumnValue<string>("res");
		    }
            set 
		    {
			    SetColumnValue("res", value);
            }
        }
	      
        [XmlAttribute("ClothType")]
        [Bindable(true)]
        public string ClothType 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClothType");
		    }
            set 
		    {
			    SetColumnValue("ClothType", value);
            }
        }
	      
        [XmlAttribute("Scjhrq")]
        [Bindable(true)]
        public DateTime? Scjhrq 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SCJHRQ");
		    }
            set 
		    {
			    SetColumnValue("SCJHRQ", value);
            }
        }
	      
        [XmlAttribute("Khdh")]
        [Bindable(true)]
        public string Khdh 
	    {
		    get
		    {
			    return GetColumnValue<string>("KHDH");
		    }
            set 
		    {
			    SetColumnValue("KHDH", value);
            }
        }
	      
        [XmlAttribute("Xtwpmc")]
        [Bindable(true)]
        public string Xtwpmc 
	    {
		    get
		    {
			    return GetColumnValue<string>("XTWPMC");
		    }
            set 
		    {
			    SetColumnValue("XTWPMC", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderId = @"orderId";
            
            public static string CustomerId = @"customerId";
            
            public static string Project = @"project";
            
            public static string OrderType = @"orderType";
            
            public static string CoatType = @"coatType";
            
            public static string BodyType = @"bodyType";
            
            public static string Fabric = @"fabric";
            
            public static string Mflxx = @"mflxx";
            
            public static string OrderTime = @"orderTime";
            
            public static string DeliveryTime = @"deliveryTime";
            
            public static string SpecialTime = @"specialTime";
            
            public static string SpecialCode = @"specialCode";
            
            public static string Styles = @"styles";
            
            public static string StylesResult = @"stylesResult";
            
            public static string Numbers = @"numbers";
            
            public static string SupportingWay = @"supportingWay";
            
            public static string Sizes = @"sizes";
            
            public static string Customer = @"customer";
            
            public static string CreateTime = @"createTime";
            
            public static string OrderStatus = @"orderStatus";
            
            public static string CreateDate = @"createDate";
            
            public static string Pbcd = @"pbcd";
            
            public static string Gydm = @"gydm";
            
            public static string Audittime = @"audittime";
            
            public static string Sfbcpsy = @"sfbcpsy";
            
            public static string Tzecode = @"tzecode";
            
            public static string Scggdh = @"SCGGDH";
            
            public static string ModifyTime = @"modifyTime";
            
            public static string PbcdName = @"pbcdName";
            
            public static string EndTime = @"endTime";
            
            public static string FlagStatus = @"flagStatus";
            
            public static string Resources = @"resources";
            
            public static string Cuttime = @"CUTTIME";
            
            public static string Resourcesnum = @"resourcesnum";
            
            public static string JobId = @"jobId";
            
            public static string Res = @"res";
            
            public static string ClothType = @"ClothType";
            
            public static string Scjhrq = @"SCJHRQ";
            
            public static string Khdh = @"KHDH";
            
            public static string Xtwpmc = @"XTWPMC";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
