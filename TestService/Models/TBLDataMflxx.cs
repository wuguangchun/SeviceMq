using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData
{
	/// <summary>
	/// Strongly-typed collection for the TBLDataMflxx class.
	/// </summary>
    [Serializable]
	public partial class TBLDataMflxxCollection : ActiveList<TBLDataMflxx, TBLDataMflxxCollection>
	{	   
		public TBLDataMflxxCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>TBLDataMflxxCollection</returns>
		public TBLDataMflxxCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                TBLDataMflxx o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the T_BLData_Mflxx table.
	/// </summary>
	[Serializable]
	public partial class TBLDataMflxx : ActiveRecord<TBLDataMflxx>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public TBLDataMflxx()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public TBLDataMflxx(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public TBLDataMflxx(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public TBLDataMflxx(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("T_BLData_Mflxx", TableType.Table, DataService.GetInstance("Nowthwin"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarMflxxid = new TableSchema.TableColumn(schema);
				colvarMflxxid.ColumnName = "mflxxid";
				colvarMflxxid.DataType = DbType.Int32;
				colvarMflxxid.MaxLength = 0;
				colvarMflxxid.AutoIncrement = true;
				colvarMflxxid.IsNullable = false;
				colvarMflxxid.IsPrimaryKey = true;
				colvarMflxxid.IsForeignKey = false;
				colvarMflxxid.IsReadOnly = false;
				colvarMflxxid.DefaultSetting = @"";
				colvarMflxxid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMflxxid);
				
				TableSchema.TableColumn colvarMxid = new TableSchema.TableColumn(schema);
				colvarMxid.ColumnName = "mxid";
				colvarMxid.DataType = DbType.Int32;
				colvarMxid.MaxLength = 0;
				colvarMxid.AutoIncrement = false;
				colvarMxid.IsNullable = true;
				colvarMxid.IsPrimaryKey = false;
				colvarMxid.IsForeignKey = false;
				colvarMxid.IsReadOnly = false;
				colvarMxid.DefaultSetting = @"";
				colvarMxid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMxid);
				
				TableSchema.TableColumn colvarOrderid = new TableSchema.TableColumn(schema);
				colvarOrderid.ColumnName = "orderid";
				colvarOrderid.DataType = DbType.String;
				colvarOrderid.MaxLength = 100;
				colvarOrderid.AutoIncrement = false;
				colvarOrderid.IsNullable = true;
				colvarOrderid.IsPrimaryKey = false;
				colvarOrderid.IsForeignKey = false;
				colvarOrderid.IsReadOnly = false;
				colvarOrderid.DefaultSetting = @"";
				colvarOrderid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOrderid);
				
				TableSchema.TableColumn colvarKhdh = new TableSchema.TableColumn(schema);
				colvarKhdh.ColumnName = "khdh";
				colvarKhdh.DataType = DbType.String;
				colvarKhdh.MaxLength = 50;
				colvarKhdh.AutoIncrement = false;
				colvarKhdh.IsNullable = true;
				colvarKhdh.IsPrimaryKey = false;
				colvarKhdh.IsForeignKey = false;
				colvarKhdh.IsReadOnly = false;
				colvarKhdh.DefaultSetting = @"";
				colvarKhdh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKhdh);
				
				TableSchema.TableColumn colvarYlbm = new TableSchema.TableColumn(schema);
				colvarYlbm.ColumnName = "ylbm";
				colvarYlbm.DataType = DbType.String;
				colvarYlbm.MaxLength = 200;
				colvarYlbm.AutoIncrement = false;
				colvarYlbm.IsNullable = true;
				colvarYlbm.IsPrimaryKey = false;
				colvarYlbm.IsForeignKey = false;
				colvarYlbm.IsReadOnly = false;
				colvarYlbm.DefaultSetting = @"";
				colvarYlbm.ForeignKeyTableName = "";
				schema.Columns.Add(colvarYlbm);
				
				TableSchema.TableColumn colvarMtml = new TableSchema.TableColumn(schema);
				colvarMtml.ColumnName = "mtml";
				colvarMtml.DataType = DbType.String;
				colvarMtml.MaxLength = 200;
				colvarMtml.AutoIncrement = false;
				colvarMtml.IsNullable = true;
				colvarMtml.IsPrimaryKey = false;
				colvarMtml.IsForeignKey = false;
				colvarMtml.IsReadOnly = false;
				colvarMtml.DefaultSetting = @"";
				colvarMtml.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMtml);
				
				TableSchema.TableColumn colvarYllx = new TableSchema.TableColumn(schema);
				colvarYllx.ColumnName = "yllx";
				colvarYllx.DataType = DbType.String;
				colvarYllx.MaxLength = 200;
				colvarYllx.AutoIncrement = false;
				colvarYllx.IsNullable = true;
				colvarYllx.IsPrimaryKey = false;
				colvarYllx.IsForeignKey = false;
				colvarYllx.IsReadOnly = false;
				colvarYllx.DefaultSetting = @"";
				colvarYllx.ForeignKeyTableName = "";
				schema.Columns.Add(colvarYllx);
				
				TableSchema.TableColumn colvarYllxmc = new TableSchema.TableColumn(schema);
				colvarYllxmc.ColumnName = "yllxmc";
				colvarYllxmc.DataType = DbType.String;
				colvarYllxmc.MaxLength = 200;
				colvarYllxmc.AutoIncrement = false;
				colvarYllxmc.IsNullable = true;
				colvarYllxmc.IsPrimaryKey = false;
				colvarYllxmc.IsForeignKey = false;
				colvarYllxmc.IsReadOnly = false;
				colvarYllxmc.DefaultSetting = @"";
				colvarYllxmc.ForeignKeyTableName = "";
				schema.Columns.Add(colvarYllxmc);
				
				TableSchema.TableColumn colvarFlagDelete = new TableSchema.TableColumn(schema);
				colvarFlagDelete.ColumnName = "flagDelete";
				colvarFlagDelete.DataType = DbType.Int32;
				colvarFlagDelete.MaxLength = 0;
				colvarFlagDelete.AutoIncrement = false;
				colvarFlagDelete.IsNullable = true;
				colvarFlagDelete.IsPrimaryKey = false;
				colvarFlagDelete.IsForeignKey = false;
				colvarFlagDelete.IsReadOnly = false;
				colvarFlagDelete.DefaultSetting = @"";
				colvarFlagDelete.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFlagDelete);
				
				TableSchema.TableColumn colvarTg = new TableSchema.TableColumn(schema);
				colvarTg.ColumnName = "tg";
				colvarTg.DataType = DbType.String;
				colvarTg.MaxLength = 50;
				colvarTg.AutoIncrement = false;
				colvarTg.IsNullable = true;
				colvarTg.IsPrimaryKey = false;
				colvarTg.IsForeignKey = false;
				colvarTg.IsReadOnly = false;
				colvarTg.DefaultSetting = @"";
				colvarTg.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTg);
				
				TableSchema.TableColumn colvarMltgkd = new TableSchema.TableColumn(schema);
				colvarMltgkd.ColumnName = "mltgkd";
				colvarMltgkd.DataType = DbType.Decimal;
				colvarMltgkd.MaxLength = 0;
				colvarMltgkd.AutoIncrement = false;
				colvarMltgkd.IsNullable = true;
				colvarMltgkd.IsPrimaryKey = false;
				colvarMltgkd.IsForeignKey = false;
				colvarMltgkd.IsReadOnly = false;
				colvarMltgkd.DefaultSetting = @"";
				colvarMltgkd.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMltgkd);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["Nowthwin"].AddSchema("T_BLData_Mflxx",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Mflxxid")]
		[Bindable(true)]
		public int Mflxxid 
		{
			get { return GetColumnValue<int>(Columns.Mflxxid); }
			set { SetColumnValue(Columns.Mflxxid, value); }
		}
		  
		[XmlAttribute("Mxid")]
		[Bindable(true)]
		public int? Mxid 
		{
			get { return GetColumnValue<int?>(Columns.Mxid); }
			set { SetColumnValue(Columns.Mxid, value); }
		}
		  
		[XmlAttribute("Orderid")]
		[Bindable(true)]
		public string Orderid 
		{
			get { return GetColumnValue<string>(Columns.Orderid); }
			set { SetColumnValue(Columns.Orderid, value); }
		}
		  
		[XmlAttribute("Khdh")]
		[Bindable(true)]
		public string Khdh 
		{
			get { return GetColumnValue<string>(Columns.Khdh); }
			set { SetColumnValue(Columns.Khdh, value); }
		}
		  
		[XmlAttribute("Ylbm")]
		[Bindable(true)]
		public string Ylbm 
		{
			get { return GetColumnValue<string>(Columns.Ylbm); }
			set { SetColumnValue(Columns.Ylbm, value); }
		}
		  
		[XmlAttribute("Mtml")]
		[Bindable(true)]
		public string Mtml 
		{
			get { return GetColumnValue<string>(Columns.Mtml); }
			set { SetColumnValue(Columns.Mtml, value); }
		}
		  
		[XmlAttribute("Yllx")]
		[Bindable(true)]
		public string Yllx 
		{
			get { return GetColumnValue<string>(Columns.Yllx); }
			set { SetColumnValue(Columns.Yllx, value); }
		}
		  
		[XmlAttribute("Yllxmc")]
		[Bindable(true)]
		public string Yllxmc 
		{
			get { return GetColumnValue<string>(Columns.Yllxmc); }
			set { SetColumnValue(Columns.Yllxmc, value); }
		}
		  
		[XmlAttribute("FlagDelete")]
		[Bindable(true)]
		public int? FlagDelete 
		{
			get { return GetColumnValue<int?>(Columns.FlagDelete); }
			set { SetColumnValue(Columns.FlagDelete, value); }
		}
		  
		[XmlAttribute("Tg")]
		[Bindable(true)]
		public string Tg 
		{
			get { return GetColumnValue<string>(Columns.Tg); }
			set { SetColumnValue(Columns.Tg, value); }
		}
		  
		[XmlAttribute("Mltgkd")]
		[Bindable(true)]
		public decimal? Mltgkd 
		{
			get { return GetColumnValue<decimal?>(Columns.Mltgkd); }
			set { SetColumnValue(Columns.Mltgkd, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varMxid,string varOrderid,string varKhdh,string varYlbm,string varMtml,string varYllx,string varYllxmc,int? varFlagDelete,string varTg,decimal? varMltgkd)
		{
			TBLDataMflxx item = new TBLDataMflxx();
			
			item.Mxid = varMxid;
			
			item.Orderid = varOrderid;
			
			item.Khdh = varKhdh;
			
			item.Ylbm = varYlbm;
			
			item.Mtml = varMtml;
			
			item.Yllx = varYllx;
			
			item.Yllxmc = varYllxmc;
			
			item.FlagDelete = varFlagDelete;
			
			item.Tg = varTg;
			
			item.Mltgkd = varMltgkd;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varMflxxid,int? varMxid,string varOrderid,string varKhdh,string varYlbm,string varMtml,string varYllx,string varYllxmc,int? varFlagDelete,string varTg,decimal? varMltgkd)
		{
			TBLDataMflxx item = new TBLDataMflxx();
			
				item.Mflxxid = varMflxxid;
			
				item.Mxid = varMxid;
			
				item.Orderid = varOrderid;
			
				item.Khdh = varKhdh;
			
				item.Ylbm = varYlbm;
			
				item.Mtml = varMtml;
			
				item.Yllx = varYllx;
			
				item.Yllxmc = varYllxmc;
			
				item.FlagDelete = varFlagDelete;
			
				item.Tg = varTg;
			
				item.Mltgkd = varMltgkd;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn MflxxidColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn MxidColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn OrderidColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn KhdhColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn YlbmColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn MtmlColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn YllxColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn YllxmcColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn FlagDeleteColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn TgColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn MltgkdColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Mflxxid = @"mflxxid";
			 public static string Mxid = @"mxid";
			 public static string Orderid = @"orderid";
			 public static string Khdh = @"khdh";
			 public static string Ylbm = @"ylbm";
			 public static string Mtml = @"mtml";
			 public static string Yllx = @"yllx";
			 public static string Yllxmc = @"yllxmc";
			 public static string FlagDelete = @"flagDelete";
			 public static string Tg = @"tg";
			 public static string Mltgkd = @"mltgkd";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
