using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace APSData
{
    /// <summary>
    /// Controller class for T_Analysis_OutputListWithCode_TZShirt
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TAnalysisOutputListWithCodeTZShirtController
    {
        // Preload our schema..
        TAnalysisOutputListWithCodeTZShirt thisSchemaLoad = new TAnalysisOutputListWithCodeTZShirt();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TAnalysisOutputListWithCodeTZShirtCollection FetchAll()
        {
            TAnalysisOutputListWithCodeTZShirtCollection coll = new TAnalysisOutputListWithCodeTZShirtCollection();
            Query qry = new Query(TAnalysisOutputListWithCodeTZShirt.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAnalysisOutputListWithCodeTZShirtCollection FetchByID(object Pkid)
        {
            TAnalysisOutputListWithCodeTZShirtCollection coll = new TAnalysisOutputListWithCodeTZShirtCollection().Where("PKID", Pkid).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TAnalysisOutputListWithCodeTZShirtCollection FetchByQuery(Query qry)
        {
            TAnalysisOutputListWithCodeTZShirtCollection coll = new TAnalysisOutputListWithCodeTZShirtCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Pkid)
        {
            return (TAnalysisOutputListWithCodeTZShirt.Delete(Pkid) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Pkid)
        {
            return (TAnalysisOutputListWithCodeTZShirt.Destroy(Pkid) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Plans,string Scgydm,DateTime? Scjhrq,string Scyspd,string Schtbh,string Scggdh,string Scggbz,string Schtsl,string Schtxh,string Xtwpmc,string Xtwpks,string Xtwpys,string Ptfs,string Xtwldm,string Sckhxm,string Scjhdd,string Scjhbz,int Clothtype,int CM35,int Jiaji,int Guowai,int Miantang,int Yangpinban,int Peijian,int Isfangge,string Banzu,DateTime? CreateTime,string Pkid)
	    {
		    TAnalysisOutputListWithCodeTZShirt item = new TAnalysisOutputListWithCodeTZShirt();
		    
            item.Plans = Plans;
            
            item.Scgydm = Scgydm;
            
            item.Scjhrq = Scjhrq;
            
            item.Scyspd = Scyspd;
            
            item.Schtbh = Schtbh;
            
            item.Scggdh = Scggdh;
            
            item.Scggbz = Scggbz;
            
            item.Schtsl = Schtsl;
            
            item.Schtxh = Schtxh;
            
            item.Xtwpmc = Xtwpmc;
            
            item.Xtwpks = Xtwpks;
            
            item.Xtwpys = Xtwpys;
            
            item.Ptfs = Ptfs;
            
            item.Xtwldm = Xtwldm;
            
            item.Sckhxm = Sckhxm;
            
            item.Scjhdd = Scjhdd;
            
            item.Scjhbz = Scjhbz;
            
            item.Clothtype = Clothtype;
            
            item.CM35 = CM35;
            
            item.Jiaji = Jiaji;
            
            item.Guowai = Guowai;
            
            item.Miantang = Miantang;
            
            item.Yangpinban = Yangpinban;
            
            item.Peijian = Peijian;
            
            item.Isfangge = Isfangge;
            
            item.Banzu = Banzu;
            
            item.CreateTime = CreateTime;
            
            item.Pkid = Pkid;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(string Plans,string Scgydm,DateTime? Scjhrq,string Scyspd,string Schtbh,string Scggdh,string Scggbz,string Schtsl,string Schtxh,string Xtwpmc,string Xtwpks,string Xtwpys,string Ptfs,string Xtwldm,string Sckhxm,string Scjhdd,string Scjhbz,int Clothtype,int CM35,int Jiaji,int Guowai,int Miantang,int Yangpinban,int Peijian,int Isfangge,string Banzu,DateTime? CreateTime,string Pkid)
	    {
		    TAnalysisOutputListWithCodeTZShirt item = new TAnalysisOutputListWithCodeTZShirt();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Plans = Plans;
				
			item.Scgydm = Scgydm;
				
			item.Scjhrq = Scjhrq;
				
			item.Scyspd = Scyspd;
				
			item.Schtbh = Schtbh;
				
			item.Scggdh = Scggdh;
				
			item.Scggbz = Scggbz;
				
			item.Schtsl = Schtsl;
				
			item.Schtxh = Schtxh;
				
			item.Xtwpmc = Xtwpmc;
				
			item.Xtwpks = Xtwpks;
				
			item.Xtwpys = Xtwpys;
				
			item.Ptfs = Ptfs;
				
			item.Xtwldm = Xtwldm;
				
			item.Sckhxm = Sckhxm;
				
			item.Scjhdd = Scjhdd;
				
			item.Scjhbz = Scjhbz;
				
			item.Clothtype = Clothtype;
				
			item.CM35 = CM35;
				
			item.Jiaji = Jiaji;
				
			item.Guowai = Guowai;
				
			item.Miantang = Miantang;
				
			item.Yangpinban = Yangpinban;
				
			item.Peijian = Peijian;
				
			item.Isfangge = Isfangge;
				
			item.Banzu = Banzu;
				
			item.CreateTime = CreateTime;
				
			item.Pkid = Pkid;
				
	        item.Save(UserName);
	    }
    }
}
